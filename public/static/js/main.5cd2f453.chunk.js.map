{"version":3,"sources":["pages/Applications/ApplicationTile/ApplicationTile.module.scss","enums.ts","Providers/DashboardPageNavigationProvider.tsx","Providers/SessionStorageProvider.tsx","hooks/useDashboardPageNavigation.ts","components/SideMenu/MenuSections/GeneralSection.tsx","hooks/useSessionStorage.ts","Providers/PinnedAppsContext.tsx","hooks/usePinnedApps.ts","components/Text/Text.tsx","components/Thumbnail/Thumbnail.tsx","Providers/FocusedAppContextProvider.tsx","hooks/useFocusedApplication.ts","serverApiMocks.ts","services/DashboardServerApi/DashboardServerApi.ts","Providers/ServerApiContext.tsx","hooks/useServerApiContext.ts","components/SideMenu/MenuSections/PinnedSection.tsx","components/SideMenu/MenuSections/LoggedInUserSection.tsx","components/SideMenu/MenuSections/Footer.tsx","components/SideMenu/SideMenu.tsx","components/Portal/Portal.tsx","pages/Dashboard/DashboardTile/DashboardTile.tsx","pages/Dashboard/AppLoader.tsx","components/PageTitle/PageTitle.tsx","components/Skeleton/DashboardTile.tsx","pages/Dashboard/Dashboard.tsx","Providers/AnimationsContextProvider.ts","hooks/useFetch.ts","components/Loader/Loader.tsx","components/PageTitle/PageTitleAction.tsx","pages/Nodes/NodeSettings/NodeSettings.tsx","pages/Nodes/NodeCardAnimations/OpenNodeSettingsAnimation.tsx","hooks/useAnimationsUtils.ts","components/SkeletonShimmer/SkeletonShimmer.tsx","pages/Nodes/NodeCard/NodeCardSummary.tsx","pages/Nodes/NodeCard/NodeCardTypography.tsx","pages/Applications/Applications.tsx","pages/Nodes/NodeCard/NodeCard.tsx","pages/Applications/ViewButton/ViewButton.tsx","pages/Nodes/NodesPage.tsx","utils/CamelCaseConverter.ts","components/PinnApp/PinnApp.tsx","pages/Applications/TileOptionsMenu/TileOptionsMenu.tsx","pages/Applications/ApplicationTile/ApplicationTile.tsx","hooks/useApplicationDND.ts","pages/Applications/RearrangeButton/RearrangeButton.tsx","components/FocusedApp/FocusedAppActions.tsx","components/FocusedApp/FocusedApp.tsx","components/App/App.tsx","components/AppWithProviders/AppWithProviders.tsx","serviceWorker.js","index.tsx","pages/Applications/RearrangeButton/RearrangeButton.module.scss","components/PageTitle/PageTitle.module.scss","pages/Applications/ViewButton/ViewButton.module.scss","pages/Dashboard/DashboardTile/DashboardTile.module.scss","pages/Nodes/NodeCardAnimations/Animations.module.scss","components/App/App.module.scss","pages/Applications/TileOptionsMenu/TileOptionsMenu.module.scss","pages/Nodes/NodeSettings/NodeSettings.module.scss","components/FocusedApp/FocusedApp.module.scss","components/Thumbnail/Thumbnail.module.scss","pages/Nodes/NodePage.module.scss","components/SideMenu/SideMenu.module.scss","components/PinnApp/PinnApp.module.scss","pages/Dashboard/Dashboard.module.scss","components/Loader/Loader.module.scss","pages/Applications/Applications.module.scss","assets/img/react_logo.svg","pages/Nodes/NodeCard/NodeCard.module.scss"],"names":["module","exports","DashboardPages","AppsPageFilters","NodePageFilters","SessionStorageGroups","DashboardPageNavigation","createContext","currentDashboardPage","ApplicationPage","selectDashboardPage","DashboardPageNavigationProvider","children","useState","setCurrentDashboardPage","Provider","value","useDashboardPageNavigation","useContext","GeneralSection","className","css","generalSectionWrapper","sideMenuTitle","pageName","DashboardPage","icon","faLaptopCode","size","sideMenuItemIcon","menuItemText","faGripHorizontal","SettingsPage","faProjectDiagram","HelpPage","faHeadset","SideMenuItem","onClick","classNames","sideMenuItem","selected","SessionStorageContext","userSessionId","storageId","SessionStorageProvider","innitialStorrageStruct","PinnedApps","AppPage","DevicesPage","localStorage","getItem","setItem","JSON","stringify","useSessionStorage","setOrCreateStorageGroupItem","groupName","unique","payload","groups","getStorageGroups","group","item","storage","parse","saveToStorage","removeFromStorage","storageGroupItemName","getAllItems","getStorageItem","PinnedAppsContext","pinnedAppsList","pinnApp","getPinnedApp","name","uuid","removeApp","PinnedAppsContextProvider","generatePinnedAppList","pinnedAppsFromStorage","Object","keys","map","pinnedAppId","setPinnedListApps","appDetails","uuidToRemove","usePinnedAppsContext","Text","fontSize","color","weight","width","skeletonColor","showSkeleton","commonStyle","fontFamily","fontWeight","skeletonStyles","backgroundColor","content","style","Thumbnail","inDndState","classes","smallWrapper","normalWrapper","classNamesHelper","withDndStyles","thumbnailText","charAt","toUpperCase","FocusedApplicationContext","focusedAppStreams","currentAppName","setCurrentFocusedApp","_st","removeFromFocus","currentAppId","FocusedAppContextProvider","setCurrentAppName","setCurrentAppId","setAppSteamDetails","html","script","useFocusedApplication","thumbnail","require","DashboardServerApi","makeSenseApi","window","MkSAPIBuilder","GetInstance","getApplicationThumbnail","console","log","Promise","resolve","getNodeDetails","GetNodeInfo","response","_error","data","getNodeSettings","all","getNodeHtmlSettings","getNodeScriptsSettings","then","nodeSettingsFiles","scripts","getAppData","getAppHtml","getAppScripts","GetFileContent","ui_type","file_name","file_type","getNodeList","reject","Webface","GetUserNodeList","nodes","error","this","ConnectGateway","Gateway","OnGatewayDataArrivedCallback","OnGatewayAdminCallback","ServerApiContext","dashboardServerApi","DashboardContext","useServerApiContext","PinnedSection","pinnedSectionWrapper","length","pinnedEmptyState","explanation","key","PinnedAppItem","ref","React","isLoading","setIsLoading","openPinnedApp","event","a","target","current","firstChild","htmlStream","scriptStream","FocusedApp","pinnedApp","pinnedContentWrapper","pinnedAppText","LoggedInUserSection","loggedInUserSectionWrapper","userThumbnail","userName","userNameCollapsed","userActions","Footer","isMinimized","doMinimize","footerSection","signoutButton","faSignOutAlt","minimizeSideMenuIcon","disabled","faAngleDoubleLeft","faAngleLeft","SideMenu","setIsMinimized","isClosed","setIsClosed","document","addEventListener","handleClick","removeEventListener","e","contains","sideMenuWrapper","minimizedView","closed","ownState","Portal","context","state","iframeRoot","createIframeContent","hexxStream","hexString","toString","parstedString","i","substr","String","fromCharCode","parseInt","htmlString","decodeDomProperty","props","iframeWrapper","ReactDOM","findDOMNode","contentDocument","open","write","close","title","display","height","frameBorder","contextType","initialDashboardTileState","isMkAppOpen","DashboardTile","renderThumbnail","description","dashboardThumbnailWrapper","textThumbnailLarge","textThumbnail","openMKAppMainView","setState","closeMKAppMainView","last6chars","substring","onDoubleClick","dashboardWrapper","smartHome","dashboardTitle","dashboardContent","closeOnEsc","modal","mkAppModalWrapper","onClose","innitialState","appThumbnail","mkAppLoadedData","appProps","AppLoader","mkAppInitData","nodeDetails","render","PageTitle","actions","theme","openSideMenu","pageTitle","thin","sideMenuHamburger","faBars","pageTitleContent","pageTitleName","currentAppActions","Children","child","DashboardTileSkeleton","innitialDashboardsPageState","appList","DashboardsPage","underConstruction","pageContentWrapper","mkApp","index","loadedProps","marginTop","textAlign","zIndex","background","position","boxShadow","AnimationsContext","nodePageRef","useFetch","fetcherFunction","setData","useEffect","Error","fetchData","Loader","loading","spinner","PageTitleAction","doAction","text","actionActive","actionItem","active","iconWrapper","actionItemText","NodeSettings","deviceUuid","nodeName","fetcherFucntion","useCallback","nodeSettingsData","nodeSettingsWrapper","nodeSettingsTitle","faTimes","nodeSettingsContent","OpenNodeSettingsAnimation","isOpened","nodeCardRef","calcDistanceFromParentTop","nodePageTop","getClientRects","top","refTop","useAnimationsUtils","translateY","transform","transitionClassNames","enter","enterDone","exit","exitActive","exitDone","timeout","in","animationBaseState","cardSettingsOpenned","cardSettingsClosed","DeviceTypes","SkeletonShimmer","shimmerAnimations","keyframes","Shimmer","styled","div","Subtitle","CardText","AppsPageStorageItems","NodeCardSummary","onNodeSettingsClick","type","isOnline","online","nodeCardSummaryWrapper","customClassName","deviceType","deviceName","deviceId","deviceStatus","CardIconSection","section","IconSection","Master","faHdd","faCodeBranch","SummaryOptionsMenu","deviceContentWrapper","deviceSettingsMenu","deviceSettingsMenuIcon","CardSection","cardSectionText","NodeCard","cardSettingOpenned","setCardSettingsOpenned","cardWrapper","hovered","ChangeViewModes","filter","setFilter","isActionMenuOpen","setIsActionMenuOpen","viewFilterWrapper","faSortAmountDown","afaSortAmountDown","selectedView","ActionMenu","useRef","useLayoutEffect","doActionClick","selectedFilter","appear","actionMenu","actionMenuItem","All","Available","ViewFilterFucntions","nodeList","node","MachinesOnly","NodesPage","pageRef","machinesOnly","setMachinesOnly","pageTitleCustomWrapper","MACHINES_ONLY","filterMachinesOnly","filterNodeList","nodeCardWrapper","obj","reduce","acc","currnet","camelCase","PinnAppIcon","doPinnApp","isPinned","externalstyles","pinnAppWrapper","pinnedIcon","pinned","faThumbtack","TileOptionsMenu","optionsMenu","appIsLoading","optionsMenuDnd","optionsItem","ApplicationTile","id","moveAppTile","inDNDState","doDrag","dropIndex","canDrag","useDrop","accept","DRAG_DROP_TYPE","hover","monitor","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","hoverMiddleX","left","right","hoverClientX","x","drop","useDrag","collect","isDragging","collectedProps","dragFunc","dropFunc","useApplicationDND","applicationTileClasses","applicationTile","dragging","notAvailable","openApp","dndPlaceHolder","flipId","applicationTileOuter","opacity","thumbnailWrapper","applicationName","openApplication","loader","notAvailablePlaceholder","RearrangeAppTiles","doRearrangeClick","doSaveClick","doCancelClick","inDndStateTransitionExitDone","rearrangeButtonWrapper","rearrangeButtonWrapperInnter","faArrowsAltV","mountOnEnter","unmountOnExit","saveCancelAppsOrderEnterDone","saveCancelAppsOrder","saveDNDState","faCheck","saveIcon","cancelDNDState","cancelIcon","ApplicationsPage","setOrderedNodeList","ApplicationList","orderedNodeList","previousOrderedNodeList","setPreviousOrderedNodeList","setDNDState","Filters","dragAppTile","update","$splice","flipKey","s","nodeProps","FocusedAppActions","pinnAppIcon","currentAppThumbnail","__DASHBOARD_GLOBALS__","App","isSideMenuOpened","setIsSideMenuOpened","isMounted","setIsMounted","currentPageToRender","setCurrentPageToRender","timeoutId","setTimeout","clearTimeout","siteContent","sideMenuOpened","pageRightWrapper","pageBasePlaceholder","slideInAnimation","slideOutAnimation","pageWrapper","getPage","AppWithProviders","backend","HTML5Backend","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cd2f453.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"applicationTile\":\"ApplicationTile_applicationTile__hAZEL\",\"notAvailable\":\"ApplicationTile_notAvailable__6Muyy\",\"withDndStyles\":\"ApplicationTile_withDndStyles__mjsQd\",\"appIsLoading\":\"ApplicationTile_appIsLoading__MSk6V\",\"openApplication\":\"ApplicationTile_openApplication__1blqI\",\"dndPlaceHolder\":\"ApplicationTile_dndPlaceHolder__3Ay0h\",\"applicationTileOuter\":\"ApplicationTile_applicationTileOuter__2XwhK\",\"thumbnailWrapper\":\"ApplicationTile_thumbnailWrapper__2mwpj\",\"applicationName\":\"ApplicationTile_applicationName__16d2o\",\"loader\":\"ApplicationTile_loader__3-VUr\",\"notAvailablePlaceholder\":\"ApplicationTile_notAvailablePlaceholder__1eII6\"};","export enum DashboardPages {\n  ApplicationPage = \"APPLICATION_PAGE\",\n  DashboardPage = \"DASHBOARD_PAGE\",\n  SettingsPage = \"SETTINGS_PAGE\",\n  HelpPage = \"HELP_PAGE\",\n  FocusedApp = \"\"\n}\n\nexport enum AppsPageFilters {\n  All = \"ALL\",\n  Available = \"AVAILABLE\"\n}\n\nexport enum NodePageFilters {\n  All = \"ALL\",\n  Available = \"AVAILABLE\",\n  MachinesOnly = \"MACHINES_ONLY\"\n}\n","import React, {createContext, useState, Dispatch, SetStateAction} from \"react\";\nimport {DashboardPages} from \"../enums\";\n\nexport const DashboardPageNavigation = createContext({\n  currentDashboardPage: DashboardPages.ApplicationPage,\n  selectDashboardPage: (() => {}) as Dispatch<SetStateAction<DashboardPages>>\n});\n\nexport const DashboardPageNavigationProvider: React.FC = ({children}) => {\n  const [currentDashboardPage, setCurrentDashboardPage] = useState(\n    DashboardPages.ApplicationPage\n  );\n\n  return (\n    <DashboardPageNavigation.Provider\n      value={{\n        currentDashboardPage,\n        selectDashboardPage: setCurrentDashboardPage\n      }}\n    >\n      {children}\n    </DashboardPageNavigation.Provider>\n  );\n};\n","import React, {createContext} from \"react\";\n\nexport enum SessionStorageGroups {\n  PinnedApps = \"pinnedApps\",\n  AppPage = \"appPage\",\n  DevicesPage = \"devicesPage\"\n}\n\nexport const SessionStorageContext = createContext({\n  userSessionId: \"\",\n  storageId: \"\"\n});\n\nexport const SessionStorageProvider: React.FC<{userSessionId: string}> = ({\n  children,\n  userSessionId\n}) => {\n  const innitialStorrageStruct = {\n    [SessionStorageGroups.PinnedApps]: {},\n    [SessionStorageGroups.AppPage]: {},\n    [SessionStorageGroups.DevicesPage]: {}\n  };\n  const storageId = `user-session-id|${userSessionId}`;\n  const hasPreviousStorrageData = !!localStorage.getItem(storageId);\n\n  if (!hasPreviousStorrageData) {\n    localStorage.setItem(\n      `user-session-id|${userSessionId}`,\n      JSON.stringify(innitialStorrageStruct)\n    );\n  }\n  return (\n    <SessionStorageContext.Provider\n      value={{\n        userSessionId,\n        storageId\n      }}\n    >\n      {children}\n    </SessionStorageContext.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {DashboardPageNavigation} from \"../Providers/DashboardPageNavigationProvider\";\n\nexport const useDashboardPageNavigation = () =>\n  useContext(DashboardPageNavigation);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport classNames from \"classnames\";\nimport {DashboardPages} from \"../../../enums\";\nimport {useDashboardPageNavigation} from \"../../../hooks/useDashboardPageNavigation\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faGripHorizontal,\n  faLaptopCode,\n  faProjectDiagram,\n  faHeadset\n} from \"@fortawesome/free-solid-svg-icons\";\ninterface SideMenuItem {\n  pageName: DashboardPages;\n  children: React.ReactNode[];\n}\n\nexport const GeneralSection: React.FC = () => (\n  <section className={css.generalSectionWrapper}>\n    <div className={css.sideMenuTitle}>General</div>\n    <SideMenuItem pageName={DashboardPages.DashboardPage}>\n      <FontAwesomeIcon\n        icon={faLaptopCode}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Dashboard</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.ApplicationPage}>\n      <FontAwesomeIcon\n        icon={faGripHorizontal}\n        size=\"3x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Applications</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.SettingsPage}>\n      <FontAwesomeIcon\n        icon={faProjectDiagram}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Devices</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.HelpPage}>\n      <FontAwesomeIcon\n        icon={faHeadset}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Help</span>\n    </SideMenuItem>\n  </section>\n);\n\nconst SideMenuItem = ({children, pageName}: SideMenuItem) => {\n  const {\n    currentDashboardPage,\n    selectDashboardPage\n  } = useDashboardPageNavigation();\n  return (\n    <span\n      onClick={() => selectDashboardPage(pageName)}\n      className={classNames(css.sideMenuItem, {\n        [css.selected]: currentDashboardPage === pageName\n      })}\n    >\n      {<>{children}</>}\n    </span>\n  );\n};\n","import {useContext} from \"react\";\nimport {\n  SessionStorageContext,\n  SessionStorageGroups,\n} from \"../Providers/SessionStorageProvider\";\n\nexport const useSessionStorage = () => {\n  const {storageId} = useContext(SessionStorageContext);\n\n  const saveToStorage = (\n    groupName: SessionStorageGroups,\n    value: {unique: string; payload: any}\n  ) => {\n    setOrCreateStorageGroupItem(groupName, value);\n  };\n\n  const setOrCreateStorageGroupItem = (\n    groupName: SessionStorageGroups,\n    {unique, payload}: {unique: string; payload: any}\n  ) => {\n    let groups = getStorageGroups();\n    const group = groups[groupName];\n\n    if (group[unique]) {\n      group[unique] = payload;\n    } else {\n      groups[groupName] = {\n        ...group,\n        ...{[unique]: payload},\n      };\n    }\n    localStorage.setItem(storageId, JSON.stringify(groups));\n  };\n\n  const getStorageItem = (\n    groupName: SessionStorageGroups,\n    storageGroupItemName: string\n  ) => {\n    const storage = getStorageGroups();\n    return storage[groupName][storageGroupItemName];\n  };\n\n  const removeFromStorage = (\n    groupName: SessionStorageGroups,\n    storageGroupItemName: string\n  ) => {\n    let storage = getStorageGroups();\n    delete storage[groupName][storageGroupItemName];\n    localStorage.setItem(storageId, JSON.stringify(storage));\n    return getStorageGroups(groupName);\n  };\n\n  const getAllItems = (\n    groupName: SessionStorageGroups\n  ): {[unique: string]: any} => {\n    return getStorageGroups(groupName);\n  };\n  ////////////////////priavte methods///////////////////////\n\n  const getStorageGroups = (item?: string) => {\n    const storage = localStorage.getItem(storageId);\n    if (!storage) {\n      return;\n    }\n\n    return item ? JSON.parse(storage)[item] : JSON.parse(storage);\n  };\n\n  return {saveToStorage, removeFromStorage, getAllItems, getStorageItem};\n};\n","import React, {createContext, useState} from \"react\";\nimport {AppDetails, UUID} from \"../types/internal-types\";\nimport {useSessionStorage} from \"../hooks/useSessionStorage\";\nimport {SessionStorageGroups} from \"./SessionStorageProvider\";\n\ntype TPinnedApp = Pick<AppDetails, \"uuid\" | \"name\">;\n\nexport interface PinnedAppsContextProps {\n  pinnedAppsList: TPinnedApp[];\n  pinnApp: (appDetails: TPinnedApp) => void;\n  getPinnedApp: (uuid: UUID) => TPinnedApp | undefined;\n  removeApp: (uuid: UUID) => void;\n}\n\nexport const PinnedAppsContext = createContext<PinnedAppsContextProps>({\n  pinnedAppsList: [],\n  pinnApp: () => {},\n  getPinnedApp: () => ({name: \"\", uuid: \"\"}),\n  removeApp: () => {}\n});\n\nexport const PinnedAppsContextProvider: React.FC = ({children}) => {\n  const {\n    saveToStorage,\n    removeFromStorage,\n    getStorageItem,\n    getAllItems\n  } = useSessionStorage();\n  const generatePinnedAppList = (): TPinnedApp[] => {\n    const pinnedAppsFromStorage = getAllItems(SessionStorageGroups.PinnedApps);\n    return Object.keys(pinnedAppsFromStorage).map((pinnedAppId) => {\n      return pinnedAppsFromStorage[pinnedAppId];\n    });\n  };\n  const [pinnedAppsList, setPinnedListApps] = useState<TPinnedApp[]>(\n    generatePinnedAppList()\n  );\n\n  const pinnApp = (appDetails: TPinnedApp) => {\n    if (getPinnedApp(appDetails.uuid)) {\n      return;\n    }\n    setPinnedListApps([...pinnedAppsList, appDetails]);\n    saveToStorage(SessionStorageGroups.PinnedApps, {\n      unique: appDetails.uuid,\n      payload: appDetails\n    });\n  };\n\n  const removeApp = (uuidToRemove: AppDetails[\"uuid\"]) => {\n    removeFromStorage(SessionStorageGroups.PinnedApps, uuidToRemove);\n    setPinnedListApps(generatePinnedAppList());\n  };\n\n  const getPinnedApp = (uuid: AppDetails[\"uuid\"]) => {\n    return getStorageItem(SessionStorageGroups.PinnedApps, uuid);\n  };\n\n  return (\n    <PinnedAppsContext.Provider\n      value={{\n        pinnedAppsList,\n        pinnApp,\n        getPinnedApp,\n        removeApp\n      }}\n    >\n      {children}\n    </PinnedAppsContext.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {PinnedAppsContext} from \"../Providers/PinnedAppsContext\";\n\nexport const usePinnedAppsContext = () => useContext(PinnedAppsContext);\n","import * as React from \"react\";\n\ntype Weight = \"thin\" | \"normal\" | \"bold\";\n\nexport interface TextProps {\n  fontSize?: string;\n  color?: string;\n  weight?: Weight;\n  width?: string;\n  skeletonColor?: string;\n  showSkeleton?: boolean;\n  children?: JSX.Element | string | number;\n  className?: string;\n}\n\nexport const Text: React.SFC<TextProps> = ({\n  fontSize = \"\",\n  color,\n  weight = \"normal\",\n  width = \"auto\",\n  skeletonColor = \"#ffffff\",\n  showSkeleton,\n  children,\n  className\n}) => {\n  const fontWeight = (weight: Weight) => {\n    switch (weight) {\n      case \"thin\":\n        return {\n          fontFamily: '\"Open Sans Light\", sans-serif',\n          weight\n        };\n      case \"normal\":\n        return {\n          fontFamily: '\"Open Sans Normal\", sans-serif',\n          weight\n        };\n      case \"bold\":\n        return {\n          fontFamily: '\"Open Sans Bold\", sans-serif',\n          weight\n        };\n    }\n  };\n\n  const commonStyle = {\n    fontSize,\n    color,\n    ...fontWeight(weight)\n  };\n\n  const skeletonStyles = {\n    backgroundColor: skeletonColor,\n    content: \"\",\n    width\n  };\n\n  return (\n    <>\n      {showSkeleton ? (\n        <div style={{...commonStyle, ...skeletonStyles}} />\n      ) : (\n        <span className={className || \"\"} style={{...commonStyle}}>\n          {children}\n        </span>\n      )}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Thumbnail.module.scss\";\nimport classNamesHelper from \"classnames\";\nimport {Text} from \"../Text\";\n\ninterface ThumbnailProps {\n  name: string;\n  inDndState?: boolean;\n  size?: TSizes;\n  className?: string;\n}\n\ntype TSizes = \"x1\" | \"x2\";\n\nexport const Thumbnail: React.FC<ThumbnailProps> = ({\n  name,\n  inDndState = false,\n  size = \"x2\",\n  className\n}) => {\n  let classes = \"\";\n  let fontSize = \"\";\n\n  switch (size) {\n    case \"x1\":\n      classes = css.smallWrapper;\n      fontSize = \"10px\";\n      break;\n    case \"x2\":\n      classes = css.normalWrapper;\n      fontSize = \"16px\";\n      break;\n  }\n\n  return (\n    <div\n      className={classNamesHelper(classes, className, {\n        [css.withDndStyles]: inDndState\n      })}\n    >\n      <div className={css.thumbnailText}>\n        <Text weight=\"bold\" fontSize={fontSize}>\n          {`${name.charAt(0).toUpperCase()}${name.charAt(1).toUpperCase()}`}\n        </Text>\n      </div>\n    </div>\n  );\n};\n","import React, {useState, createContext} from \"react\";\nimport {AppDetails, UUID} from \"../types/internal-types\";\n\nexport interface AppSteamDetails {\n  html: string;\n  script?: string;\n  styles?: string;\n}\n\ninterface CurrentFocusedApp extends AppSteamDetails {\n  currentAppName: string;\n  currentAppId: UUID;\n}\n\ninterface FocusedApplication {\n  focusedAppStreams: AppSteamDetails | null;\n  currentAppName: AppDetails[\"name\"];\n  setCurrentFocusedApp: (st: CurrentFocusedApp) => void;\n  removeFromFocus: () => void;\n  currentAppId: UUID;\n}\n\nexport const FocusedApplicationContext = createContext<FocusedApplication>({\n  focusedAppStreams: null,\n  currentAppName: \"\",\n  setCurrentFocusedApp: (_st: CurrentFocusedApp) => {},\n  removeFromFocus: () => {},\n  currentAppId: \"\"\n});\n\nexport const FocusedAppContextProvider: React.FC = ({children}) => {\n  const [currentAppName, setCurrentAppName] = useState<AppDetails[\"name\"]>(\"\");\n  const [currentAppId, setCurrentAppId] = useState<AppDetails[\"uuid\"]>(\"\");\n  const [\n    focusedAppStreams,\n    setAppSteamDetails\n  ] = useState<AppSteamDetails | null>(null);\n\n  const setCurrentFocusedApp = ({\n    html,\n    script,\n    currentAppName,\n    currentAppId\n  }: CurrentFocusedApp) => {\n    setAppSteamDetails({html, script});\n    setCurrentAppName(currentAppName);\n    setCurrentAppId(currentAppId);\n  };\n\n  const removeFromFocus = () => {\n    setAppSteamDetails(null);\n    setCurrentAppName(\"\");\n  };\n  return (\n    <FocusedApplicationContext.Provider\n      value={{\n        currentAppName,\n        setCurrentFocusedApp,\n        removeFromFocus,\n        focusedAppStreams,\n        currentAppId\n      }}\n    >\n      {children}\n    </FocusedApplicationContext.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {FocusedApplicationContext} from \"../Providers/FocusedAppContextProvider\";\n\nexport const useFocusedApplication = () =>\n  useContext(FocusedApplicationContext);\n","const thumb = require(\"./assets/img/react_logo.svg\");\nexport const mockAppList = [\n  {\n    name: \"Smart Home\",\n    id: \"2323-234234-1234\",\n    viewportSize: {\n      width: 800,\n      height: 800\n    }\n  }\n];\n\nexport const mockDeviceList = [\n  {\n    enabled: 1,\n    id: 6,\n    type: 999,\n    lastUpdateTs: 1532473013,\n    uuid: \"ac6de837-7863-72a9-c789-a0aae7e9d010\"\n  }\n];\nexport const thumbnail = thumb;\n","import {thumbnail} from \"../../serverApiMocks\";\n\nimport {\n  NodeList,\n  GetUserNodeListDTO,\n  UUID,\n  OnGetNodeInfoCallbackDTO,\n  NoteDetails,\n  NodeSettingsDTO,\n  NodeSettingsData\n} from \"../../types/internal-types\";\n\nexport class DashboardServerApi {\n  makeSenseApi = window.MkSAPIBuilder.GetInstance();\n\n  constructor() {\n    this.makeSenseApi.ConnectGateway(() =>\n      console.log(\"Dashboard connected to gateway\")\n    );\n    this.makeSenseApi.Gateway.OnGatewayDataArrivedCallback = (data: any) => {};\n    this.makeSenseApi.Gateway.OnGatewayAdminCallback = (data: any) => {\n      console.log(\"OnGatewayAdminCallbac-k\", data);\n    };\n  }\n\n  getApplicationThumbnail = () => {\n    console.log(\"/applications/:appId:/thumbnail\");\n    return Promise.resolve(thumbnail);\n  };\n\n  getNodeDetails = (uuid: UUID) => {\n    const nodeInfoPromise = new Promise<NoteDetails>((resolve) => {\n      this.makeSenseApi.GetNodeInfo(\n        uuid,\n        (response: OnGetNodeInfoCallbackDTO, _error: any) => {\n          const payload = response && response.data && response.data.payload;\n          resolve(payload);\n        }\n      );\n    });\n    return nodeInfoPromise;\n  };\n\n  getNodeSettings = (uuid: UUID): Promise<NodeSettingsData> => {\n    return Promise.all([\n      this.getNodeHtmlSettings(uuid),\n      this.getNodeScriptsSettings(uuid)\n    ]).then((nodeSettingsFiles) => {\n      const [html, scripts] = nodeSettingsFiles;\n      return {html: [html], scripts: [scripts], css: []} as any;\n    });\n  };\n\n  getAppData = (uuid: UUID): Promise<any> => {\n    return Promise.all([this.getAppHtml(uuid), this.getAppScripts(uuid)]).then(\n      (data) => {\n        const [html, scripts] = data;\n        return {html: [html], scripts: [scripts], css: []} as any;\n      }\n    );\n  };\n\n  private getNodeScriptsSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppHtml = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppScripts = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getNodeHtmlSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  getNodeList = () => {\n    const deviceListDataPromise = new Promise<NodeList[]>((resolve, reject) => {\n      this.makeSenseApi.Webface.GetUserNodeList(\n        (response: GetUserNodeListDTO) => {\n          resolve(response.nodes.data);\n          if (response && response.error) {\n            reject(\"OnGatewayDataArrivedCallback received an error\");\n          }\n        }\n      );\n    });\n    return deviceListDataPromise;\n  };\n}\n","import {createContext} from \"react\";\nimport {DashboardServerApi} from \"../services/DashboardServerApi\";\n\nexport interface ServerApiContext {\n  dashboardServerApi: DashboardServerApi;\n}\n\nexport const ServerApiContext = createContext<ServerApiContext>({\n  dashboardServerApi: new DashboardServerApi()\n});\n\nexport const DashboardContext = ServerApiContext;\n","import {useContext} from \"react\";\nimport {ServerApiContext} from \"../Providers/ServerApiContext\";\n\nexport const useServerApiContext = () => useContext(ServerApiContext);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {usePinnedAppsContext} from \"../../../hooks/usePinnedApps\";\nimport {UUID} from \"../../../types/internal-types\";\nimport classNames from \"classnames\";\nimport {Thumbnail} from \"../../Thumbnail/Thumbnail\";\nimport {useFocusedApplication} from \"../../../hooks/useFocusedApplication\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport {useDashboardPageNavigation} from \"../../../hooks/useDashboardPageNavigation\";\nimport {DashboardPages} from \"../../../enums\";\n\nexport const PinnedSection = () => {\n  const {pinnedAppsList} = usePinnedAppsContext();\n  return (\n    <section className={css.pinnedSectionWrapper}>\n      <div className={css.sideMenuTitle}>Pinned</div>\n      {pinnedAppsList.length === 0 ? (\n        <div className={css.pinnedEmptyState}>\n          <div className={css.explanation}>\n            Here you can store the most commonly used Applications. Head to The\n            My Applications page and click on the thumbtack.\n          </div>\n        </div>\n      ) : (\n        pinnedAppsList.map(({name, uuid}) => (\n          <PinnedAppItem uuid={uuid} name={name} key={uuid} />\n        ))\n      )}\n    </section>\n  );\n};\n\nconst PinnedAppItem: React.FC<{uuid: UUID; name: string}> = ({uuid, name}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const {setCurrentFocusedApp, currentAppName} = useFocusedApplication();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {selectDashboardPage} = useDashboardPageNavigation();\n  const {\n    dashboardServerApi: {getAppData}\n  } = useServerApiContext();\n\n  const openPinnedApp = async (event: React.MouseEvent) => {\n    if (event.target !== (ref.current && ref.current.firstChild)) {\n      setIsLoading(true);\n      const {\n        html: [htmlStream],\n        scripts: [scriptStream]\n      } = await getAppData(uuid);\n      setCurrentFocusedApp({\n        html: htmlStream,\n        script: scriptStream,\n        currentAppName: name,\n        currentAppId: uuid\n      });\n      setIsLoading(false);\n      selectDashboardPage(DashboardPages.FocusedApp);\n    }\n  };\n\n  return (\n    <div\n      onClick={openPinnedApp}\n      className={classNames(css.sideMenuItem, css.pinnedApp, {\n        [css.selected]: currentAppName === name\n      })}\n    >\n      <div className={css.pinnedContentWrapper}>\n        <Thumbnail name={name} size=\"x1\" />\n        <span className={classNames(css.pinnedAppText)}>\n          {isLoading ? \"loading...\" : name}\n        </span>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {Text} from \"../../Text\";\n\nexport const LoggedInUserSection = () => (\n  <section className={css.loggedInUserSectionWrapper}>\n    <div className={css.userThumbnail}></div>\n    <Text className={css.userName} weight=\"bold\" fontSize=\"14px\">\n      Cptn. Cat Sparrow\n    </Text>\n    <Text className={css.userNameCollapsed} weight=\"bold\" fontSize=\"12px\">\n      Account Settings\n    </Text>\n\n    <div className={css.userName}></div>\n    <div className={css.userActions}></div>\n  </section>\n);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {Text} from \"../../Text\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleLeft,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\n\nexport const Footer: React.FC<{\n  isMinimized: boolean;\n  doMinimize: () => void;\n}> = ({isMinimized, doMinimize}) => {\n  return (\n    <section className={css.footerSection}>\n      <div className={css.signoutButton}>\n        <FontAwesomeIcon icon={faSignOutAlt} className={css.faSignOutAlt} />\n        <span className={css.menuItemText}>\n          <Text fontSize=\"12px\" weight=\"bold\">\n            SIGN OUT\n          </Text>\n        </span>\n      </div>\n      <div\n        className={classNames(css.minimizeSideMenuIcon, {\n          [css.isMinimized]: isMinimized,\n          [css.disabled]: \"need blah\"\n        })}\n        onClick={doMinimize}\n      >\n        <FontAwesomeIcon\n          icon={faAngleDoubleLeft}\n          className={css.faAngleLeft}\n        ></FontAwesomeIcon>\n      </div>\n    </section>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./SideMenu.module.scss\";\nimport {GeneralSection} from \"./MenuSections/GeneralSection\";\nimport {PinnedSection} from \"./MenuSections/PinnedSection\";\nimport {LoggedInUserSection} from \"./MenuSections/LoggedInUserSection\";\nimport classNames from \"classnames\";\nimport {Footer} from \"./MenuSections/Footer\";\ninterface SideMenuProps {}\n\nexport const SideMenu: React.FC<SideMenuProps> = () => {\n  const [isMinimized, setIsMinimized] = React.useState(false);\n  const [isClosed, setIsClosed] = React.useState(true);\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick, false);\n    return () => document.removeEventListener(\"mousedown\", handleClick, false);\n  });\n\n  const handleClick = (e: any) => {\n    if (ref.current && ref.current.contains(e.target)) {\n      return;\n    }\n    setIsClosed(true);\n  };\n\n  return (\n    <nav\n      ref={ref}\n      className={classNames(css.sideMenuWrapper, {\n        [css.minimizedView]: isMinimized,\n        [css.closed]: isClosed,\n      })}\n    >\n      <LoggedInUserSection />\n      <GeneralSection />\n      <PinnedSection />\n      <Footer\n        isMinimized={isMinimized}\n        doMinimize={() => setIsMinimized(!isMinimized)}\n      />\n    </nav>\n  );\n};\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\n\ninterface OwnProps {\n  html: string;\n  scripts?: string;\n}\nconst ownState = {};\n\nexport class Portal extends React.Component<OwnProps, typeof ownState> {\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  readonly state = ownState;\n  private iframeRoot = React.createRef<HTMLIFrameElement>();\n\n  componentDidMount() {\n    this.createIframeContent();\n  }\n\n  decodeDomProperty(hexxStream: string | undefined) {\n    if (!hexxStream) {\n      return;\n    }\n\n    const hexString = hexxStream.toString(); //force conversion\n    let parstedString = \"\";\n    for (\n      let i = 0;\n      i < hexString.length && hexString.substr(i, 2) !== \"00\";\n      i += 2\n    )\n      parstedString += String.fromCharCode(\n        parseInt(hexString.substr(i, 2), 16)\n      );\n    return parstedString;\n  }\n\n  createIframeContent() {\n    if (this.iframeRoot.current) {\n      const htmlString = this.decodeDomProperty(this.props.html);\n      const script = this.decodeDomProperty(this.props.scripts);\n      const iframeWrapper: any = ReactDOM.findDOMNode(this.iframeRoot.current);\n\n      if (iframeWrapper && iframeWrapper.contentDocument) {\n        iframeWrapper.contentDocument.open();\n        iframeWrapper.contentDocument.write(htmlString);\n        iframeWrapper.contentDocument.write(`<script>${script}</script>`);\n        iframeWrapper.contentDocument.close();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <iframe\n          title=\"mk-portal\"\n          style={{display: \"block\", width: \"100%\", height: \"100%\"}}\n          frameBorder=\"0\"\n          ref={this.iframeRoot}\n        />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./DashboardTile.module.scss\";\nimport Modal from \"react-responsive-modal\";\nimport {DashboardContext} from \"../../../Providers/ServerApiContext\";\nimport {Portal} from \"../../../components/Portal\";\nimport {UUID} from \"../../../types/internal-types\";\n\nexport interface DashboardTileProps {\n  uuid: UUID;\n  name: string;\n  description: string;\n  appThumbnail: string;\n  viewportSize: {\n    width: number;\n    height: number;\n  };\n}\n\nconst initialDashboardTileState = {\n  isMkAppOpen: false,\n  html: \"\",\n  scripts: \"\"\n};\n\nexport class DashboardTile extends React.Component<\n  DashboardTileProps,\n  typeof initialDashboardTileState\n> {\n  readonly state = initialDashboardTileState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  renderThumbnail = () => {\n    const {description} = this.props;\n    return (\n      <div className={css.dashboardThumbnailWrapper}>\n        {description ? (\n          <div className={css.textThumbnailLarge}>\n            {description.charAt(0).toUpperCase()}\n          </div>\n        ) : (\n          <div className={css.textThumbnail}>MKapp</div>\n        )}\n      </div>\n    );\n  };\n\n  openMKAppMainView = async () => {\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await this.context.dashboardServerApi.getAppData(this.props.uuid);\n    this.setState({isMkAppOpen: true, html: htmlStream, scripts: scriptStream});\n  };\n\n  closeMKAppMainView = () => {\n    this.setState({isMkAppOpen: false});\n  };\n\n  render() {\n    const {isMkAppOpen} = this.state;\n    const {description} = this.props;\n    const last6chars = this.props.uuid.substring(\n      this.props.uuid.length - 6,\n      this.props.uuid.length\n    );\n    return (\n      <div\n        onDoubleClick={this.openMKAppMainView}\n        className={`\n          ${css.dashboardWrapper} \n          ${css.smartHome}`}\n      >\n        <div className={css.dashboardTitle}>\n          {this.renderThumbnail()}\n          {description ? description : `...${last6chars}`}\n        </div>\n        <div className={css.dashboardContent}>\n          {isMkAppOpen ? (\n            <Modal\n              closeOnEsc\n              classNames={{modal: css.mkAppModalWrapper}}\n              onClose={this.closeMKAppMainView}\n              open={this.state.isMkAppOpen}\n            >\n              <Portal html={this.state.html} scripts={this.state.scripts} />\n            </Modal>\n          ) : (\n            <div>put knobs here</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import {MkAppDescription} from \"../../types/internal-types\";\nimport * as React from \"react\";\nimport {DashboardTileProps} from \"./DashboardTile/DashboardTile\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\n\ninterface AppLoaderProps {\n  mkAppInitData: MkAppDescription;\n  render: (loadedMkAppProps: DashboardTileProps) => React.ReactNode;\n}\n\nconst innitialState = {\n  appThumbnail: null as any,\n  mkAppLoadedData: {} as any,\n  appProps: {} as any,\n  description: \"\"\n};\n\nexport class AppLoader extends React.Component<\n  AppLoaderProps,\n  typeof innitialState\n> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    //there shouls be cacsh managment here, so that Apploader wont fetch app list every time\n    try {\n      const appThumbnail = await this.context.dashboardServerApi.getApplicationThumbnail();\n      const nodeDetails = await this.context.dashboardServerApi.getNodeDetails(\n        this.props.mkAppInitData.uuid\n      );\n      this.setState({\n        appThumbnail,\n        description: nodeDetails && nodeDetails.description\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.render({\n          appThumbnail: this.state.appThumbnail,\n          description: this.state.description,\n          ...this.props.mkAppInitData\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport css from \"./PageTitle.module.scss\";\nimport classNames from \"classnames\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\n\ntype TThemes = \"thin\";\nexport interface PageTitleProps {\n  title: JSX.Element | string;\n  openSideMenu?: () => void;\n  actions?: JSX.Element[] | JSX.Element;\n  theme?: TThemes;\n  className?: {[s: string]: string};\n}\nexport const PageTitle: React.FC<PageTitleProps> = ({\n  title,\n  actions,\n  theme,\n  openSideMenu,\n  className,\n}) => (\n  <header\n    className={classNames(css.pageTitle, {\n      [css.thin]: theme === \"thin\",\n      ...className,\n    })}\n  >\n    {openSideMenu && (\n      <section onClick={openSideMenu} className={css.sideMenuHamburger}>\n        <FontAwesomeIcon icon={faBars} />\n      </section>\n    )}\n    <section className={css.pageTitleContent}>\n      <div className={css.pageTitleName}>{title}</div>\n      {actions && (\n        <div className={css.currentAppActions}>\n          {React.Children.map(actions, (child) => (\n            <>{child}</>\n          ))}\n        </div>\n      )}\n    </section>\n  </header>\n);\n","import * as React from \"react\";\nexport const DashboardTileSkeleton = () => <div>SKELETON</div>;\n","import {DashboardTile} from \"./DashboardTile/DashboardTile\";\nimport {AppLoader} from \"./AppLoader\";\nimport {MkAppDescription} from \"../../types/internal-types\";\nimport {PageTitle} from \"../../components/PageTitle/PageTitle\";\nimport * as React from \"react\";\nimport css from \"./Dashboard.module.scss\";\nimport {DashboardTileSkeleton} from \"../../components/Skeleton/DashboardTile\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\nimport {Text} from \"../../components/Text\";\n\nconst innitialDashboardsPageState = {appList: [] as any};\n\nexport class DashboardsPage extends React.Component<\n  {openSideMenu: () => void},\n  typeof innitialDashboardsPageState\n> {\n  readonly state = innitialDashboardsPageState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  public async componentDidMount() {\n    const appList = await this.context.dashboardServerApi.getNodeList();\n    this.setState({appList});\n  }\n\n  render() {\n    const {appList} = this.state;\n    return (\n      <>\n        <div className={css.underConstruction}>\n          <PageTitle title=\"DASHBOARD\" openSideMenu={this.props.openSideMenu} />\n          <div className={css.pageContentWrapper}>\n            {appList &&\n              appList.map((mkApp: MkAppDescription, index: any) => (\n                <AppLoader\n                  key={index}\n                  mkAppInitData={mkApp}\n                  render={(loadedProps) => {\n                    return loadedProps ? (\n                      <DashboardTile {...loadedProps} />\n                    ) : (\n                      <DashboardTileSkeleton />\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"block\",\n            marginTop: \"20.7%\",\n            textAlign: \"center\",\n            zIndex: 10,\n            background: \"#d6eeff\",\n            position: \"relative\",\n            boxShadow: \"inset 20px 0 30px #fff\",\n          }}\n        >\n          <Text weight=\"bold\" fontSize=\"46px\" color=\"$grey01\">\n            UNDER CONSTRUCTION\n          </Text>\n        </div>\n      </>\n    );\n  }\n}\n","import {createContext} from \"react\";\n\ninterface AnimationsContext {\n  nodePageRef: React.RefObject<HTMLDivElement>;\n}\n\nexport const AnimationsContext = createContext<AnimationsContext>({\n  nodePageRef: null as any\n});\n","import {useEffect, useState} from \"react\";\n\nexport const useFetch = <DataType>(\n  fetcherFunction: Function\n): [boolean, DataType] => {\n  const [data, setData] = useState([] as unknown);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let data;\n      if (typeof fetcherFunction === \"function\") {\n        data = await fetcherFunction();\n      } else {\n        throw new Error(\"Please provide a fetcher fucntion\");\n      }\n      setData(data);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [fetcherFunction]);\n\n  return [isLoading, data as DataType];\n};\n","import * as React from \"react\";\nimport css from \"./Loader.module.scss\";\nimport {Text} from \"../Text\";\n\nexport const Loader: React.FC = () => (\n  <div className={css.loading}>\n    <div className={css.spinner} />\n    <div>\n      <Text fontSize=\"12px\" weight=\"bold\" color=\"$grey01\">\n        LOADING...\n      </Text>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport css from \"./PageTitle.module.scss\";\nimport {Text} from \"../Text\";\nimport classNames from \"classnames\";\nexport interface PageTitleProps {\n  doAction: () => void;\n  icon?: JSX.Element;\n  text: string;\n  actionActive?: boolean;\n}\nexport const PageTitleAction: React.FC<PageTitleProps> = ({\n  doAction,\n  icon,\n  text,\n  actionActive\n}) => {\n  return (\n    <div\n      className={classNames(css.actionItem, {[css.active]: actionActive})}\n      onClick={doAction}\n    >\n      {icon && <div className={css.iconWrapper}>{icon}</div>}\n      <Text weight=\"bold\" className={css.actionItemText}>\n        {text}\n      </Text>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport css from \"./NodeSettings.module.scss\";\nimport {UUID, NodeSettingsData} from \"../../../types/internal-types\";\nimport {Portal} from \"../../../components/Portal\";\nimport {useFetch} from \"../../../hooks/useFetch\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {Loader} from \"../../../components/Loader/Loader\";\nimport {PageTitle} from \"../../../components/PageTitle/PageTitle\";\nimport {PageTitleAction} from \"../../../components/PageTitle/PageTitleAction\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface NodeSettingsProps {\n  deviceUuid: UUID;\n  nodeName: string;\n  onClose: () => void;\n}\n\nexport const NodeSettings: React.FC<NodeSettingsProps> = ({\n  deviceUuid,\n  nodeName,\n  onClose,\n}) => {\n  const {\n    dashboardServerApi: {getNodeSettings},\n  } = useServerApiContext();\n\n  const fetcherFucntion = React.useCallback(() => getNodeSettings(deviceUuid), [\n    deviceUuid,\n    getNodeSettings,\n  ]);\n  const [isLoading, nodeSettingsData] = useFetch<NodeSettingsData>(\n    fetcherFucntion\n  );\n\n  return (\n    <div className={css.nodeSettingsWrapper}>\n      <PageTitle\n        title={nodeName}\n        theme=\"thin\"\n        className={{[css.nodeSettingsTitle]: css.nodeSettingsTitle}}\n        actions={\n          <PageTitleAction\n            icon={<FontAwesomeIcon icon={faTimes} className={css.faTimes} />}\n            doAction={onClose}\n            text=\"CLOSE\"\n          />\n        }\n      />\n      <div className={css.nodeSettingsContent}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Portal\n            scripts={nodeSettingsData.scripts[0]}\n            html={nodeSettingsData.html[0]}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Animations.module.scss\";\nimport {useAnimationsUtils} from \"../../../hooks/useAnimationsUtils\";\nimport {CSSTransition} from \"react-transition-group\";\ninterface OpenNodeSettingsAnimationProps {\n  isOpened: boolean;\n}\n\nexport const OpenNodeSettingsAnimation: React.FC<OpenNodeSettingsAnimationProps> = ({\n  children,\n  isOpened\n}) => {\n  const nodeCardRef = React.useRef<HTMLDivElement>(null);\n  const {calcDistanceFromParentTop} = useAnimationsUtils();\n\n  // React.useEffect(() => {\n  //   nodePageRef.current!.appendChild(React.createElement(\"div\"));\n  // });\n  const translateY = {\n    transform: `translateY(-${calcDistanceFromParentTop(nodeCardRef)}px)`\n  };\n  const transitionClassNames = {\n    enter: css.enter,\n    enterDone: css.enterDone,\n    exit: css.exit,\n    exitActive: css.exitActive,\n    exitDone: css.exitDone\n  };\n\n  return (\n    <CSSTransition\n      timeout={250}\n      in={isOpened}\n      classNames={transitionClassNames}\n    >\n      <div\n        ref={nodeCardRef}\n        className={css.animationBaseState}\n        style={isOpened ? translateY : {}}\n      >\n        <div\n          className={\n            isOpened ? css.cardSettingsOpenned : css.cardSettingsClosed\n          }\n        >\n          {children}\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import {useContext} from \"react\";\nimport {AnimationsContext} from \"../Providers/AnimationsContextProvider\";\n\nexport const useAnimationsUtils = () => {\n  const {nodePageRef} = useContext(AnimationsContext);\n\n  const calcDistanceFromParentTop = (ref: React.RefObject<HTMLDivElement>) => {\n    const nodePageTop =\n      nodePageRef.current && nodePageRef.current.getClientRects()[0].top + 20;\n    const refTop = ref.current && ref.current.getClientRects()[0].top;\n    return refTop && nodePageTop && refTop - nodePageTop;\n  };\n\n  return {nodePageRef, calcDistanceFromParentTop};\n};\n","import * as React from \"react\";\nimport styled, {keyframes} from \"styled-components\";\n\nexport const SkeletonShimmer: React.SFC<{width: string; color: string}> = ({\n  width,\n  color\n}) => {\n  const shimmerAnimations = keyframes`\n    0% {\n      background-position: 0 0;\n    }\n  \n    100% {\n      background-position: ${width} 0;\n    }\n  `;\n\n  const Shimmer = styled.div`\n    background-image: linear-gradient(\n      to right,\n      ${color} 0,\n      rgba(249, 250, 251, 0.8) 10%,\n      ${color} 20%\n    );\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: absolute;\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: ${shimmerAnimations};\n    animation-timing-function: linear;\n  `;\n\n  return <Shimmer />;\n};\n","import React from \"react\";\nimport css from \"./NodeCard.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faCodeBranch, faHdd} from \"@fortawesome/free-solid-svg-icons\";\nimport {SkeletonShimmer} from \"../../../components/SkeletonShimmer\";\nimport {Subtitle, CardText} from \"./NodeCardTypography\";\n\nexport interface NodeCardSummaryProps {\n  isLoading?: boolean;\n  onNodeSettingsClick: Function;\n  nodeDetails: any;\n}\n\nenum DeviceTypes {\n  Master = 1\n}\n\nexport const NodeCardSummary: React.FC<NodeCardSummaryProps> = ({\n  isLoading = false,\n  onNodeSettingsClick,\n  nodeDetails: {name, type, uuid, online: isOnline}\n}) => {\n  return (\n    <div className={css.nodeCardSummaryWrapper}>\n      <CardIconSection type={type} />\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceType}\n        description={type}\n      >\n        DEVICE TYPE\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceName}\n        description={name}\n      >\n        DEVICE NAME\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceId}\n        description={uuid}\n      >\n        DEVICE ID\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceStatus}\n        description={isOnline ? \"Connected\" : \"Disconnected\"}\n      >\n        STATUS\n      </CardSection>\n      <SummaryOptionsMenu onNodeSettingsClick={onNodeSettingsClick} />\n      {isLoading && (\n        <SkeletonShimmer width=\"1400px\" color=\"rgba(249, 250, 251, 0.001)\" />\n      )}\n    </div>\n  );\n};\n\nconst CardIconSection: React.FC<{type: number}> = ({type}) => (\n  <div className={`${css.section} ${css.IconSection}`}>\n    <FontAwesomeIcon\n      icon={type === DeviceTypes.Master ? faHdd : faCodeBranch}\n      size=\"2x\"\n      color=\"#768093\"\n    />\n  </div>\n);\n\nconst SummaryOptionsMenu: React.FC<{onNodeSettingsClick: Function}> = ({\n  onNodeSettingsClick\n}) => (\n  <div className={`${css.deviceContentWrapper} ${css.deviceSettingsMenu}`}>\n    <span\n      className={css.deviceSettingsMenuIcon}\n      onClick={() => onNodeSettingsClick()}\n    >\n      <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#768093\" />\n    </span>\n  </div>\n);\n\ninterface CardSectionProps {\n  customClassName: string;\n  children: string;\n  isLoading: boolean;\n  description: string;\n}\n\nconst CardSection: React.FC<CardSectionProps> = ({\n  isLoading,\n  customClassName,\n  children,\n  description\n}) => (\n  <div\n    className={`${css.section} ${css.deviceContentWrapper} ${customClassName}`}\n  >\n    <Subtitle showSkeleton={isLoading}>{children}</Subtitle>\n    <CardText showSkeleton={isLoading}>\n      <span className={css.cardSectionText} title={description}>\n        {description}\n      </span>\n    </CardText>\n  </div>\n);\n","import * as React from \"react\";\nimport {Text} from \"../../../components/Text\";\n\nexport interface OwnProps {\n  showSkeleton: boolean;\n  children?: string[] | string | number | JSX.Element;\n}\n\nexport const Subtitle: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    fontSize=\"10px\"\n    color=\"#768093\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"bold\"\n    width=\"70px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n\nexport const CardText: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    color=\"#2f3148\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"normal\"\n    fontSize=\"14px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n","import * as React from \"react\";\nimport css from \"./Applications.module.scss\";\nimport update from \"immutability-helper\";\nimport {useFetch} from \"../../hooks/useFetch\";\nimport {useServerApiContext} from \"../../hooks/useServerApiContext\";\nimport {PageTitle} from \"../../components/PageTitle/PageTitle\";\nimport {ApplicationTile} from \"./ApplicationTile/ApplicationTile\";\nimport {Flipper} from \"react-flip-toolkit\";\nimport {RearrangeAppTiles} from \"./RearrangeButton/RearrangeButton\";\nimport {ChangeViewModes} from \"./ViewButton/ViewButton\";\nimport {NodeList} from \"../../types/internal-types\";\nimport {AppsPageFilters} from \"../../enums\";\nimport {useSessionStorage} from \"../../hooks/useSessionStorage\";\nimport {SessionStorageGroups} from \"../../Providers/SessionStorageProvider\";\n\nenum AppsPageStorageItems {\n  Filters = \"filters\",\n  ApplicationList = \"applicationList\",\n}\n\nexport const DRAG_DROP_TYPE = \"applicationTile\";\n\nconst ViewFilterFucntions = {\n  [AppsPageFilters.Available]: (nodeList: NodeList[]) =>\n    nodeList.filter((node) => node.online),\n  [AppsPageFilters.All]: (nodeList: NodeList[]) => nodeList,\n};\n\nexport const ApplicationsPage: React.FC<{openSideMenu: () => void}> = ({\n  openSideMenu,\n}) => {\n  const {dashboardServerApi} = useServerApiContext();\n\n  const [isLoading, nodeList] = useFetch<NodeList[]>(\n    dashboardServerApi.getNodeList\n  );\n  React.useEffect(() => {\n    setOrderedNodeList(nodeList);\n  }, [isLoading, nodeList]);\n\n  const {saveToStorage, getStorageItem} = useSessionStorage();\n  const [orderedNodeList, setOrderedNodeList] = React.useState<NodeList[]>(\n    getStorageItem(\n      SessionStorageGroups.AppPage,\n      AppsPageStorageItems.ApplicationList\n    ) || []\n  );\n  const [previousOrderedNodeList, setPreviousOrderedNodeList] = React.useState(\n    orderedNodeList\n  );\n\n  const [inDNDState, setDNDState] = React.useState(false);\n  const [filter, setFilter] = React.useState<AppsPageFilters>(\n    getStorageItem(\n      SessionStorageGroups.AppPage,\n      AppsPageStorageItems.Filters\n    ) || AppsPageFilters.All\n  );\n\n  React.useEffect(() => {\n    saveToStorage(SessionStorageGroups.AppPage, {\n      unique: AppsPageStorageItems.Filters,\n      payload: filter,\n    });\n  }, [saveToStorage, filter]);\n\n  React.useEffect(() => {\n    saveToStorage(SessionStorageGroups.AppPage, {\n      unique: AppsPageStorageItems.ApplicationList,\n      payload: orderedNodeList,\n    });\n  }, [saveToStorage, orderedNodeList]);\n\n  const moveAppTile = React.useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const dragAppTile = orderedNodeList[dragIndex];\n      setOrderedNodeList(\n        update(orderedNodeList, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragAppTile],\n          ],\n        })\n      );\n    },\n    [orderedNodeList]\n  );\n\n  const doRearrangeClick = () => {\n    setDNDState(true);\n    setPreviousOrderedNodeList(orderedNodeList);\n  };\n\n  const doSaveClick = () => {\n    setDNDState(false);\n  };\n\n  const doCancelClick = () => {\n    setOrderedNodeList(previousOrderedNodeList);\n    setDNDState(false);\n  };\n\n  return (\n    <div>\n      <PageTitle\n        openSideMenu={openSideMenu}\n        title=\"APPLICATIONS\"\n        actions={[\n          <RearrangeAppTiles\n            inDNDState={inDNDState}\n            doRearrangeClick={doRearrangeClick}\n            doSaveClick={doSaveClick}\n            doCancelClick={doCancelClick}\n          />,\n          <ChangeViewModes\n            inDNDState={inDNDState}\n            setFilter={setFilter}\n            filter={filter}\n          />,\n        ]}\n      />\n      <Flipper flipKey={JSON.stringify(orderedNodeList.map((s: any) => s.id))}>\n        <div className={css.pageContentWrapper}>\n          {isLoading ? (\n            <span>should be a skeleton here</span>\n          ) : (\n            ViewFilterFucntions[filter](\n              orderedNodeList\n            ).map((nodeProps: any, index: number) => (\n              <ApplicationTile\n                moveAppTile={moveAppTile}\n                key={nodeProps.id}\n                index={index}\n                inDNDState={inDNDState}\n                {...nodeProps}\n              />\n            ))\n          )}\n        </div>\n      </Flipper>\n    </div>\n  );\n};\n","import React from \"react\";\nimport css from \"./NodeCard.module.scss\";\nimport {NodeSettings} from \"../NodeSettings/NodeSettings\";\nimport {OpenNodeSettingsAnimation} from \"../NodeCardAnimations/OpenNodeSettingsAnimation\";\nimport {NodeCardSummary} from \"./NodeCardSummary\";\nimport classNames from \"classnames\";\n\nexport interface NodeCardProps {\n  isLoading: boolean;\n  selected?: boolean;\n  nodeDetails: any;\n}\n\nexport const NodeCard: React.FC<NodeCardProps> = ({\n  isLoading,\n  nodeDetails,\n  selected,\n  nodeDetails: {online: isOnline, name, uuid}\n}) => {\n  const [cardSettingOpenned, setCardSettingsOpenned] = React.useState(false);\n  const openCardSettings = () => setCardSettingsOpenned(true);\n  const closeCardSettings = () => setCardSettingsOpenned(false);\n\n  return (\n    <OpenNodeSettingsAnimation isOpened={cardSettingOpenned}>\n      <div\n        className={classNames(css.cardWrapper, {\n          [css.hovered]: cardSettingOpenned || selected,\n          [css.disabled]: !isOnline\n        })}\n      >\n        {!cardSettingOpenned ? (\n          <NodeCardSummary\n            nodeDetails={nodeDetails}\n            isLoading={isLoading}\n            onNodeSettingsClick={openCardSettings}\n          />\n        ) : (\n          <NodeSettings\n            nodeName={name}\n            onClose={closeCardSettings}\n            deviceUuid={uuid}\n          />\n        )}\n      </div>\n    </OpenNodeSettingsAnimation>\n  );\n};\n","import React from \"react\";\nimport css from \"./ViewButton.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSortAmountDown} from \"@fortawesome/free-solid-svg-icons\";\nimport {PageTitleAction} from \"../../../components/PageTitle/PageTitleAction\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {Text} from \"../../../components/Text\";\nimport classNames from \"classnames\";\nimport {AppsPageFilters} from \"../../../enums\";\n\ninterface ChangeViewModesProps {\n  inDNDState?: boolean;\n  filter: any;\n  setFilter: any;\n}\n\nexport const ChangeViewModes: React.FC<ChangeViewModesProps> = ({\n  filter,\n  setFilter\n}) => {\n  const [isActionMenuOpen, setIsActionMenuOpen] = React.useState(false);\n\n  return (\n    <>\n      <div className={css.viewFilterWrapper}>\n        <PageTitleAction\n          doAction={() => setIsActionMenuOpen(!isActionMenuOpen)}\n          actionActive={isActionMenuOpen}\n          icon={\n            <FontAwesomeIcon\n              icon={faSortAmountDown}\n              className={css.afaSortAmountDown}\n            />\n          }\n          text=\"VIEW\"\n        />\n        {isActionMenuOpen && (\n          <ActionMenu\n            setFilter={setFilter}\n            filter={filter}\n            isActionMenuOpen={isActionMenuOpen}\n            setIsActionMenuOpen={setIsActionMenuOpen}\n          />\n        )}\n      </div>\n      <div className={css.selectedView}>\n        <Text weight=\"bold\">{filter}</Text>\n      </div>\n    </>\n  );\n};\n\ninterface ActionMenuProps {\n  isActionMenuOpen: boolean;\n  setIsActionMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setFilter: any;\n  filter: any;\n}\n\nconst ActionMenu: React.FC<ActionMenuProps> = ({\n  setFilter,\n  isActionMenuOpen,\n  setIsActionMenuOpen,\n  filter\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick, false);\n    return () => document.removeEventListener(\"mousedown\", handleClick, false);\n  });\n\n  const handleClick = (e: any) => {\n    if (ref.current && ref.current.contains(e.target)) {\n      return;\n    }\n    setIsActionMenuOpen(false);\n  };\n\n  const doActionClick = (selectedFilter: AppsPageFilters) => {\n    setFilter(selectedFilter);\n    setIsActionMenuOpen(false);\n  };\n  return (\n    <CSSTransition\n      in={isActionMenuOpen}\n      appear\n      classNames={{\n        appear: css.appear,\n        enterDone: css.enterDone\n      }}\n      timeout={0}\n    >\n      <div className={css.actionMenu} ref={ref}>\n        <div\n          className={classNames(css.actionMenuItem, {\n            [css.selected]: filter === AppsPageFilters.All\n          })}\n          onClick={() => doActionClick(AppsPageFilters.All)}\n        >\n          {AppsPageFilters.All}\n        </div>\n        <div\n          className={classNames(css.actionMenuItem, {\n            [css.selected]: filter === AppsPageFilters.Available\n          })}\n          onClick={() => doActionClick(AppsPageFilters.Available)}\n        >\n          {AppsPageFilters.Available}\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import {PageTitle} from \"../../components/PageTitle/PageTitle\";\nimport React, {useEffect} from \"react\";\nimport css from \"./NodePage.module.scss\";\nimport {useServerApiContext} from \"../../hooks/useServerApiContext\";\nimport {AnimationsContext} from \"../../Providers/AnimationsContextProvider\";\nimport {NodeList} from \"../../types/internal-types\";\nimport {useFetch} from \"../../hooks/useFetch\";\nimport {toCamelCase} from \"../../utils/CamelCaseConverter\";\nimport {NodeCard} from \"./NodeCard/NodeCard\";\nimport {NodePageFilters} from \"../../enums\";\nimport {ChangeViewModes} from \"../Applications/ViewButton/ViewButton\";\nimport {PageTitleAction} from \"../../components/PageTitle/PageTitleAction\";\nimport {useSessionStorage} from \"../../hooks/useSessionStorage\";\nimport {SessionStorageGroups} from \"../../Providers/SessionStorageProvider\";\n\nconst ViewFilterFucntions = {\n  [NodePageFilters.Available]: (nodeList: NodeList[]) =>\n    nodeList.filter((node) => node.online),\n  [NodePageFilters.All]: (nodeList: NodeList[]) => nodeList,\n  [NodePageFilters.MachinesOnly]: (nodeList: NodeList[]) =>\n    nodeList.filter((node) => node.name === \"Master\"),\n};\n\nexport interface OwnProps {}\n\nexport const NodesPage: React.FC<{openSideMenu: () => void}> = ({\n  openSideMenu,\n}) => {\n  const pageRef = React.useRef<HTMLDivElement>(null);\n  const {dashboardServerApi} = useServerApiContext();\n  const [isLoading, nodeList] = useFetch<NodeList[]>(\n    dashboardServerApi.getNodeList\n  );\n  const {getStorageItem, saveToStorage} = useSessionStorage();\n\n  const [filter, setFilter] = React.useState<NodePageFilters>(\n    getStorageItem(SessionStorageGroups.DevicesPage, \"filters\") ||\n      NodePageFilters.All\n  );\n  const [machinesOnly, setMachinesOnly] = React.useState(true);\n\n  useEffect(() => {\n    saveToStorage(SessionStorageGroups.DevicesPage, {\n      unique: \"filters\",\n      payload: filter,\n    });\n  }, [saveToStorage, filter]);\n\n  const filterMachinesOnly = (nodeList: NodeList[]) => {\n    return machinesOnly\n      ? ViewFilterFucntions.MACHINES_ONLY(nodeList)\n      : nodeList;\n  };\n\n  const filterNodeList = (nodeList: NodeList[]) => {\n    return ViewFilterFucntions[filter](nodeList);\n  };\n\n  return (\n    <AnimationsContext.Provider value={{nodePageRef: pageRef}}>\n      <>\n        <PageTitle\n          openSideMenu={openSideMenu}\n          title={\n            <div className={css.pageTitleCustomWrapper}>\n              <div className={css.pageTitle}>DEVICES</div>\n              <PageTitleAction\n                doAction={() => setMachinesOnly(true)}\n                text=\"MACHINES\"\n                actionActive={machinesOnly}\n              />\n              <PageTitleAction\n                doAction={() => setMachinesOnly(false)}\n                text=\"NODES\"\n                actionActive={!machinesOnly}\n              />\n            </div>\n          }\n          actions={<ChangeViewModes setFilter={setFilter} filter={filter} />}\n        />\n        <div ref={pageRef} className={css.pageContentWrapper}>\n          {filterMachinesOnly(filterNodeList(nodeList)).map((node, index) => (\n            <div key={index} className={css.nodeCardWrapper}>\n              <NodeCard nodeDetails={toCamelCase(node)} isLoading={isLoading} />\n            </div>\n          ))}\n        </div>\n      </>\n    </AnimationsContext.Provider>\n  );\n};\n","import camelCase from \"lodash/camelCase\";\n\nexport const toCamelCase = (obj: any) => {\n  return Object.keys(obj).reduce(\n    (acc, currnet) => ({...acc, ...{[camelCase(currnet)]: obj[currnet]}}),\n    {}\n  );\n};\n","import React from \"react\";\nimport css from \"./PinnApp.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport {faThumbtack} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface PinnAppIconProps {\n  doPinnApp?: () => void;\n  isPinned: boolean;\n  externalstyles?: string;\n}\nexport const PinnAppIcon: React.FC<PinnAppIconProps> = ({\n  doPinnApp,\n  isPinned,\n  externalstyles\n}) => {\n  return (\n    <span onClick={doPinnApp ? doPinnApp : () => {}}>\n      <FontAwesomeIcon\n        className={classNames(\n          css.pinnAppWrapper,\n          css.pinnedIcon,\n          externalstyles,\n          {\n            [css.pinned]: isPinned\n          }\n        )}\n        icon={faThumbtack}\n        size=\"1x\"\n      />\n    </span>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./TileOptionsMenu.module.scss\";\nimport classNames from \"classnames\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\nimport {AppDetails} from \"../../../types/internal-types\";\nimport {usePinnedAppsContext} from \"../../../hooks/usePinnedApps\";\nimport {PinnAppIcon} from \"../../../components/PinnApp/PinnApp\";\n\ninterface TileOptionsMenuProps {\n  inDndState: boolean;\n  appDetails: Pick<AppDetails, \"name\" | \"uuid\">;\n  isLoading: boolean;\n}\n\nexport const TileOptionsMenu: React.FC<TileOptionsMenuProps> = ({\n  inDndState,\n  appDetails: {name, uuid},\n  isLoading\n}) => {\n  const {pinnApp, getPinnedApp, removeApp} = usePinnedAppsContext();\n  const isPinned = !!getPinnedApp(uuid);\n\n  const togglePinnedApp = () =>\n    isPinned ? removeApp(uuid) : pinnApp({name, uuid});\n  return (\n    <div className={css.optionsMenu}>\n      <PinnAppIcon\n        doPinnApp={togglePinnedApp}\n        isPinned={isPinned}\n        externalstyles={classNames({\n          [css.appIsLoading]: isLoading,\n          [css.optionsMenuDnd]: inDndState\n        })}\n      />\n      <span onClick={() => console.log(\"bang!\")}>\n        <FontAwesomeIcon\n          className={classNames(css.optionsItem, {\n            [css.appIsLoading]: isLoading,\n            [css.optionsMenuDnd]: inDndState\n          })}\n          icon={faBars}\n          size=\"1x\"\n        />\n      </span>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./ApplicationTile.module.scss\";\nimport classNames from \"classnames\";\nimport {Text} from \"../../../components/Text\";\nimport {Flipped} from \"react-flip-toolkit\";\nimport {useApplicationDND} from \"../../../hooks/useApplicationDND\";\nimport {UUID} from \"../../../types/internal-types\";\nimport {Loader} from \"../../../components/Loader/Loader\";\nimport {Thumbnail} from \"../../../components/Thumbnail/Thumbnail\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport {useFocusedApplication} from \"../../../hooks/useFocusedApplication\";\nimport {useDashboardPageNavigation} from \"../../../hooks/useDashboardPageNavigation\";\nimport {DashboardPages} from \"../../../enums\";\nimport {TileOptionsMenu} from \"../TileOptionsMenu/TileOptionsMenu\";\n\ninterface ApplicationTileProps {\n  thumbnail?: string;\n  name: string;\n  description: string;\n  index: number;\n  id: number;\n  uuid: UUID;\n  inDNDState: boolean;\n  online: boolean;\n  moveAppTile: (dragIndex: number, hoverIndex: number) => void;\n}\n\nexport const ApplicationTile: React.FC<ApplicationTileProps> = ({\n  name,\n  id,\n  uuid,\n  index,\n  moveAppTile,\n  inDNDState,\n  online\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    dashboardServerApi: {getAppData}\n  } = useServerApiContext();\n  const {setCurrentFocusedApp} = useFocusedApplication();\n  const {\n    dragFunc,\n    dropFunc,\n    collectedProps: {isDragging}\n  } = useApplicationDND({\n    ref,\n    doDrag: moveAppTile,\n    dropIndex: index,\n    canDrag: inDNDState,\n    id\n  });\n  const {selectDashboardPage} = useDashboardPageNavigation();\n\n  const applicationTileClasses = classNames(css.applicationTile, {\n    [css.withDndStyles]: inDNDState,\n    [css.dragging]: isDragging,\n    [css.appIsLoading]: isLoading,\n    [css.notAvailable]: !online\n  });\n\n  const openApp = async () => {\n    setIsLoading(true);\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await getAppData(uuid);\n    setCurrentFocusedApp({\n      html: htmlStream,\n      script: scriptStream,\n      currentAppName: name,\n      currentAppId: uuid\n    });\n    selectDashboardPage(DashboardPages.FocusedApp);\n  };\n\n  dragFunc(dropFunc(ref));\n\n  return (\n    <div>\n      <div className={css.dndPlaceHolder} />\n      <Flipped flipId={id}>\n        <div className={css.applicationTileOuter}>\n          <div\n            ref={ref}\n            className={applicationTileClasses}\n            style={{\n              opacity: isDragging ? 0 : 1\n            }}\n          >\n            <div onClick={openApp} className={css.thumbnailWrapper}>\n              <Thumbnail name={name} inDndState={inDNDState} />\n            </div>\n            <TileOptionsMenu\n              inDndState={inDNDState}\n              isLoading={isLoading}\n              appDetails={{\n                name,\n                uuid\n              }}\n            />\n            <Text\n              className={css.applicationName}\n              weight=\"normal\"\n              fontSize=\"12px\"\n            >\n              {name}\n            </Text>\n            <div onClick={openApp} className={css.openApplication}>\n              <Text weight=\"bold\" fontSize=\"12px\" color=\"#768093\">\n                OPEN\n              </Text>\n            </div>\n            {isLoading && (\n              <div className={css.loader}>\n                <Loader />\n              </div>\n            )}\n            {!online && <div className={css.notAvailablePlaceholder} />}\n          </div>\n        </div>\n      </Flipped>\n    </div>\n  );\n};\n","import {useDrop, DropTargetMonitor, useDrag} from \"react-dnd\";\nimport {DRAG_DROP_TYPE} from \"../pages/Applications/Applications\";\n\ninterface DragItem {\n  dropIndex: number;\n  id: string;\n  type: string;\n}\n\ninterface UseApplicationDNDParams {\n  ref: React.RefObject<HTMLDivElement>;\n  doDrag: Function;\n  dropIndex: number;\n  canDrag: boolean;\n  id: number;\n}\n\ninterface CollectedProps {\n  isDragging: boolean;\n}\ntype UseApplicationDND = (\n  p: UseApplicationDNDParams\n) => {dragFunc: any; dropFunc: any; collectedProps: CollectedProps};\n\nexport const useApplicationDND: UseApplicationDND = ({\n  ref,\n  doDrag,\n  dropIndex,\n  canDrag,\n  id\n}) => {\n  const [, drop] = useDrop({\n    accept: DRAG_DROP_TYPE,\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.dropIndex;\n      const hoverIndex = dropIndex;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine Hovered on rectangle position on screen\n      const hoverBoundingRect = ref.current!.getBoundingClientRect();\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      const hoverMiddleX =\n        (hoverBoundingRect.left - hoverBoundingRect.right) / 2;\n      const hoverClientX = clientOffset!.x - hoverBoundingRect.right;\n      // Dragging rightwards\n      if (dragIndex < hoverIndex && hoverClientX < hoverMiddleX) {\n        return;\n      }\n\n      // Dragging leftwards\n      if (dragIndex > hoverIndex && hoverClientX > hoverMiddleX) {\n        return;\n      }\n\n      doDrag(dragIndex, hoverIndex);\n      item.dropIndex = hoverIndex;\n    }\n  });\n\n  const [collectedProps, drag] = useDrag({\n    item: {type: DRAG_DROP_TYPE, id, dropIndex},\n    canDrag,\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  return {dragFunc: drag, dropFunc: drop, collectedProps};\n};\n","import * as React from \"react\";\nimport css from \"./RearrangeButton.module.scss\";\nimport {Text} from \"../../../components/Text\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faTimes,\n  faArrowsAltV\n} from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {PageTitleAction} from \"../../../components/PageTitle/PageTitleAction\";\n\ninterface RearrangeAppTilesProps {\n  inDNDState: boolean;\n  doRearrangeClick: () => void;\n  doSaveClick: () => void;\n  doCancelClick: () => void;\n}\n\nexport const RearrangeAppTiles: React.FC<RearrangeAppTilesProps> = ({\n  inDNDState,\n  doRearrangeClick,\n  doSaveClick,\n  doCancelClick\n}) => {\n  return (\n    <CSSTransition\n      in={inDNDState}\n      timeout={200}\n      classNames={{\n        enterDone: css.enterDone,\n        exitDone: css.inDndStateTransitionExitDone\n      }}\n    >\n      <div className={css.rearrangeButtonWrapper}>\n        <div className={css.rearrangeButtonWrapperInnter}>\n          <PageTitleAction\n            doAction={doRearrangeClick}\n            text=\"REARRANGE\"\n            actionActive={inDNDState}\n            icon={\n              <FontAwesomeIcon\n                icon={faArrowsAltV}\n                className={css.faArrowsAltV}\n              />\n            }\n          />\n          <CSSTransition\n            in={inDNDState}\n            timeout={300}\n            mountOnEnter\n            unmountOnExit\n            classNames={{\n              appear: css.appear,\n              enterDone: css.saveCancelAppsOrderEnterDone\n            }}\n          >\n            <span className={css.saveCancelAppsOrder}>\n              <span className={css.saveDNDState} onClick={doSaveClick}>\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  className={classNames(css.saveIcon)}\n                />\n                <Text fontSize=\"12px\" weight=\"bold\">\n                  save\n                </Text>\n              </span>\n              <span className={css.cancelDNDState} onClick={doCancelClick}>\n                <FontAwesomeIcon icon={faTimes} className={css.cancelIcon} />\n                <Text fontSize=\"12px\" weight=\"bold\">\n                  cancel\n                </Text>\n              </span>\n            </span>\n          </CSSTransition>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import React from \"react\";\nimport css from \"./FocusedApp.module.scss\";\nimport {useFocusedApplication} from \"../../hooks/useFocusedApplication\";\nimport {usePinnedAppsContext} from \"../../hooks/usePinnedApps\";\nimport {PinnAppIcon} from \"../PinnApp/PinnApp\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {DashboardPages} from \"../../enums\";\nimport {useDashboardPageNavigation} from \"../../hooks/useDashboardPageNavigation\";\nimport {PageTitleAction} from \"../PageTitle/PageTitleAction\";\n\nexport const FocusedAppActions: React.FC = () => {\n  const {selectDashboardPage} = useDashboardPageNavigation();\n  const {pinnApp, getPinnedApp, removeApp} = usePinnedAppsContext();\n  const {\n    currentAppName,\n    currentAppId,\n    removeFromFocus\n  } = useFocusedApplication();\n  const isPinned = !!getPinnedApp(currentAppId);\n\n  React.useEffect(() => {\n    return () => removeFromFocus();\n    // eslint-disable-next-line\n  }, []);\n\n  const closeFocusedApp = () => {\n    selectDashboardPage(DashboardPages.ApplicationPage);\n  };\n\n  const togglePinnedApp = () =>\n    isPinned\n      ? removeApp(currentAppId)\n      : pinnApp({name: currentAppName, uuid: currentAppId});\n\n  return (\n    <>\n      <PageTitleAction\n        icon={\n          <PinnAppIcon isPinned={isPinned} externalstyles={css.pinnAppIcon} />\n        }\n        doAction={togglePinnedApp}\n        text={isPinned ? \"UNPIN\" : \"PIN\"}\n      />\n      <PageTitleAction\n        icon={<FontAwesomeIcon icon={faTimes} className={css.faTimes} />}\n        doAction={closeFocusedApp}\n        text=\"CLOSE\"\n      />\n    </>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./FocusedApp.module.scss\";\nimport {Portal} from \"../Portal\";\nimport {useFocusedApplication} from \"../../hooks/useFocusedApplication\";\nimport {PageTitle} from \"../PageTitle/PageTitle\";\nimport {Thumbnail} from \"../Thumbnail/Thumbnail\";\nimport {Text} from \"../Text\";\nimport {FocusedAppActions} from \"./FocusedAppActions\";\n\nexport const FocusedApp: React.FC<{openSideMenu: () => void}> = ({\n  openSideMenu,\n}) => {\n  const {focusedAppStreams, currentAppName} = useFocusedApplication();\n\n  return (\n    <>\n      <PageTitle\n        openSideMenu={openSideMenu}\n        title={\n          <>\n            <Thumbnail\n              className={css.currentAppThumbnail}\n              name={currentAppName}\n              size=\"x2\"\n            />\n            <Text fontSize=\"18px\" weight=\"bold\">\n              {currentAppName}\n            </Text>\n          </>\n        }\n        actions={<FocusedAppActions />}\n      />\n      <Portal\n        html={focusedAppStreams!.html}\n        scripts={focusedAppStreams!.script}\n      ></Portal>\n    </>\n  );\n};\n","import React from \"react\";\nimport css from \"./App.module.scss\";\nimport {SideMenu} from \"../SideMenu/SideMenu\";\nimport {DashboardsPage} from \"../../pages/Dashboard/Dashboard\";\nimport {NodesPage} from \"../../pages/Nodes/NodesPage\";\nimport {ApplicationsPage} from \"../../pages/Applications/Applications\";\nimport {DashboardPages} from \"../../enums\";\nimport {useDashboardPageNavigation} from \"../../hooks/useDashboardPageNavigation\";\nimport {FocusedApp} from \"../FocusedApp/FocusedApp\";\nimport {CSSTransition} from \"react-transition-group\";\nimport classNames from \"classnames\";\n\nwindow.__DASHBOARD_GLOBALS__ = {\n  userSessionId: \"1234-1234321-dk322-111\",\n};\nexport const App: React.FC = () => {\n  const {currentDashboardPage} = useDashboardPageNavigation();\n  const [isSideMenuOpened, setIsSideMenuOpened] = React.useState(false);\n  const [isMounted, setIsMounted] = React.useState<boolean>(true);\n  const [\n    currentPageToRender,\n    setCurrentPageToRender,\n  ] = React.useState<null | DashboardPages>(null);\n\n  React.useEffect(() => {\n    setIsMounted(false);\n\n    const timeoutId = setTimeout(() => {\n      setCurrentPageToRender(currentDashboardPage);\n      setIsMounted(true);\n    }, 300);\n    return () => clearTimeout(timeoutId);\n  }, [currentDashboardPage]);\n\n  const getPage = () => {\n    switch (currentPageToRender) {\n      case DashboardPages.DashboardPage:\n        return (\n          <DashboardsPage\n            openSideMenu={() => setIsSideMenuOpened(!isSideMenuOpened)}\n          />\n        );\n      case DashboardPages.SettingsPage:\n        return (\n          <NodesPage\n            openSideMenu={() => setIsSideMenuOpened(!isSideMenuOpened)}\n          />\n        );\n      case DashboardPages.ApplicationPage:\n        return (\n          <ApplicationsPage\n            openSideMenu={() => setIsSideMenuOpened(!isSideMenuOpened)}\n          />\n        );\n      case DashboardPages.FocusedApp:\n        return (\n          <FocusedApp\n            openSideMenu={() => setIsSideMenuOpened(!isSideMenuOpened)}\n          />\n        );\n      default:\n        return (\n          <DashboardsPage\n            openSideMenu={() => setIsSideMenuOpened(!isSideMenuOpened)}\n          />\n        );\n    }\n  };\n\n  return (\n    <main\n      className={classNames(css.siteContent, {\n        [css.sideMenuOpened]: isSideMenuOpened,\n      })}\n    >\n      <SideMenu />\n      <section className={css.pageRightWrapper}>\n        <div className={css.pageBasePlaceholder} />\n        <CSSTransition\n          in={isMounted}\n          timeout={0}\n          classNames={{\n            enterDone: css.slideInAnimation,\n            exitDone: css.slideOutAnimation,\n          }}\n        >\n          <section className={css.pageWrapper}>{getPage()}</section>\n        </CSSTransition>\n      </section>\n    </main>\n  );\n};\n","import * as React from \"react\";\nimport {App} from \"../App/App\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\nimport \"../fonts.module.scss\";\nimport \"../globals.module.scss\";\nimport {DashboardPageNavigationProvider} from \"../../Providers/DashboardPageNavigationProvider\";\nimport {DndProvider} from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport {PinnedAppsContextProvider} from \"../../Providers/PinnedAppsContext\";\nimport {FocusedAppContextProvider} from \"../../Providers/FocusedAppContextProvider\";\nimport {SessionStorageProvider} from \"../../Providers/SessionStorageProvider\";\n\nexport const AppWithProviders = () => {\n  const {userSessionId} = window.__DASHBOARD_GLOBALS__;\n\n  return (\n    <SessionStorageProvider userSessionId={userSessionId}>\n      {/* drag and drop provider */}\n      <DndProvider backend={HTML5Backend}>\n        <DashboardContext.Provider\n          value={{dashboardServerApi: new DashboardServerApi()}}\n        >\n          <DashboardPageNavigationProvider>\n            <PinnedAppsContextProvider>\n              <FocusedAppContextProvider>\n                <App />\n              </FocusedAppContextProvider>\n            </PinnedAppsContextProvider>\n          </DashboardPageNavigationProvider>\n        </DashboardContext.Provider>\n      </DndProvider>\n    </SessionStorageProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  //if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  // The URL constructor is available in all browsers that support SW.\n  const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n  if (publicUrl.origin !== window.location.origin) {\n    // Our service worker won't work if PUBLIC_URL is on a different origin\n    // from what our page is served on. This might happen if a CDN is used to\n    // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    return;\n  }\n\n  window.addEventListener(\"load\", () => {\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n    if (isLocalhost) {\n      // This is running on localhost. Let's check if a service worker still exists or not.\n      checkValidServiceWorker(swUrl, config);\n\n      // Add some additional logging to localhost, pointing developers to the\n      // service worker/PWA documentation.\n      navigator.serviceWorker.ready.then(() => {\n        console.log(\n          \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n        );\n      });\n    } else {\n      // Is not localhost. Just register service worker\n      registerValidSW(swUrl, config);\n    }\n  });\n  //}\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {AppWithProviders as App} from \"./components/AppWithProviders/AppWithProviders\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rearrangeButtonWrapper\":\"RearrangeButton_rearrangeButtonWrapper__2vVA0\",\"rearrangeButtonWrapperInnter\":\"RearrangeButton_rearrangeButtonWrapperInnter__1UCc8\",\"cancelIcon\":\"RearrangeButton_cancelIcon__2PMlR\",\"saveIcon\":\"RearrangeButton_saveIcon__3f0Ng\",\"cancelDNDState\":\"RearrangeButton_cancelDNDState__2ZXHZ\",\"saveDNDState\":\"RearrangeButton_saveDNDState__3PFKZ\",\"faArrowsAltV\":\"RearrangeButton_faArrowsAltV__THbz1\",\"saveCancelAppsOrder\":\"RearrangeButton_saveCancelAppsOrder__1l-16\",\"enterDone\":\"RearrangeButton_enterDone__exrpC\",\"appear\":\"RearrangeButton_appear__2H636\",\"saveCancelAppsOrderEnterDone\":\"RearrangeButton_saveCancelAppsOrderEnterDone__1NZoa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionItem\":\"PageTitle_actionItem__3GBKt\",\"active\":\"PageTitle_active__Q5kjd\",\"pageTitle\":\"PageTitle_pageTitle__ZJk1F\",\"pageTitleContent\":\"PageTitle_pageTitleContent__13DHM\",\"thin\":\"PageTitle_thin__26MLb\",\"pageTitleName\":\"PageTitle_pageTitleName__8ACx7\",\"currentAppActions\":\"PageTitle_currentAppActions__2J5Xk\",\"iconWrapper\":\"PageTitle_iconWrapper__1Beps\",\"sideMenuHamburger\":\"PageTitle_sideMenuHamburger__2FR-W\",\"actionItemText\":\"PageTitle_actionItemText__3Ljzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionMenuWrapper\":\"ViewButton_actionMenuWrapper__2T1ET\",\"afaSortAmountDown\":\"ViewButton_afaSortAmountDown__XsPX2\",\"actionMenu\":\"ViewButton_actionMenu__1-Pkv\",\"actionMenuItem\":\"ViewButton_actionMenuItem__2xA7O\",\"selected\":\"ViewButton_selected__OIvRk\",\"viewFilterWrapper\":\"ViewButton_viewFilterWrapper__4T2xj\",\"selectedView\":\"ViewButton_selectedView__1TbeK\",\"appear\":\"ViewButton_appear__1fa-w\",\"enterDone\":\"ViewButton_enterDone__3HsRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"DashboardTile_dashboardWrapper__toTZD\",\"smartHome\":\"DashboardTile_smartHome__1b2Zp\",\"dashboardTitle\":\"DashboardTile_dashboardTitle__18C7s\",\"dashboardThumbnailWrapper\":\"DashboardTile_dashboardThumbnailWrapper__3q-Z8\",\"imageThumbnail\":\"DashboardTile_imageThumbnail__2MR2T\",\"imageSize\":\"DashboardTile_imageSize__1tnGp\",\"textThumbnail\":\"DashboardTile_textThumbnail__1H87M\",\"textThumbnailLarge\":\"DashboardTile_textThumbnailLarge__3q1PR\",\"dashboardContent\":\"DashboardTile_dashboardContent__1dav-\",\"mkAppModalWrapper\":\"DashboardTile_mkAppModalWrapper__3rnWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transition\":\"Animations_transition__2SE8_\",\"animationBaseState\":\"Animations_animationBaseState__1rrpz\",\"cardSettingsOpenned\":\"Animations_cardSettingsOpenned__Mxlr_\",\"cardSettingsClosed\":\"Animations_cardSettingsClosed__nmRDG\",\"masterNodeExpandedEnter\":\"Animations_masterNodeExpandedEnter__MocWp\",\"masterNodeExpandedDone\":\"Animations_masterNodeExpandedDone__2JLQq\",\"overlay\":\"Animations_overlay__2QZ6E\",\"enter\":\"Animations_enter__1bLki\",\"enterDone\":\"Animations_enterDone__2-eF4\",\"exit\":\"Animations_exit__3O8JQ\",\"exitActive\":\"Animations_exitActive__3La7H\",\"exitDone\":\"Animations_exitDone__HBp9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteContent\":\"App_siteContent__1O-1Q\",\"sideMenuOpened\":\"App_sideMenuOpened__1AdT6\",\"pageRightWrapper\":\"App_pageRightWrapper__sAd62\",\"pageWrapper\":\"App_pageWrapper__3gEx6\",\"pageBasePlaceholder\":\"App_pageBasePlaceholder__1ru0J\",\"slideInAnimation\":\"App_slideInAnimation__1WqZf\",\"slideOutAnimation\":\"App_slideOutAnimation__1AsiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsMenu\":\"TileOptionsMenu_optionsMenu__Ro23U\",\"optionsItem\":\"TileOptionsMenu_optionsItem__3z54S\",\"optionsMenuDnd\":\"TileOptionsMenu_optionsMenuDnd__2Yq--\",\"appIsLoading\":\"TileOptionsMenu_appIsLoading__2pzMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeSettingsWrapper\":\"NodeSettings_nodeSettingsWrapper__3Q2nE\",\"nodeSettingsHeader\":\"NodeSettings_nodeSettingsHeader__1bDOt\",\"nodeSettingsTitle\":\"NodeSettings_nodeSettingsTitle__3OS-v\",\"nodeSettingsHeaderDetails\":\"NodeSettings_nodeSettingsHeaderDetails__3Ba9m\",\"nodeSettingsContent\":\"NodeSettings_nodeSettingsContent__2Zy2H\",\"loaderWrapper\":\"NodeSettings_loaderWrapper__kF9zg\",\"closeButton\":\"NodeSettings_closeButton__7bnid\",\"cardSettings\":\"NodeSettings_cardSettings__UYiKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"FocusedApp_pageWrapper__A5wkr\",\"currentAppThumbnail\":\"FocusedApp_currentAppThumbnail__2KwEL\",\"pinnAppIcon\":\"FocusedApp_pinnAppIcon__2yKZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallWrapper\":\"Thumbnail_smallWrapper__36W3w\",\"thumbnailText\":\"Thumbnail_thumbnailText__2XF_z\",\"normalWrapper\":\"Thumbnail_normalWrapper__TJGq-\",\"withDndStyles\":\"Thumbnail_withDndStyles__2w1lp\",\"textThumbnailLarge\":\"Thumbnail_textThumbnailLarge__3rvft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContentWrapper\":\"NodePage_pageContentWrapper__ZeBGu\",\"nodeCardWrapper\":\"NodePage_nodeCardWrapper__3xvZk\",\"cardWrapperSettingsLoaded\":\"NodePage_cardWrapperSettingsLoaded__3rrjO\",\"pageHeaderWrapper\":\"NodePage_pageHeaderWrapper__1YrVp\",\"displayMasterNode\":\"NodePage_displayMasterNode__Um4Zs\",\"nodeSettingsSpinner\":\"NodePage_nodeSettingsSpinner__2dIih\",\"loading\":\"NodePage_loading__2JBqI\",\"pageTitleCustomWrapper\":\"NodePage_pageTitleCustomWrapper__1soXP\",\"pageTitle\":\"NodePage_pageTitle__2OLF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minimizedView\":\"SideMenu_minimizedView__1BQeZ\",\"pinnedEmptyState\":\"SideMenu_pinnedEmptyState__36Zrx\",\"pinnedApp\":\"SideMenu_pinnedApp__3ZjOo\",\"pinnedAppText\":\"SideMenu_pinnedAppText__cBiy_\",\"pinnedAppTextSmallScreen\":\"SideMenu_pinnedAppTextSmallScreen__2ZTMu\",\"pinnedContentWrapper\":\"SideMenu_pinnedContentWrapper__1NpA0\",\"sideMenuItem\":\"SideMenu_sideMenuItem__1uYWu\",\"sideMenuWrapper\":\"SideMenu_sideMenuWrapper__2Sypt\",\"sideMenuTitle\":\"SideMenu_sideMenuTitle__3gLou\",\"sideMenuItemIcon\":\"SideMenu_sideMenuItemIcon__ZZbgL\",\"menuItemText\":\"SideMenu_menuItemText__11Z0t\",\"loggedInUserSectionWrapper\":\"SideMenu_loggedInUserSectionWrapper__1hOwM\",\"userName\":\"SideMenu_userName__3iQnu\",\"userNameCollapsed\":\"SideMenu_userNameCollapsed__1C5NW\",\"userThumbnail\":\"SideMenu_userThumbnail__1COiW\",\"customHight\":\"SideMenu_customHight__3eyfk\",\"sideMenuIPinnedApps\":\"SideMenu_sideMenuIPinnedApps__WJHd2\",\"selected\":\"SideMenu_selected__3ix6Q\",\"generalSectionWrapper\":\"SideMenu_generalSectionWrapper__ceS9A\",\"pinnedSectionWrapper\":\"SideMenu_pinnedSectionWrapper__1uBva\",\"explanation\":\"SideMenu_explanation__1sW3x\",\"minimizeSideMenuIcon\":\"SideMenu_minimizeSideMenuIcon__67CPD\",\"isMinimized\":\"SideMenu_isMinimized__3mAVD\",\"disabled\":\"SideMenu_disabled__39wvy\",\"faAngleLeft\":\"SideMenu_faAngleLeft__US-F9\",\"faSignOutAlt\":\"SideMenu_faSignOutAlt__2qFw_\",\"signoutButton\":\"SideMenu_signoutButton__2oclW\",\"footerSection\":\"SideMenu_footerSection__366tu\",\"faEllipsisV\":\"SideMenu_faEllipsisV__2eKK3\",\"opened\":\"SideMenu_opened__3EByl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pinnAppWrapper\":\"PinnApp_pinnAppWrapper__2dsgI\",\"pinnedIcon\":\"PinnApp_pinnedIcon__5lP3U\",\"pinned\":\"PinnApp_pinned__k0U11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dashboard_wrapper__3GXKJ\",\"pageContentWrapper\":\"Dashboard_pageContentWrapper__1Ydp5\",\"underConstruction\":\"Dashboard_underConstruction__rSC17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1BGHY\",\"loading\":\"Loader_loading__21jB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitleWrapper\":\"Applications_pageTitleWrapper__LO6_n\",\"pageContentWrapper\":\"Applications_pageContentWrapper__NGUge\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"NodeCard_cardWrapper__2qU5P\",\"hovered\":\"NodeCard_hovered__dw55j\",\"expandTicker\":\"NodeCard_expandTicker__3bIfT\",\"disabled\":\"NodeCard_disabled__2m2KQ\",\"nodeCardSummaryWrapper\":\"NodeCard_nodeCardSummaryWrapper__12Qb5\",\"section\":\"NodeCard_section__14Xlf\",\"cardSectionText\":\"NodeCard_cardSectionText__1Xitc\",\"IconSection\":\"NodeCard_IconSection__23JY3\",\"deviceContentWrapper\":\"NodeCard_deviceContentWrapper__8uqOq\",\"deviceType\":\"NodeCard_deviceType__Z_IG1\",\"deviceName\":\"NodeCard_deviceName__2GB9L\",\"deviceId\":\"NodeCard_deviceId__LH0fx\",\"deviceSettingsMenu\":\"NodeCard_deviceSettingsMenu__3ugzy\",\"deviceSettingsMenuIcon\":\"NodeCard_deviceSettingsMenuIcon__Sc9-_\",\"nodeSettingPageWrapper\":\"NodeCard_nodeSettingPageWrapper___vKYt\",\"placeHolderWidth\":\"NodeCard_placeHolderWidth__2tYkl\",\"nodeSettingPage\":\"NodeCard_nodeSettingPage__udVT_\",\"modalWrapper\":\"NodeCard_modalWrapper__3WLn6\"};"],"sourceRoot":""}