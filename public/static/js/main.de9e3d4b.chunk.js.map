{"version":3,"sources":["components/Icons/LogoutIcon.tsx","components/Icons/FavoritesIcon.tsx","components/Icons/ApplicationIcon.tsx","components/Icons/SensorsIcon.tsx","components/Icons/HelpIcon.tsx","components/Icons/AccountIcon.tsx","components/Icons/DashboardSettingsIcon.tsx","components/Text/Text.tsx","constans/enums.ts","components/Header/Header.tsx","Providers/DashboardPageNavigationProvider.tsx","hooks/useDashboardPageNavigation.ts","components/SideMenu/MenuSections/GeneralSection.tsx","Providers/PinnedAppsContext.tsx","hooks/usePinnedApps.ts","components/SideMenu/MenuSections/PinnedSection.tsx","components/SideMenu/MenuSections/LoggedInUserSection.tsx","components/SideMenu/SideMenu.tsx","serverApiMocks.ts","services/DashboardServerApi/DashboardServerApi.ts","Providers/ServerApiContext.tsx","components/Portal/Portal.tsx","components/Pages/Dashboard/DashboardTile/DashboardTile.tsx","components/AppLoader/AppLoader.tsx","components/PageTitle/PageTitle.tsx","components/Skeleton/DashboardTile.tsx","components/Pages/Dashboard/Dashboard.tsx","hooks/useServerApiContext.ts","components/Icons/CloseButton.tsx","hooks/useFetch.ts","components/Loader/Loader.tsx","components/Pages/Nodes/NodeSettings/NodeSettings.tsx","Providers/AnimationsContextProvider.ts","components/Pages/Nodes/NodeCardAnimations/OpenNodeSettingsAnimation.tsx","hooks/useAnimationsUtils.ts","components/SkeletonShimmer/SkeletonShimmer.tsx","components/Pages/Nodes/NodeCard/NodeCardTypography.tsx","components/Pages/Nodes/NodeCard/NodeCardSummary.tsx","components/Pages/Nodes/NodeCard/NodeCard.tsx","components/Pages/Nodes/NodeMasterCard/NodeMasterCard.tsx","utils/CamelCaseConverter.ts","serviceWorker.js","components/Pages/Nodes/NodesPage.tsx","components/Pages/Applications/ApplicationTile.tsx","hooks/useApplicationDND.ts","components/Pages/Applications/RearrangeButton/RearrangeButton.tsx","components/Pages/Applications/Applications.tsx","components/App/App.tsx","index.tsx","components/AppWithProviders/AppWithProviders.tsx","components/Pages/Nodes/NodeCard/NodeCard.module.scss","components/Pages/Applications/RearrangeButton/RearrangeButton.module.scss","components/Pages/Nodes/NodeMasterCard/NodeMasterCard.module.scss","components/Pages/Dashboard/DashboardTile/DashboardTile.module.scss","components/Pages/Nodes/NodeCardAnimations/Animations.module.scss","components/Header/Header.module.scss","components/Pages/Nodes/NodeSettings/NodeSettings.module.scss","components/Pages/Dashboard/Dashboard.module.scss","components/Pages/Nodes/NodePage.module.scss","components/SideMenu/SideMenu.module.scss","components/App/App.module.scss","components/Loader/Loader.module.scss","components/Pages/Applications/Applications.module.scss","components/PageTitle/PageTitle.module.scss","assets/img/react_logo.svg"],"names":["LogoutIcon","React","className","this","props","version","id","x","y","width","height","viewBox","enableBackground","d","DashboardPages","Text","fontSize","color","weight","skeletonColor","showSkeleton","children","commonStyle","fontFamily","fontWeight","skeletonStyles","backgroundColor","content","style","Header","css","contentHeader","sectionTitle","logoutWrapper","logoutIcon","userName","headerTriangle","DashboardPageNavigation","createContext","currentDashboardPage","SETTINGS_PAGE","selectDashboardPage","DashboardPageNavigationProvider","useState","APPLICATION_PAGE","Provider","value","useDashboardPageNavigation","useContext","GeneralSection","generalSectionWrapper","sideMenuTitle","pageName","DASHBOARD_PAGE","icon","faLaptopCode","size","sideMenuItemIcon","menuItemText","faGripHorizontal","faProjectDiagram","HELP_PAGE","faHeadset","SideMenuItem","onClick","classNames","sideMenuItem","selected","PinnedAppsContext","pinnedAppsList","pinnApp","getPinnedApp","name","uuid","removeApp","PinnedAppsContextProvider","setPinnedListApps","find","pinnedApp","appDetails","uuidToRemove","filter","usePinnedAppsContext","PinnedSection","pinnedSectionWrapper","length","pinnedEmptyState","explanation","map","key","PinnedAppItem","pinnedAppText","pinnedAppTextSmallScreen","charAt","toUpperCase","showInnitials","removePinnedAppIcon","faTimesCircle","LoggedInUserSection","loggedInUserSectionWrapper","userThumbnail","userNameCollapsed","userActions","SideMenu","sideMenuWrapper","thumbnail","require","DashboardServerApi","makeSenseApi","window","MkSAPIBuilder","GetInstance","getApplicationThumbnail","console","log","Promise","resolve","getNodeDetails","GetNodeInfo","response","_error","payload","data","getNodeSettings","all","getNodeHtmlSettings","getNodeScriptsSettings","then","nodeSettingsFiles","html","scripts","getAppData","getAppHtml","getAppScripts","GetFileContent","ui_type","file_name","file_type","getNodeList","reject","Webface","GetUserNodeList","nodes","error","ConnectGateway","Gateway","OnGatewayDataArrivedCallback","OnGatewayAdminCallback","ServerApiContext","dashboardServerApi","DashboardContext","ownState","Portal","context","state","iframeRoot","createIframeContent","hexxStream","hexString","toString","parstedString","i","substr","String","fromCharCode","parseInt","current","htmlString","decodeDomProperty","script","iframeWrapper","ReactDOM","findDOMNode","contentDocument","open","write","close","title","display","frameBorder","ref","contextType","initialDashboardTileState","isMkAppOpen","DashboardTile","renderThumbnail","description","dashboardThumbnailWrapper","textThumbnailLarge","textThumbnail","openMKAppMainView","a","htmlStream","scriptStream","setState","closeMKAppMainView","last6chars","substring","onDoubleClick","dashboardWrapper","smartHome","dashboardTitle","dashboardContent","closeOnEsc","modal","mkAppModalWrapper","onClose","innitialState","appThumbnail","mkAppLoadedData","appProps","AppLoader","mkAppInitData","nodeDetails","render","PageTitle","pageTitle","DashboardTileSkeleton","innitialDashboardsPageState","appList","DashboardsPage","pageWrapper","underConstruction","pageContentWrapper","mkApp","index","loadedProps","marginTop","textAlign","zIndex","background","position","boxShadow","useServerApiContext","CloseButton","xmlns","useFetch","fetcherFunction","setData","isLoading","setIsLoading","useEffect","Error","fetchData","Loader","loading","spinner","NodeSettings","deviceUuid","nodeName","fetcherFucntion","useCallback","nodeSettingsData","nodeSettingsWrapper","nodeSettingsHeader","nodeSettingsHeaderDetails","closeButton","nodeSettingsContent","AnimationsContext","nodePageRef","OpenNodeSettingsAnimation","isOpened","nodeCardRef","calcDistanceFromParentTop","nodePageTop","getClientRects","top","refTop","useAnimationsUtils","translateY","transform","transitionClassNames","enter","enterDone","exit","exitActive","exitDone","timeout","in","animationBaseState","cardSettingsOpenned","cardSettingsClosed","SkeletonShimmer","shimmerAnimations","keyframes","Shimmer","styled","div","Subtitle","CardText","NodeCardSummary","onNodeSettingsClick","type","isOnline","online","nodeCardSummaryWrapper","customClassName","deviceType","deviceName","deviceStatus","CardIconSection","section","IconSectionBackground","faCodeBranch","SummaryOptionsMenu","deviceContentWrapper","deviceSettingsMenu","deviceSettingsMenuIcon","faBars","CardSection","NodeCard","cardSettingOpenned","setCardSettingsOpenned","cardWrapper","hovered","disabled","NodeMasterCard","showSlavesList","setShowSlavesList","expandTickerClicked","setExpandTickerClicked","enterActive","slavesListExpandEnterActive","slavesListExpandEnterDone","slaveListExpandExit","slaveListExpandExitDone","nodeMasterCard","tickerPositionWrapper","expandTicker","onExited","slavesWrapper","slaves","slaveDetails","slaveNodeCard","config","toCamelCase","obj","Object","keys","reduce","acc","currnet","camelCase","NodesPage","pageRef","useRef","nodeList","masterNodesList","aggregateByMasterNodes","pageHeaderWrapper","node","ApplicationTile","moveAppTile","inDNDState","inDndState","isOpenAppClicked","setIsOpenAppClicked","isAppLoaded","setIsAppLoaded","setAppData","doDrag","dropIndex","canDrag","useDrop","accept","DRAG_DROP_TYPE","hover","item","monitor","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","hoverMiddleX","left","right","hoverClientX","drop","useDrag","collect","isDragging","collectedProps","dragFunc","dropFunc","useApplicationDND","openApp","applicationTileClasses","applicationTile","withDndStyles","dragging","appIsLoading","dndPlaceHolder","flipId","applicationTileWrapper","opacity","appName","onOpenAppClick","apploader","OpenApplication","openAppInner","openAppText","OptionsMenu","isAppPinned","optionsMenu","optionsItem","pinnedIcon","pinned","faThumbtack","Thumbnail","thumbnailWrapper","RearrangeAppTiles","doRearrangeClick","doSaveClick","doCancelClick","inDndStateTransitionExitDone","rearrangeButtonWrapper","rearrangeButtonWrapperInnter","rearrangeButton","active","faArrowsAltV","mountOnEnter","unmountOnExit","appear","saveCancelAppsOrderEnterDone","saveCancelAppsOrder","saveDNDState","faCheck","saveIcon","cancelDNDState","faTimes","cancelIcon","ApplicationsPage","orderedNodeList","setOrderedNodeList","previousOrderedNodeList","setPreviousOrderedNodeList","setDNDState","dragAppTile","update","$splice","pageTitleWrapper","flipKey","JSON","stringify","s","nodeProps","App","root","siteContent","renderCurrentPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","BrowserRouter","backend","HTML5Backend","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.de9e3d4b.chunk.js","sourcesContent":["import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class LogoutIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M32,64c8.547,0,16.583-3.329,22.627-9.374c6.045-6.044,9.374-14.079,9.374-22.626s-3.329-16.582-9.374-22.626\n                  C48.583,3.329,40.547,0,32,0C23.452,0,15.417,3.329,9.373,9.374C3.328,15.418-0.001,23.453-0.001,32s3.329,16.582,9.374,22.626\n                  C15.417,60.671,23.452,64,32,64z M10.787,10.788C16.453,5.121,23.986,2,32,2c8.013,0,15.547,3.121,21.213,8.788\n                  C58.88,16.454,62.001,23.987,62.001,32s-3.121,15.546-8.788,21.212C47.547,58.879,40.013,62,32,62\n                  c-8.014,0-15.547-3.121-21.213-8.788C5.12,47.546,1.999,40.013,1.999,32S5.12,16.454,10.787,10.788z\"\n          />\n          <rect x=\"31\" y=\"17\" width=\"2\" height=\"22\" />\n          <rect x=\"31\" y=\"43\" width=\"2\" height=\"4\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class FavoritesIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M48,4c-7.357,0-13.639,4.146-16,9.929C29.639,8.146,23.357,4,16,4C5.985,4,0,12.644,0,21\n                  c0,8.589,5.326,17.755,15.83,27.242c7.738,6.989,15.59,11.577,15.668,11.623L32,60.156l0.502-0.291\n                  c0.079-0.046,7.93-4.634,15.668-11.623C58.674,38.755,64,29.589,64,21C64,12.644,58.015,4,48,4z M32,57.833\n                  C28.031,55.41,2,38.828,2,21C2,13.627,7.237,6,16,6c7.214,0,15,4.971,15,13h2c0-8.029,7.786-13,15-13c8.763,0,14,7.627,14,15\n                  C62,38.818,35.968,55.409,32,57.833z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class ApplicationIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n        color=\"#768093\"\n      >\n        <g>\n          <path d=\"M0,58h64V6H0V58z M2,56V16h60v40H2z M62,8v6H2V8H62z\" />\n          <rect x=\"6\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"14\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"22\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"6\" y=\"24\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"32\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"40\" width=\"27\" height=\"2\" />\n          <path d=\"M37,42h21V24H37V42z M39,26h17v14H39V26z\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class SensorsIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n        color=\"#768093\"\n      >\n        <g>\n          <path d=\"M0,58h64V6H0V58z M2,56V16h60v40H2z M62,8v6H2V8H62z\" />\n          <rect x=\"6\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"14\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"22\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"6\" y=\"24\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"32\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"40\" width=\"27\" height=\"2\" />\n          <path d=\"M37,42h21V24H37V42z M39,26h17v14H39V26z\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class HelpIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M53,27h-1v-5c0-0.17-0.229-17-20-17S12,21.83,12,22v5h-1C4.935,27,0,31.935,0,38s4.935,11,11,11h3V31v-4v-5\n                  c0-0.612,0.205-15,18-15c17.739,0,17.998,14.389,18,15v5v1v20v1v3.323l-13,5.2V54H27v6h9.192L52,53.677V49h1\n                  c6.065,0,11-4.935,11-11S59.065,27,53,27z M12,47h-1c-4.963,0-9-4.038-9-9s4.037-9,9-9h1v2V47z M29,58v-2h6v2H29z M53,47h-1V29h1\n                  c4.963,0,9,4.038,9,9S57.963,47,53,47z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class AccountIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path d=\"M59,63.236l5-10V2H54v4h-4v11h2V8h2v45.236L59,63.236z M56,4h6v48.764l-3,6l-3-6V4z\" />\n          <path\n            d=\"M46,7H32.531l-0.75-3H28V0H18v4h-3.781l-0.75,3H0v57h46V7z M15.781,6H20V2h6v4h4.219l1.5,6H14.281L15.781,6z M44,62H2V9\n                  h10.969l-1.25,5h22.562l-1.25-5H44V62z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class DashboardSettingsIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M53.144,20.271L59.414,14L50,4.586l-6.27,6.27L39,9.279V0H25v9.279l-4.73,1.576L14,4.586L4.586,14l6.27,6.271L9.279,25H0\n                  v14h9.279l1.577,4.729L4.586,50L14,59.414l6.27-6.27L25,54.721V64h14v-9.279l4.73-1.576l6.27,6.27L59.414,50l-6.27-6.271L54.721,39\n                  H64V25h-9.279L53.144,20.271z M62,37h-8.721l-2.423,7.271L56.586,50L50,56.586l-5.73-5.73L37,53.279V62H27v-8.721l-7.27-2.424\n                  L14,56.586L7.414,50l5.73-5.729L10.721,37H2V27h8.721l2.423-7.271L7.414,14L14,7.414l5.73,5.73L27,10.721V2h10v8.721l7.27,2.424\n                  L50,7.414L56.586,14l-5.73,5.729L53.279,27H62V37z\"\n          />\n          <path\n            d=\"M32,25c-3.86,0-7,3.141-7,7s3.14,7,7,7s7-3.141,7-7S35.86,25,32,25z M32,37c-2.757,0-5-2.243-5-5s2.243-5,5-5s5,2.243,5,5\n                  S34.757,37,32,37z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\ntype Weight = \"thin\" | \"normal\" | \"bold\";\n\nexport interface TextProps {\n  fontSize: string;\n  color?: string;\n  weight?: Weight;\n  width?: string;\n  skeletonColor?: string;\n  showSkeleton?: boolean;\n  children?: JSX.Element | string | number;\n  className?: string;\n}\n\nexport const Text: React.SFC<TextProps> = ({\n  fontSize,\n  color,\n  weight = \"normal\",\n  width = \"auto\",\n  skeletonColor = \"#ffffff\",\n  showSkeleton,\n  children,\n  className\n}) => {\n  const fontWeight = (weight: Weight) => {\n    switch (weight) {\n      case \"thin\":\n        return {\n          fontFamily: '\"Open Sans Light\", sans-serif',\n          weight\n        };\n      case \"normal\":\n        return {\n          fontFamily: '\"Open Sans Normal\", sans-serif',\n          weight\n        };\n      case \"bold\":\n        return {\n          fontFamily: '\"Open Sans Bold\", sans-serif',\n          weight\n        };\n    }\n  };\n\n  const commonStyle = {\n    fontSize,\n    color,\n\n    ...fontWeight(weight)\n  };\n\n  const styles = {};\n\n  const skeletonStyles = {\n    backgroundColor: skeletonColor,\n    content: \"\",\n    width\n  };\n\n  return (\n    <>\n      {showSkeleton ? (\n        <div style={{...commonStyle, ...skeletonStyles}} />\n      ) : (\n        <span className={className || \"\"} style={{...commonStyle, ...styles}}>\n          {children}\n        </span>\n      )}\n    </>\n  );\n};\n","export enum DashboardPages {\n  APPLICATION_PAGE = \"APPLICATION_PAGE\",\n  DASHBOARD_PAGE = \"DASHBOARD_PAGE\",\n  SETTINGS_PAGE = \"SETTINGS_PAGE\",\n  HELP_PAGE = \"HELP_PAGE\"\n}\n","import React from \"react\";\nimport css from \"./Header.module.scss\";\nimport {LogoutIcon} from \"../Icons\";\nimport {Text} from \"../Text\";\n\nexport const Header = () => (\n  <header className={css.contentHeader}>\n    <h1 className={css.sectionTitle}>__MAKESENSE</h1>\n    <div className={css.logoutWrapper}>\n      <LogoutIcon className={css.logoutIcon} />\n      <Text\n        className={css.userName}\n        weight=\"normal\"\n        fontSize=\"14px\"\n        width=\"100px\"\n      >\n        Logout\n      </Text>\n      <div className={css.headerTriangle}></div>\n    </div>\n  </header>\n);\n","import React, {createContext, useState, Dispatch, SetStateAction} from \"react\";\nimport {DashboardPages} from \"../constans/enums\";\n\nexport const DashboardPageNavigation = createContext({\n  currentDashboardPage: DashboardPages.SETTINGS_PAGE,\n  selectDashboardPage: (() => {}) as Dispatch<SetStateAction<DashboardPages>>\n});\n\nexport const DashboardPageNavigationProvider: React.FC = ({children}) => {\n  const [currentDashboardPage, selectDashboardPage] = useState(\n    DashboardPages.APPLICATION_PAGE\n  );\n\n  return (\n    <DashboardPageNavigation.Provider\n      value={{currentDashboardPage, selectDashboardPage}}\n    >\n      {children}\n    </DashboardPageNavigation.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {DashboardPageNavigation} from \"../Providers/DashboardPageNavigationProvider\";\n\nexport const useDashboardPageNavigation = () =>\n  useContext(DashboardPageNavigation);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport classNames from \"classnames\";\nimport {DashboardPages} from \"../../../constans/enums\";\nimport {useDashboardPageNavigation} from \"../../../hooks/useDashboardPageNavigation\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faGripHorizontal,\n  faLaptopCode,\n  faProjectDiagram,\n  faHeadset\n} from \"@fortawesome/free-solid-svg-icons\";\ninterface SideMenuItem {\n  pageName: DashboardPages;\n  children: React.ReactNode[];\n}\n\nexport const GeneralSection: React.FC = () => (\n  <section className={css.generalSectionWrapper}>\n    <div className={css.sideMenuTitle}>General</div>\n    <SideMenuItem pageName={DashboardPages.DASHBOARD_PAGE}>\n      <FontAwesomeIcon\n        icon={faLaptopCode}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Dashboard</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.APPLICATION_PAGE}>\n      <FontAwesomeIcon\n        icon={faGripHorizontal}\n        size=\"3x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Applications</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.SETTINGS_PAGE}>\n      <FontAwesomeIcon\n        icon={faProjectDiagram}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Devices</span>\n    </SideMenuItem>\n    <SideMenuItem pageName={DashboardPages.HELP_PAGE}>\n      <FontAwesomeIcon\n        icon={faHeadset}\n        size=\"2x\"\n        className={css.sideMenuItemIcon}\n      />\n      <span className={css.menuItemText}>Help</span>\n    </SideMenuItem>\n  </section>\n);\n\nconst SideMenuItem = ({children, pageName}: SideMenuItem) => {\n  const {\n    currentDashboardPage,\n    selectDashboardPage\n  } = useDashboardPageNavigation();\n  return (\n    <span\n      onClick={() => selectDashboardPage(pageName)}\n      className={classNames(css.sideMenuItem, {\n        [css.selected]: currentDashboardPage === pageName\n      })}\n    >\n      {<>{children}</>}\n    </span>\n  );\n};\n","import React, {useState, createContext} from \"react\";\nimport {AppDetails, UUID} from \"../types/internal-types\";\n\ntype TPinnedApp = Pick<AppDetails, \"uuid\" | \"name\">;\n\nexport interface PinnedAppsContextProps {\n  pinnedAppsList: TPinnedApp[];\n  pinnApp: (appDetails: TPinnedApp) => void;\n  getPinnedApp: (uuid: UUID) => TPinnedApp | undefined;\n  removeApp: (uuid: UUID) => void;\n}\n\nexport const PinnedAppsContext = createContext<PinnedAppsContextProps>({\n  pinnedAppsList: [],\n  pinnApp: () => {},\n  getPinnedApp: () => ({name: \"\", uuid: \"\"}),\n  removeApp: () => {}\n});\n\nexport const PinnedAppsContextProvider: React.FC = ({children}) => {\n  const [pinnedAppsList, setPinnedListApps] = useState<TPinnedApp[]>([]);\n\n  const pinnApp = (appDetails: TPinnedApp) =>\n    getPinnedApp(appDetails.uuid)\n      ? null\n      : setPinnedListApps([...pinnedAppsList, appDetails]);\n\n  const removeApp = (uuidToRemove: AppDetails[\"uuid\"]) =>\n    setPinnedListApps(pinnedAppsList.filter(({uuid}) => uuid !== uuidToRemove));\n\n  const getPinnedApp = (uuid: AppDetails[\"uuid\"]) =>\n    pinnedAppsList.find((pinnedApp) => pinnedApp.uuid === uuid);\n\n  return (\n    <PinnedAppsContext.Provider\n      value={{\n        pinnedAppsList,\n        pinnApp,\n        getPinnedApp,\n        removeApp\n      }}\n    >\n      {children}\n    </PinnedAppsContext.Provider>\n  );\n};\n","import {useContext} from \"react\";\nimport {PinnedAppsContext} from \"../Providers/PinnedAppsContext\";\n\nexport const usePinnedAppsContext = () => useContext(PinnedAppsContext);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {usePinnedAppsContext} from \"../../../hooks/usePinnedApps\";\nimport {UUID} from \"../../../types/internal-types\";\nimport classNames from \"classnames\";\n\nexport const PinnedSection = () => {\n  const {pinnedAppsList} = usePinnedAppsContext();\n\n  return (\n    <section className={css.pinnedSectionWrapper}>\n      <div className={css.sideMenuTitle}>Pinned</div>\n      {pinnedAppsList.length === 0 ? (\n        <div className={css.pinnedEmptyState}>\n          Pinned Applications\n          <div className={css.explanation}>\n            Here you can store the most commonly used Applications. Head to The\n            My Applications page and click on the thumbtack.\n          </div>\n        </div>\n      ) : (\n        pinnedAppsList.map(({name, uuid}) => (\n          <PinnedAppItem uuid={uuid} name={name} key={uuid} />\n        ))\n      )}\n    </section>\n  );\n};\n\nconst PinnedAppItem: React.FC<{uuid: UUID; name: string}> = ({uuid, name}) => {\n  const {removeApp} = usePinnedAppsContext();\n  const showInnitials = (name: string) => {\n    return `${name.charAt(0).toUpperCase()}${name.charAt(1).toUpperCase()}`;\n  };\n\n  return (\n    <div className={classNames(css.sideMenuItem, css.pinnedApp)}>\n      <span className={classNames(css.pinnedAppText)}>{name}</span>\n      <span className={classNames(css.pinnedAppTextSmallScreen)}>\n        {showInnitials(name)}\n      </span>\n      <FontAwesomeIcon\n        onClick={() => removeApp(uuid)}\n        className={css.removePinnedAppIcon}\n        icon={faTimesCircle}\n      />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.scss\";\nimport {Text} from \"../../Text\";\n\nexport const LoggedInUserSection = () => (\n  <section className={css.loggedInUserSectionWrapper}>\n    <div className={css.userThumbnail}></div>\n    <Text className={css.userName} weight=\"bold\" fontSize=\"14px\">\n      Cptn. Cat Sparrow\n    </Text>\n    <Text className={css.userNameCollapsed} weight=\"bold\" fontSize=\"12px\">\n      Account Settings\n    </Text>\n\n    <div className={css.userName}></div>\n    <div className={css.userActions}></div>\n  </section>\n);\n","import * as React from \"react\";\nimport css from \"./SideMenu.module.scss\";\nimport {GeneralSection} from \"./MenuSections/GeneralSection\";\nimport {PinnedSection} from \"./MenuSections/PinnedSection\";\nimport {LoggedInUserSection} from \"./MenuSections/LoggedInUserSection\";\n\nexport const SideMenu: React.FC = () => {\n  return (\n    <nav className={css.sideMenuWrapper}>\n      <LoggedInUserSection />\n      <GeneralSection />\n      <PinnedSection />\n    </nav>\n  );\n};\n","const thumb = require(\"./assets/img/react_logo.svg\");\nexport const mockAppList = [\n  {\n    name: \"Smart Home\",\n    id: \"2323-234234-1234\",\n    viewportSize: {\n      width: 800,\n      height: 800\n    }\n  }\n];\n\nexport const mockDeviceList = [\n  {\n    enabled: 1,\n    id: 6,\n    type: 999,\n    lastUpdateTs: 1532473013,\n    uuid: \"ac6de837-7863-72a9-c789-a0aae7e9d010\"\n  }\n];\nexport const thumbnail = thumb;\n","import {thumbnail} from \"../../serverApiMocks\";\n\nimport {\n  NodeList,\n  GetUserNodeListDTO,\n  UUID,\n  OnGetNodeInfoCallbackDTO,\n  NoteDetails,\n  NodeSettingsDTO,\n  NodeSettingsData\n} from \"../../types/internal-types\";\n\nexport class DashboardServerApi {\n  makeSenseApi = window.MkSAPIBuilder.GetInstance();\n\n  constructor() {\n    this.makeSenseApi.ConnectGateway(() =>\n      console.log(\"Dashboard connected to gateway\")\n    );\n    this.makeSenseApi.Gateway.OnGatewayDataArrivedCallback = (data: any) => {};\n    this.makeSenseApi.Gateway.OnGatewayAdminCallback = (data: any) => {\n      console.log(\"OnGatewayAdminCallbac-k\", data);\n    };\n  }\n\n  getApplicationThumbnail = () => {\n    console.log(\"/applications/:appId:/thumbnail\");\n    return Promise.resolve(thumbnail);\n  };\n\n  getNodeDetails = (uuid: UUID) => {\n    const nodeInfoPromise = new Promise<NoteDetails>((resolve) => {\n      this.makeSenseApi.GetNodeInfo(\n        uuid,\n        (response: OnGetNodeInfoCallbackDTO, _error: any) => {\n          const payload = response && response.data && response.data.payload;\n          resolve(payload);\n        }\n      );\n    });\n    return nodeInfoPromise;\n  };\n\n  getNodeSettings = (uuid: UUID): Promise<NodeSettingsData> => {\n    return Promise.all([\n      this.getNodeHtmlSettings(uuid),\n      this.getNodeScriptsSettings(uuid)\n    ]).then((nodeSettingsFiles) => {\n      const [html, scripts] = nodeSettingsFiles;\n      return {html: [html], scripts: [scripts], css: []} as any;\n    });\n  };\n\n  getAppData = (uuid: UUID): Promise<any> => {\n    return Promise.all([this.getAppHtml(uuid), this.getAppScripts(uuid)]).then(\n      (data) => {\n        const [html, scripts] = data;\n        return {html: [html], scripts: [scripts], css: []} as any;\n      }\n    );\n  };\n\n  private getNodeScriptsSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppHtml = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getAppScripts = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"app\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getNodeHtmlSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  getNodeList = () => {\n    const deviceListDataPromise = new Promise<NodeList[]>((resolve, reject) => {\n      this.makeSenseApi.Webface.GetUserNodeList(\n        (response: GetUserNodeListDTO) => {\n          resolve(response.nodes.data);\n          if (response && response.error) {\n            reject(\"OnGatewayDataArrivedCallback received an error\");\n          }\n        }\n      );\n    });\n    return deviceListDataPromise;\n  };\n}\n","import {createContext} from \"react\";\nimport {DashboardServerApi} from \"../services/DashboardServerApi\";\n\nexport interface ServerApiContext {\n  dashboardServerApi: DashboardServerApi;\n}\n\nexport const ServerApiContext = createContext<ServerApiContext>({\n  dashboardServerApi: new DashboardServerApi()\n});\n\nexport const DashboardContext = ServerApiContext;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\n\ninterface OwnProps {\n  html: string;\n  scripts: string;\n}\nconst ownState = {};\n\nexport class Portal extends React.Component<OwnProps, typeof ownState> {\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  readonly state = ownState;\n  private iframeRoot = React.createRef<HTMLIFrameElement>();\n\n  componentDidMount() {\n    this.createIframeContent();\n  }\n\n  decodeDomProperty(hexxStream: string) {\n    const hexString = hexxStream.toString(); //force conversion\n    let parstedString = \"\";\n    for (\n      let i = 0;\n      i < hexString.length && hexString.substr(i, 2) !== \"00\";\n      i += 2\n    )\n      parstedString += String.fromCharCode(\n        parseInt(hexString.substr(i, 2), 16)\n      );\n    return parstedString;\n  }\n\n  createIframeContent() {\n    if (this.iframeRoot.current) {\n      const htmlString = this.decodeDomProperty(this.props.html);\n      const script = this.decodeDomProperty(this.props.scripts);\n      const iframeWrapper: any = ReactDOM.findDOMNode(this.iframeRoot.current);\n\n      if (iframeWrapper && iframeWrapper.contentDocument) {\n        iframeWrapper.contentDocument.open();\n        iframeWrapper.contentDocument.write(htmlString);\n        iframeWrapper.contentDocument.write(`<script>${script}</script>`);\n        iframeWrapper.contentDocument.close();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <iframe\n          title=\"mk-portal\"\n          style={{display: \"block\", width: \"100%\", height: \"100%\"}}\n          frameBorder=\"0\"\n          ref={this.iframeRoot}\n        />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./DashboardTile.module.scss\";\nimport Modal from \"react-responsive-modal\";\nimport {DashboardContext} from \"../../../../Providers/ServerApiContext\";\nimport {Portal} from \"../../../Portal\";\nimport {UUID} from \"../../../../types/internal-types\";\n\nexport interface DashboardTileProps {\n  uuid: UUID;\n  name: string;\n  description: string;\n  appThumbnail: string;\n  viewportSize: {\n    width: number;\n    height: number;\n  };\n}\n\nconst initialDashboardTileState = {\n  isMkAppOpen: false,\n  html: \"\",\n  scripts: \"\"\n};\n\nexport class DashboardTile extends React.Component<\n  DashboardTileProps,\n  typeof initialDashboardTileState\n> {\n  readonly state = initialDashboardTileState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  renderThumbnail = () => {\n    const {description} = this.props;\n    return (\n      <div className={css.dashboardThumbnailWrapper}>\n        {description ? (\n          <div className={css.textThumbnailLarge}>\n            {description.charAt(0).toUpperCase()}\n          </div>\n        ) : (\n          <div className={css.textThumbnail}>MKapp</div>\n        )}\n      </div>\n    );\n  };\n\n  openMKAppMainView = async () => {\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await this.context.dashboardServerApi.getAppData(this.props.uuid);\n    this.setState({isMkAppOpen: true, html: htmlStream, scripts: scriptStream});\n  };\n\n  closeMKAppMainView = () => {\n    this.setState({isMkAppOpen: false});\n  };\n\n  render() {\n    const {isMkAppOpen} = this.state;\n    const {description} = this.props;\n    const last6chars = this.props.uuid.substring(\n      this.props.uuid.length - 6,\n      this.props.uuid.length\n    );\n    return (\n      <div\n        onDoubleClick={this.openMKAppMainView}\n        className={`\n          ${css.dashboardWrapper} \n          ${css.smartHome}`}\n      >\n        <div className={css.dashboardTitle}>\n          {this.renderThumbnail()}\n          {description ? description : `...${last6chars}`}\n        </div>\n        <div className={css.dashboardContent}>\n          {isMkAppOpen ? (\n            <Modal\n              closeOnEsc\n              classNames={{modal: css.mkAppModalWrapper}}\n              onClose={this.closeMKAppMainView}\n              open={this.state.isMkAppOpen}\n            >\n              <Portal html={this.state.html} scripts={this.state.scripts} />\n            </Modal>\n          ) : (\n            <div>put knobs here</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import {MkAppDescription} from \"../../types/internal-types\";\nimport * as React from \"react\";\nimport {DashboardTileProps} from \"../Pages/Dashboard/DashboardTile/DashboardTile\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\n\ninterface AppLoaderProps {\n  mkAppInitData: MkAppDescription;\n  render: (loadedMkAppProps: DashboardTileProps) => React.ReactNode;\n}\n\nconst innitialState = {\n  appThumbnail: null as any,\n  mkAppLoadedData: {} as any,\n  appProps: {} as any,\n  description: \"\"\n};\n\nexport class AppLoader extends React.Component<\n  AppLoaderProps,\n  typeof innitialState\n> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    //there shouls be cacsh managment here, so that Apploader wont fetch app list every time\n    try {\n      const appThumbnail = await this.context.dashboardServerApi.getApplicationThumbnail();\n      const nodeDetails = await this.context.dashboardServerApi.getNodeDetails(\n        this.props.mkAppInitData.uuid\n      );\n      this.setState({\n        appThumbnail,\n        description: nodeDetails && nodeDetails.description\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.render({\n          appThumbnail: this.state.appThumbnail,\n          description: this.state.description,\n          ...this.props.mkAppInitData\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport css from \"./PageTitle.module.scss\";\n\nexport interface OwnProps {\n  children: JSX.Element[] | JSX.Element | string;\n}\nexport const PageTitle = ({children}: OwnProps) => (\n  <header className={css.pageTitle}>{children}</header>\n);\n","import * as React from \"react\";\nexport const DashboardTileSkeleton = () => <div>SKELETON</div>;\n","import {DashboardTile} from \"./DashboardTile/DashboardTile\";\nimport {AppLoader} from \"../../AppLoader/AppLoader\";\nimport {MkAppDescription} from \"../../../types/internal-types\";\nimport {PageTitle} from \"../../PageTitle/PageTitle\";\nimport * as React from \"react\";\nimport css from \"./Dashboard.module.scss\";\nimport {DashboardTileSkeleton} from \"../../Skeleton/DashboardTile\";\nimport {DashboardContext} from \"../../../Providers/ServerApiContext\";\nimport {Text} from \"../../Text\";\n\nconst innitialDashboardsPageState = {appList: [] as any};\n\nexport class DashboardsPage extends React.Component<\n  {},\n  typeof innitialDashboardsPageState\n> {\n  readonly state = innitialDashboardsPageState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  public async componentDidMount() {\n    const appList = await this.context.dashboardServerApi.getNodeList();\n    this.setState({appList});\n  }\n\n  render() {\n    const {appList} = this.state;\n    return (\n      <>\n        <section className={css.pageWrapper}>\n          <div className={css.underConstruction}>\n            <PageTitle>DASHBOARD</PageTitle>\n            <div className={css.pageContentWrapper}>\n              {appList &&\n                appList.map((mkApp: MkAppDescription, index: any) => (\n                  <AppLoader\n                    key={index}\n                    mkAppInitData={mkApp}\n                    render={(loadedProps) => {\n                      return loadedProps ? (\n                        <DashboardTile {...loadedProps} />\n                      ) : (\n                        <DashboardTileSkeleton />\n                      );\n                    }}\n                  />\n                ))}\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"block\",\n              marginTop: \"20.7%\",\n              textAlign: \"center\",\n              zIndex: 10,\n              background: \"#d6eeff\",\n              position: \"relative\",\n              boxShadow: \"inset 20px 0 30px #fff\"\n            }}\n          >\n            <Text weight=\"bold\" fontSize=\"46px\" color=\"#2b3649\">\n              UNDER CONSTRUCTION\n            </Text>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n","import {useContext} from \"react\";\nimport {ServerApiContext} from \"../Providers/ServerApiContext\";\n\nexport const useServerApiContext = () => useContext(ServerApiContext);\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class CloseButton extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"28\"\n        height=\"28\"\n        viewBox=\"0 0 36 36\"\n        className={this.props.className}\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    );\n  }\n}\n","import {useEffect, useState} from \"react\";\n\nexport const useFetch = <DataType>(\n  fetcherFunction: Function\n): [boolean, DataType] => {\n  const [data, setData] = useState([] as unknown);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let data;\n      if (typeof fetcherFunction === \"function\") {\n        data = await fetcherFunction();\n      } else {\n        throw new Error(\"Please provide a fetcher fucntion\");\n      }\n      setData(data);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [fetcherFunction]);\n\n  return [isLoading, data as DataType];\n};\n","import * as React from \"react\";\nimport css from \"./Loader.module.scss\";\nimport {Text} from \"../Text\";\n\nexport const Loader: React.FC = () => (\n  <div className={css.loading}>\n    <div className={css.spinner} />{\" \"}\n    <div>\n      <Text fontSize=\"12px\" weight=\"bold\" color=\"#2b3649\">\n        LOADING...\n      </Text>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport {useServerApiContext} from \"../../../../hooks/useServerApiContext\";\nimport css from \"./NodeSettings.module.scss\";\nimport {UUID, NodeSettingsData} from \"../../../../types/internal-types\";\nimport {Portal} from \"../../../Portal\";\nimport {CloseButton as CloseButtonIcon} from \"../../../Icons/CloseButton\";\nimport {useFetch} from \"../../../../hooks/useFetch\";\nimport {Loader} from \"../../../Loader/Loader\";\n\ninterface NodeSettingsProps {\n  deviceUuid: UUID;\n  nodeName: string;\n  onClose: () => void;\n}\n\nexport const NodeSettings: React.FC<NodeSettingsProps> = ({\n  deviceUuid,\n  nodeName,\n  onClose\n}) => {\n  const {\n    dashboardServerApi: {getNodeSettings}\n  } = useServerApiContext();\n\n  const fetcherFucntion = React.useCallback(() => getNodeSettings(deviceUuid), [\n    deviceUuid,\n    getNodeSettings\n  ]);\n  const [isLoading, nodeSettingsData] = useFetch<NodeSettingsData>(\n    fetcherFucntion\n  );\n\n  return (\n    <div className={css.nodeSettingsWrapper}>\n      <div className={css.nodeSettingsHeader}>\n        <div>\n          NODE SETTINGS\n          <span className={css.nodeSettingsHeaderDetails}>{nodeName}</span>\n        </div>\n        <div onClick={onClose}>\n          <CloseButtonIcon className={css.closeButton} />\n        </div>\n      </div>\n      <div className={css.nodeSettingsContent}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Portal\n            scripts={nodeSettingsData.scripts[0]}\n            html={nodeSettingsData.html[0]}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import {createContext} from \"react\";\n\ninterface AnimationsContext {\n  nodePageRef: React.RefObject<HTMLDivElement>;\n}\n\nexport const AnimationsContext = createContext<AnimationsContext>({\n  nodePageRef: null as any\n});\n","import * as React from \"react\";\nimport css from \"./Animations.module.scss\";\nimport {useAnimationsUtils} from \"../../../../hooks/useAnimationsUtils\";\nimport {CSSTransition} from \"react-transition-group\";\ninterface OpenNodeSettingsAnimationProps {\n  isOpened: boolean;\n}\n\nexport const OpenNodeSettingsAnimation: React.FC<\n  OpenNodeSettingsAnimationProps\n> = ({children, isOpened}) => {\n  const nodeCardRef = React.useRef<HTMLDivElement>(null);\n  const {calcDistanceFromParentTop} = useAnimationsUtils();\n\n  // React.useEffect(() => {\n  //   nodePageRef.current!.appendChild(React.createElement(\"div\"));\n  // });\n  const translateY = {\n    transform: `translateY(-${calcDistanceFromParentTop(nodeCardRef)}px)`\n  };\n  const transitionClassNames = {\n    enter: css.enter,\n    enterDone: css.enterDone,\n    exit: css.exit,\n    exitActive: css.exitActive,\n    exitDone: css.exitDone\n  };\n\n  return (\n    <CSSTransition\n      timeout={250}\n      in={isOpened}\n      classNames={transitionClassNames}\n    >\n      <div\n        ref={nodeCardRef}\n        className={css.animationBaseState}\n        style={isOpened ? translateY : {}}\n      >\n        <div\n          className={\n            isOpened ? css.cardSettingsOpenned : css.cardSettingsClosed\n          }\n        >\n          {children}\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import {useContext} from \"react\";\nimport {AnimationsContext} from \"../Providers/AnimationsContextProvider\";\n\nexport const useAnimationsUtils = () => {\n  const {nodePageRef} = useContext(AnimationsContext);\n\n  const calcDistanceFromParentTop = (ref: React.RefObject<HTMLDivElement>) => {\n    const nodePageTop =\n      nodePageRef.current && nodePageRef.current.getClientRects()[0].top;\n    const refTop = ref.current && ref.current.getClientRects()[0].top;\n    return refTop && nodePageTop && refTop - nodePageTop;\n  };\n\n  return {nodePageRef, calcDistanceFromParentTop};\n};\n","import * as React from \"react\";\nimport styled, {keyframes} from \"styled-components\";\n\nexport const SkeletonShimmer: React.SFC<{width: string; color: string}> = ({\n  width,\n  color\n}) => {\n  const shimmerAnimations = keyframes`\n    0% {\n      background-position: 0 0;\n    }\n  \n    100% {\n      background-position: ${width} 0;\n    }\n  `;\n\n  const Shimmer = styled.div`\n    background-image: linear-gradient(\n      to right,\n      ${color} 0,\n      rgba(249, 250, 251, 0.8) 10%,\n      ${color} 20%\n    );\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: absolute;\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: ${shimmerAnimations};\n    animation-timing-function: linear;\n  `;\n\n  return <Shimmer />;\n};\n","import * as React from \"react\";\nimport {Text} from \"../../../Text\";\n\nexport interface OwnProps {\n  showSkeleton: boolean;\n  children?: string[] | string | number | JSX.Element;\n}\n\nexport const Subtitle: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    fontSize=\"10px\"\n    color=\"#768093\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"bold\"\n    width=\"70px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n\nexport const CardText: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    color=\"#2f3148\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"normal\"\n    fontSize=\"14px\"\n    width=\"100px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n","import React from \"react\";\nimport css from \"./NodeCard.module.scss\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faCodeBranch} from \"@fortawesome/free-solid-svg-icons\";\nimport {SkeletonShimmer} from \"../../../SkeletonShimmer\";\nimport {Subtitle, CardText} from \"./NodeCardTypography\";\n\nexport interface NodeCardSummaryProps {\n  isLoading?: boolean;\n  onNodeSettingsClick: Function;\n  nodeDetails: any;\n}\n\nexport const NodeCardSummary: React.FC<NodeCardSummaryProps> = ({\n  isLoading = false,\n  onNodeSettingsClick,\n  nodeDetails: {name, type, uuid, online: isOnline}\n}) => {\n  return (\n    <div className={css.nodeCardSummaryWrapper}>\n      <CardIconSection type={type} />\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceType}\n        description={type}\n      >\n        DEVICE TYPE\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceName}\n        description={name}\n      >\n        DEVICE NAME\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceName}\n        description={uuid}\n      >\n        DEVICE ID\n      </CardSection>\n      <CardSection\n        isLoading={isLoading}\n        customClassName={css.deviceStatus}\n        description={isOnline ? \"Connected\" : \"Disconnected\"}\n      >\n        STATUS\n      </CardSection>\n      <SummaryOptionsMenu onNodeSettingsClick={onNodeSettingsClick} />\n      {isLoading && (\n        <SkeletonShimmer width=\"1400px\" color=\"rgba(249, 250, 251, 0.001)\" />\n      )}\n    </div>\n  );\n};\n\nconst CardIconSection: React.FC<{type: string}> = ({type}) => (\n  <div className={`${css.section} ${css.IconSectionBackground}`}>\n    <FontAwesomeIcon icon={faCodeBranch} size=\"2x\" color=\"#768093\" />\n  </div>\n);\n\nconst SummaryOptionsMenu: React.FC<{onNodeSettingsClick: Function}> = ({\n  onNodeSettingsClick\n}) => (\n  <div className={`${css.deviceContentWrapper} ${css.deviceSettingsMenu}`}>\n    <span\n      className={css.deviceSettingsMenuIcon}\n      onClick={() => onNodeSettingsClick()}\n    >\n      <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#768093\" />\n    </span>\n  </div>\n);\n\ninterface CardSectionProps {\n  customClassName: string;\n  children: string;\n  isLoading: boolean;\n  description: string;\n}\n\nconst CardSection: React.FC<CardSectionProps> = ({\n  isLoading,\n  customClassName,\n  children,\n  description\n}) => (\n  <div\n    className={`${css.section} ${css.deviceContentWrapper} ${customClassName}`}\n  >\n    <Subtitle showSkeleton={isLoading}>{children}</Subtitle>\n    <CardText showSkeleton={isLoading}>\n      <span title={description}>{description}</span>\n    </CardText>\n  </div>\n);\n","import React from \"react\";\nimport css from \"./NodeCard.module.scss\";\nimport {NodeSettings} from \"../NodeSettings/NodeSettings\";\nimport {OpenNodeSettingsAnimation} from \"../NodeCardAnimations/OpenNodeSettingsAnimation\";\nimport {NodeCardSummary} from \"./NodeCardSummary\";\nimport classNames from \"classnames\";\n\nexport interface NodeCardProps {\n  isLoading: boolean;\n  selected?: boolean;\n  nodeDetails: any;\n}\n\nexport const NodeCard: React.FC<NodeCardProps> = ({\n  isLoading,\n  nodeDetails,\n  selected,\n  nodeDetails: {online: isOnline, name, uuid}\n}) => {\n  const [cardSettingOpenned, setCardSettingsOpenned] = React.useState(false);\n  const openCardSettings = () => setCardSettingsOpenned(true);\n  const closeCardSettings = () => setCardSettingsOpenned(false);\n\n  return (\n    <OpenNodeSettingsAnimation isOpened={cardSettingOpenned}>\n      <div\n        className={classNames(css.cardWrapper, {\n          [css.hovered]: cardSettingOpenned || selected,\n          [css.disabled]: !isOnline\n        })}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"100px\",\n            height: \"100px\"\n          }}\n        />\n        {!cardSettingOpenned ? (\n          <NodeCardSummary\n            nodeDetails={nodeDetails}\n            isLoading={isLoading}\n            onNodeSettingsClick={openCardSettings}\n          />\n        ) : (\n          <NodeSettings\n            nodeName={name}\n            onClose={closeCardSettings}\n            deviceUuid={uuid}\n          />\n        )}\n      </div>\n    </OpenNodeSettingsAnimation>\n  );\n};\n","import React from \"react\";\nimport css from \"./NodeMasterCard.module.scss\";\nimport {Text} from \"../../../Text\";\nimport {NodeCard} from \"../NodeCard/NodeCard\";\nimport {CSSTransition} from \"react-transition-group\";\nexport interface NodeCardProps {\n  isLoading: boolean;\n  nodeDetails: any;\n}\n\nexport const NodeMasterCard: React.FC<NodeCardProps> = ({nodeDetails}) => {\n  const [showSlavesList, setShowSlavesList] = React.useState(false);\n  const [expandTickerClicked, setExpandTickerClicked] = React.useState(false);\n  const transitionClassNames = {\n    enterActive: css.slavesListExpandEnterActive,\n    enterDone: css.slavesListExpandEnterDone,\n    exit: css.slaveListExpandExit,\n    exitDone: css.slaveListExpandExitDone\n  };\n\n  const clickOnExpandTicker = () => {\n    setExpandTickerClicked(!expandTickerClicked);\n    setShowSlavesList(true);\n  };\n  return (\n    <div className={css.nodeMasterCard}>\n      <div className={css.tickerPositionWrapper}>\n        <NodeCard\n          nodeDetails={nodeDetails}\n          isLoading={false}\n          selected={expandTickerClicked}\n        />\n        <div className={css.expandTicker} onClick={clickOnExpandTicker}>\n          <Text color=\"#768093\" weight=\"bold\" fontSize=\"10px\" width=\"100px\">\n            {expandTickerClicked ? \"COLLAPSE\" : \"EXPAND\"}\n          </Text>\n        </div>\n      </div>\n\n      <CSSTransition\n        timeout={350}\n        in={expandTickerClicked}\n        classNames={transitionClassNames}\n        onExited={() => setShowSlavesList(false)}\n      >\n        <div className={css.slavesWrapper}>\n          {showSlavesList &&\n            nodeDetails.slaves.map((slaveDetails: any, index: number) => (\n              <div className={css.slaveNodeCard} key={index}>\n                <NodeCard nodeDetails={slaveDetails} isLoading={false} />\n              </div>\n            ))}\n        </div>\n      </CSSTransition>\n    </div>\n  );\n};\n","import camelCase from \"lodash/camelCase\";\n\nexport const toCamelCase = (obj: any) => {\n  return Object.keys(obj).reduce(\n    (acc, currnet) => ({...acc, ...{[camelCase(currnet)]: obj[currnet]}}),\n    {}\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  //if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  // The URL constructor is available in all browsers that support SW.\n  const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n  if (publicUrl.origin !== window.location.origin) {\n    // Our service worker won't work if PUBLIC_URL is on a different origin\n    // from what our page is served on. This might happen if a CDN is used to\n    // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    return;\n  }\n\n  window.addEventListener(\"load\", () => {\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n    if (isLocalhost) {\n      // This is running on localhost. Let's check if a service worker still exists or not.\n      checkValidServiceWorker(swUrl, config);\n\n      // Add some additional logging to localhost, pointing developers to the\n      // service worker/PWA documentation.\n      navigator.serviceWorker.ready.then(() => {\n        console.log(\n          \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n        );\n      });\n    } else {\n      // Is not localhost. Just register service worker\n      registerValidSW(swUrl, config);\n    }\n  });\n  //}\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {PageTitle} from \"../../PageTitle/PageTitle\";\nimport React from \"react\";\nimport css from \"./NodePage.module.scss\";\nimport {NodeMasterCard} from \"./NodeMasterCard/NodeMasterCard\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport {AnimationsContext} from \"../../../Providers/AnimationsContextProvider\";\nimport {NodeList} from \"../../../types/internal-types\";\nimport {useFetch} from \"../../../hooks/useFetch\";\nimport {toCamelCase} from \"../../../utils/CamelCaseConverter\";\nexport interface OwnProps {}\n\nexport const NodesPage: React.FC = () => {\n  const pageRef = React.useRef<HTMLDivElement>(null);\n  const {dashboardServerApi} = useServerApiContext();\n  const [isLoading, nodeList] = useFetch<NodeList[]>(\n    dashboardServerApi.getNodeList\n  );\n\n  const masterNodesList = aggregateByMasterNodes(nodeList);\n  return (\n    <AnimationsContext.Provider value={{nodePageRef: pageRef}}>\n      <section className={css.pageWrapper}>\n        <PageTitle>\n          <div className={css.pageHeaderWrapper}>MY DEVICES</div>\n        </PageTitle>\n        <div ref={pageRef} className={css.pageContentWrapper}>\n          {masterNodesList.map((node, index) => (\n            <NodeMasterCard\n              key={index}\n              nodeDetails={toCamelCase(node)}\n              isLoading={isLoading}\n            />\n          ))}\n        </div>\n      </section>\n    </AnimationsContext.Provider>\n  );\n};\n\nconst aggregateByMasterNodes = (nodeList: NodeList[]) => {\n  let slaves = nodeList.filter(\n    (node) => node.uuid !== \"ac6de837-9863-72a9-c789-a0aae7e9d020\"\n  );\n  return nodeList.filter((node) => {\n    if (node.uuid === \"ac6de837-9863-72a9-c789-a0aae7e9d020\") {\n      (node as any).slaves = slaves;\n    }\n    return node.uuid === \"ac6de837-9863-72a9-c789-a0aae7e9d020\";\n  });\n};\n","import * as React from \"react\";\nimport css from \"./Applications.module.scss\";\nimport classNames from \"classnames\";\nimport {Text} from \"../../Text\";\nimport {Flipped} from \"react-flip-toolkit\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faThumbtack} from \"@fortawesome/free-solid-svg-icons\";\nimport {useApplicationDND} from \"../../../hooks/useApplicationDND\";\nimport Modal from \"react-responsive-modal\";\nimport {Portal} from \"../../Portal\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport {UUID, AppDetails} from \"../../../types/internal-types\";\nimport {Loader} from \"../../Loader/Loader\";\nimport {usePinnedAppsContext} from \"../../../hooks/usePinnedApps\";\n\ninterface ApplicationTileProps {\n  thumbnail?: string;\n  name: string;\n  description: string;\n  index: number;\n  id: number;\n  uuid: UUID;\n  inDNDState: boolean;\n  moveAppTile: (dragIndex: number, hoverIndex: number) => void;\n}\n\nexport const ApplicationTile: React.FC<ApplicationTileProps> = ({\n  name,\n  id,\n  uuid,\n  index,\n  moveAppTile,\n  inDNDState\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const inDndState = inDNDState;\n  const [isOpenAppClicked, setIsOpenAppClicked] = React.useState(false);\n  const [isAppLoaded, setIsAppLoaded] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [{htmlStream, scriptStream}, setAppData] = React.useState<{\n    htmlStream: string;\n    scriptStream: string;\n  }>({htmlStream: \"\", scriptStream: \"\"});\n  const {dashboardServerApi} = useServerApiContext();\n\n  const {\n    dragFunc,\n    dropFunc,\n    collectedProps: {isDragging}\n  } = useApplicationDND({\n    ref,\n    doDrag: moveAppTile,\n    dropIndex: index,\n    canDrag: inDndState,\n    id\n  });\n\n  const openApp = async () => {\n    setIsOpenAppClicked(true);\n    setIsLoading(true);\n    const {\n      html: [htmlStream],\n      scripts: [scriptStream]\n    } = await dashboardServerApi.getAppData(uuid);\n    setAppData({htmlStream, scriptStream});\n    setIsLoading(false);\n    setIsAppLoaded(true);\n  };\n\n  dragFunc(dropFunc(ref));\n\n  const applicationTileClasses = classNames(css.applicationTile, {\n    [css.withDndStyles]: inDndState,\n    [css.dragging]: isDragging,\n    [css.appIsLoading]: isLoading\n  });\n\n  return (\n    <div>\n      <div className={css.dndPlaceHolder} />\n      <Flipped flipId={id}>\n        <div className={css.applicationTileWrapper}>\n          <div\n            ref={ref}\n            className={applicationTileClasses}\n            style={{\n              opacity: isDragging ? 0 : 1\n            }}\n          >\n            <Thumbnail name={name} inDndState={inDndState} />\n            <OptionsMenu\n              inDndState={inDndState}\n              appDetails={{\n                name,\n                uuid\n              }}\n            />\n            <Text className={css.appName} weight=\"normal\" fontSize=\"12px\">\n              {name}\n            </Text>\n            <OpenApplication onOpenAppClick={openApp} />\n            <Modal\n              closeOnEsc\n              classNames={{modal: css.mkAppModalWrapper}}\n              onClose={() => setIsOpenAppClicked(false)}\n              open={isAppLoaded && isOpenAppClicked}\n            >\n              <Portal html={htmlStream} scripts={scriptStream} />\n            </Modal>\n            {isLoading && (\n              <div className={css.apploader}>\n                <Loader />\n              </div>\n            )}\n          </div>\n        </div>\n      </Flipped>\n    </div>\n  );\n};\n\nconst OpenApplication: React.FC<{onOpenAppClick: Function}> = ({\n  onOpenAppClick\n}) => {\n  return (\n    <div className={css.openApp} onClick={() => onOpenAppClick()}>\n      <div className={css.openAppInner}>\n        <Text className={css.openAppText} fontSize=\"10px\" weight=\"bold\">\n          Open\n        </Text>\n      </div>\n    </div>\n  );\n};\n\ninterface OptionsMenuProps {\n  inDndState: boolean;\n  appDetails: Pick<AppDetails, \"name\" | \"uuid\">;\n}\n\nconst OptionsMenu: React.FC<OptionsMenuProps> = ({inDndState, appDetails}) => {\n  const {pinnApp, getPinnedApp} = usePinnedAppsContext();\n  const isAppPinned = !!getPinnedApp(appDetails.uuid);\n  return (\n    <div\n      className={classNames(css.optionsMenu, {\n        [css.withDndStyles]: inDndState\n      })}\n    >\n      <span onClick={() => pinnApp(appDetails)}>\n        <FontAwesomeIcon\n          className={classNames(css.optionsItem, css.pinnedIcon, {\n            [css.pinned]: isAppPinned\n          })}\n          icon={faThumbtack}\n          size=\"1x\"\n        />\n      </span>\n      <span onClick={() => console.log(\"bang!\")}>\n        <FontAwesomeIcon className={css.optionsItem} icon={faBars} size=\"1x\" />\n      </span>\n    </div>\n  );\n};\n\nconst Thumbnail: React.FC<{name: string; inDndState: boolean}> = ({\n  name,\n  inDndState\n}) => (\n  <div\n    className={classNames(css.thumbnailWrapper, {\n      [css.withDndStyles]: inDndState\n    })}\n  >\n    {name ? (\n      <div className={css.textThumbnailLarge}>\n        <Text weight=\"bold\" fontSize=\"16px\" width=\"100px\">\n          {`${name.charAt(0).toUpperCase()}${name.charAt(1).toUpperCase()}`}\n        </Text>\n      </div>\n    ) : (\n      <div className={css.textThumbnail}>MKapp</div>\n    )}\n  </div>\n);\n","import {useDrop, DropTargetMonitor, useDrag} from \"react-dnd\";\nimport {DRAG_DROP_TYPE} from \"../components/Pages/Applications/Applications\";\n\ninterface DragItem {\n  dropIndex: number;\n  id: string;\n  type: string;\n}\n\ninterface UseApplicationDNDParams {\n  ref: React.RefObject<HTMLDivElement>;\n  doDrag: Function;\n  dropIndex: number;\n  canDrag: boolean;\n  id: number;\n}\n\ninterface CollectedProps {\n  isDragging: boolean;\n}\ntype UseApplicationDND = (\n  p: UseApplicationDNDParams\n) => {dragFunc: any; dropFunc: any; collectedProps: CollectedProps};\n\nexport const useApplicationDND: UseApplicationDND = ({\n  ref,\n  doDrag,\n  dropIndex,\n  canDrag,\n  id\n}) => {\n  const [, drop] = useDrop({\n    accept: DRAG_DROP_TYPE,\n    hover(item: DragItem, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.dropIndex;\n      const hoverIndex = dropIndex;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine Hovered on rectangle position on screen\n      const hoverBoundingRect = ref.current!.getBoundingClientRect();\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      const hoverMiddleX =\n        (hoverBoundingRect.left - hoverBoundingRect.right) / 2;\n      const hoverClientX = clientOffset!.x - hoverBoundingRect.right;\n      // Dragging rightwards\n      if (dragIndex < hoverIndex && hoverClientX < hoverMiddleX) {\n        return;\n      }\n\n      // Dragging leftwards\n      if (dragIndex > hoverIndex && hoverClientX > hoverMiddleX) {\n        return;\n      }\n\n      doDrag(dragIndex, hoverIndex);\n      item.dropIndex = hoverIndex;\n    }\n  });\n\n  const [collectedProps, drag] = useDrag({\n    item: {type: DRAG_DROP_TYPE, id, dropIndex},\n    canDrag,\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  return {dragFunc: drag, dropFunc: drop, collectedProps};\n};\n","import * as React from \"react\";\nimport css from \"./RearrangeButton.module.scss\";\nimport {Text} from \"../../../Text\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faTimes,\n  faArrowsAltV\n} from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\nimport {CSSTransition} from \"react-transition-group\";\n\ninterface RearrangeAppTilesProps {\n  inDNDState: boolean;\n  doRearrangeClick: () => void;\n  doSaveClick: () => void;\n  doCancelClick: () => void;\n}\n\nexport const RearrangeAppTiles: React.FC<RearrangeAppTilesProps> = ({\n  inDNDState,\n  doRearrangeClick,\n  doSaveClick,\n  doCancelClick\n}) => {\n  return (\n    <CSSTransition\n      in={inDNDState}\n      timeout={200}\n      classNames={{\n        enterDone: css.enterDone,\n        exitDone: css.inDndStateTransitionExitDone\n      }}\n    >\n      <div className={css.rearrangeButtonWrapper}>\n        <div className={css.rearrangeButtonWrapperInnter}>\n          <Text\n            fontSize=\"18px\"\n            weight=\"bold\"\n            className={classNames(css.rearrangeButton, {\n              [css.active]: inDNDState\n            })}\n          >\n            <span onClick={doRearrangeClick}>\n              <FontAwesomeIcon\n                icon={faArrowsAltV}\n                className={css.faArrowsAltV}\n              />\n              REARRANGE\n            </span>\n          </Text>\n          <CSSTransition\n            in={inDNDState}\n            timeout={300}\n            mountOnEnter\n            unmountOnExit\n            classNames={{\n              appear: css.appear,\n              enterDone: css.saveCancelAppsOrderEnterDone\n            }}\n          >\n            <span className={css.saveCancelAppsOrder}>\n              <span className={css.saveDNDState} onClick={doSaveClick}>\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  className={classNames(css.saveIcon)}\n                />\n                <Text fontSize=\"12px\" weight=\"bold\">\n                  save\n                </Text>\n              </span>\n              <span className={css.cancelDNDState} onClick={doCancelClick}>\n                <FontAwesomeIcon icon={faTimes} className={css.cancelIcon} />\n                <Text fontSize=\"12px\" weight=\"bold\">\n                  cancel\n                </Text>\n              </span>\n            </span>\n          </CSSTransition>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n","import * as React from \"react\";\nimport css from \"./Applications.module.scss\";\nimport update from \"immutability-helper\";\nimport {useFetch} from \"../../../hooks/useFetch\";\nimport {useServerApiContext} from \"../../../hooks/useServerApiContext\";\nimport {PageTitle} from \"../../PageTitle/PageTitle\";\nimport {ApplicationTile} from \"./ApplicationTile\";\nimport {Flipper} from \"react-flip-toolkit\";\nimport {RearrangeAppTiles} from \"./RearrangeButton/RearrangeButton\";\nexport const DRAG_DROP_TYPE = \"applicationTile\";\n\nexport const ApplicationsPage: React.FC = () => {\n  const {dashboardServerApi} = useServerApiContext();\n  const [isLoading, nodeList] = useFetch(dashboardServerApi.getNodeList);\n  const [orderedNodeList, setOrderedNodeList] = React.useState<any>([]);\n  const [previousOrderedNodeList, setPreviousOrderedNodeList] = React.useState(\n    orderedNodeList\n  );\n  const [inDNDState, setDNDState] = React.useState(false);\n\n  React.useEffect(() => {\n    setOrderedNodeList(nodeList);\n  }, [isLoading, nodeList]);\n\n  const moveAppTile = React.useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const dragAppTile = orderedNodeList[dragIndex];\n      setOrderedNodeList(\n        update(orderedNodeList, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragAppTile]\n          ]\n        })\n      );\n    },\n    [orderedNodeList]\n  );\n\n  const doRearrangeClick = () => {\n    setDNDState(true);\n    setPreviousOrderedNodeList(orderedNodeList);\n  };\n\n  const doSaveClick = () => {\n    setDNDState(false);\n  };\n\n  const doCancelClick = () => {\n    setOrderedNodeList(previousOrderedNodeList);\n    setDNDState(false);\n  };\n\n  return (\n    <section className={css.pageWrapper}>\n      <PageTitle>\n        <div className={css.pageTitleWrapper}>\n          <div className={css.pageTitle}>MY APPLICATIONS</div>\n          <RearrangeAppTiles\n            inDNDState={inDNDState}\n            doRearrangeClick={doRearrangeClick}\n            doSaveClick={doSaveClick}\n            doCancelClick={doCancelClick}\n          />\n        </div>\n      </PageTitle>\n      <Flipper flipKey={JSON.stringify(orderedNodeList.map((s: any) => s.id))}>\n        <div className={css.pageContentWrapper}>\n          {isLoading ? (\n            <span>loading</span>\n          ) : (\n            orderedNodeList.map((nodeProps: any, index: number) => (\n              <ApplicationTile\n                moveAppTile={moveAppTile}\n                key={nodeProps.id}\n                index={index}\n                inDNDState={inDNDState}\n                {...nodeProps}\n              />\n            ))\n          )}\n        </div>\n      </Flipper>\n    </section>\n  );\n};\n","import React from \"react\";\nimport css from \"./App.module.scss\";\nimport {Header} from \"../Header/Header\";\nimport {SideMenu} from \"../SideMenu/SideMenu\";\nimport {DashboardsPage} from \"../Pages/Dashboard/Dashboard\";\nimport {NodesPage} from \"../Pages/Nodes/NodesPage\";\nimport {ApplicationsPage} from \"../Pages/Applications/Applications\";\n\nimport {DashboardPages} from \"../../constans/enums\";\nimport {useDashboardPageNavigation} from \"../../hooks/useDashboardPageNavigation\";\n\nexport const App = () => {\n  const {currentDashboardPage} = useDashboardPageNavigation();\n\n  const renderCurrentPage = () => {\n    switch (currentDashboardPage) {\n      case DashboardPages.DASHBOARD_PAGE:\n        return <DashboardsPage />;\n      case DashboardPages.SETTINGS_PAGE:\n        return <NodesPage />;\n      case DashboardPages.APPLICATION_PAGE:\n        return <ApplicationsPage />;\n      default:\n        return <DashboardsPage />;\n    }\n  };\n\n  return (\n    <div className={css.root}>\n      <main className={css.siteContent}>\n        <SideMenu />\n        {renderCurrentPage()}\n      </main>\n      <Header />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {AppWithProviders as App} from \"./components/AppWithProviders/AppWithProviders\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import * as React from \"react\";\nimport {App} from \"../App/App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {DashboardContext} from \"../../Providers/ServerApiContext\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\nimport \"./fonts.module.scss\";\nimport \"./global.module.scss\";\nimport {DashboardPageNavigationProvider} from \"../../Providers/DashboardPageNavigationProvider\";\nimport {DndProvider} from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport {PinnedAppsContextProvider} from \"../../Providers/PinnedAppsContext\";\n\nexport const AppWithProviders = () => (\n  <BrowserRouter>\n    <DndProvider backend={HTML5Backend}>\n      <DashboardContext.Provider\n        value={{dashboardServerApi: new DashboardServerApi()}}\n      >\n        <DashboardPageNavigationProvider>\n          <PinnedAppsContextProvider>\n            <App />\n          </PinnedAppsContextProvider>\n        </DashboardPageNavigationProvider>\n      </DashboardContext.Provider>\n    </DndProvider>\n  </BrowserRouter>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"NodeCard_cardWrapper__ZyuL6\",\"hovered\":\"NodeCard_hovered__ufIYX\",\"disabled\":\"NodeCard_disabled__2tJYG\",\"expandTicker\":\"NodeCard_expandTicker___iYEb\",\"nodeCardSummaryWrapper\":\"NodeCard_nodeCardSummaryWrapper__-f5hX\",\"section\":\"NodeCard_section__31whZ\",\"IconSectionBackground\":\"NodeCard_IconSectionBackground__1zdEJ\",\"deviceContentWrapper\":\"NodeCard_deviceContentWrapper__17QCU\",\"deviceType\":\"NodeCard_deviceType__3Sjgj\",\"deviceName\":\"NodeCard_deviceName__3hgES\",\"deviceSettingsMenu\":\"NodeCard_deviceSettingsMenu__3v5KO\",\"deviceSettingsMenuIcon\":\"NodeCard_deviceSettingsMenuIcon__18ymw\",\"deviceStatus\":\"NodeCard_deviceStatus__3kJys\",\"nodeSettingPageWrapper\":\"NodeCard_nodeSettingPageWrapper__3cmPj\",\"placeHolderWidth\":\"NodeCard_placeHolderWidth__2syGV\",\"nodeSettingPage\":\"NodeCard_nodeSettingPage__3SH-s\",\"modalWrapper\":\"NodeCard_modalWrapper__1lDGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rearrangeButtonWrapper\":\"RearrangeButton_rearrangeButtonWrapper__2iZTk\",\"rearrangeButtonWrapperInnter\":\"RearrangeButton_rearrangeButtonWrapperInnter__3zHEg\",\"cancelIcon\":\"RearrangeButton_cancelIcon__24D7a\",\"saveIcon\":\"RearrangeButton_saveIcon__3CGdg\",\"cancelDNDState\":\"RearrangeButton_cancelDNDState__1y1ue\",\"saveDNDState\":\"RearrangeButton_saveDNDState__3x4E-\",\"rearrangeButton\":\"RearrangeButton_rearrangeButton__1YM7A\",\"active\":\"RearrangeButton_active__2ZLQA\",\"faArrowsAltV\":\"RearrangeButton_faArrowsAltV__2bU50\",\"saveCancelAppsOrder\":\"RearrangeButton_saveCancelAppsOrder__1Q7kP\",\"enterDone\":\"RearrangeButton_enterDone__GhGxm\",\"appear\":\"RearrangeButton_appear__4Oot9\",\"saveCancelAppsOrderEnterDone\":\"RearrangeButton_saveCancelAppsOrderEnterDone__h3zcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeMasterCard\":\"NodeMasterCard_nodeMasterCard__j6oEK\",\"expandTicker\":\"NodeMasterCard_expandTicker__ERi-T\",\"masterCardDetails\":\"NodeMasterCard_masterCardDetails__2r_39\",\"nodeCardSummaryWrapper\":\"NodeMasterCard_nodeCardSummaryWrapper__gYigK\",\"slavesWrapper\":\"NodeMasterCard_slavesWrapper__1wk6K\",\"slaveNodeCard\":\"NodeMasterCard_slaveNodeCard__3Ogn1\",\"nodeCardMargin\":\"NodeMasterCard_nodeCardMargin__3A92b\",\"slavesListExpandEnterDone\":\"NodeMasterCard_slavesListExpandEnterDone__3d_uu\",\"slavesListExpandEnterActive\":\"NodeMasterCard_slavesListExpandEnterActive__2hhkK\",\"slaveListExpandExit\":\"NodeMasterCard_slaveListExpandExit__1q2o6\",\"slaveListExpandExitDone\":\"NodeMasterCard_slaveListExpandExitDone__3uJeS\",\"tickerPositionWrapper\":\"NodeMasterCard_tickerPositionWrapper__3BgwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"DashboardTile_dashboardWrapper__2Xc8w\",\"smartHome\":\"DashboardTile_smartHome__1Ac-2\",\"dashboardTitle\":\"DashboardTile_dashboardTitle__1jfwM\",\"dashboardThumbnailWrapper\":\"DashboardTile_dashboardThumbnailWrapper__339_T\",\"imageThumbnail\":\"DashboardTile_imageThumbnail__3mcBc\",\"imageSize\":\"DashboardTile_imageSize__1sssK\",\"textThumbnail\":\"DashboardTile_textThumbnail__3i-Jh\",\"textThumbnailLarge\":\"DashboardTile_textThumbnailLarge__sXqVl\",\"dashboardContent\":\"DashboardTile_dashboardContent__Yc-0A\",\"mkAppModalWrapper\":\"DashboardTile_mkAppModalWrapper__3siQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transition\":\"Animations_transition__26YxU\",\"animationBaseState\":\"Animations_animationBaseState__3UK8U\",\"cardSettingsOpenned\":\"Animations_cardSettingsOpenned__z1jAE\",\"cardSettingsClosed\":\"Animations_cardSettingsClosed__2Xr3f\",\"masterNodeExpandedEnter\":\"Animations_masterNodeExpandedEnter__1Wsww\",\"masterNodeExpandedDone\":\"Animations_masterNodeExpandedDone__3cFsh\",\"overlay\":\"Animations_overlay__1Q0lP\",\"enter\":\"Animations_enter__1wQ7H\",\"enterDone\":\"Animations_enterDone__2XaXO\",\"exit\":\"Animations_exit__1Q19I\",\"exitActive\":\"Animations_exitActive__3-LGU\",\"exitDone\":\"Animations_exitDone__1-15q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"Header_contentHeader__3VQUP\",\"sectionTitle\":\"Header_sectionTitle__-ov6M\",\"headerUserThumbnail\":\"Header_headerUserThumbnail__2rbDm\",\"headerUserName\":\"Header_headerUserName__3G5We\",\"headerOptions\":\"Header_headerOptions__3yds2\",\"headerTriangle\":\"Header_headerTriangle__Ww1fI\",\"logoutWrapper\":\"Header_logoutWrapper__2PgTo\",\"logoutIcon\":\"Header_logoutIcon__3byEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeSettingsWrapper\":\"NodeSettings_nodeSettingsWrapper__b40tX\",\"nodeSettingsHeader\":\"NodeSettings_nodeSettingsHeader__2zPA6\",\"nodeSettingsHeaderDetails\":\"NodeSettings_nodeSettingsHeaderDetails__2qBCs\",\"nodeSettingsContent\":\"NodeSettings_nodeSettingsContent__cxLQj\",\"loaderWrapper\":\"NodeSettings_loaderWrapper__2YVA_\",\"closeButton\":\"NodeSettings_closeButton__2Wu_N\",\"cardSettings\":\"NodeSettings_cardSettings__1VOs6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"Dashboard_pageWrapper__24Qo8\",\"pageContentWrapper\":\"Dashboard_pageContentWrapper__3ZZ_Y\",\"underConstruction\":\"Dashboard_underConstruction__2lP1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"NodePage_pageWrapper__1HTP8\",\"pageContentWrapper\":\"NodePage_pageContentWrapper__ehQl6\",\"cardWrapperSettingsLoaded\":\"NodePage_cardWrapperSettingsLoaded__Q08Ck\",\"pageHeaderWrapper\":\"NodePage_pageHeaderWrapper__3mxV9\",\"displayMasterNode\":\"NodePage_displayMasterNode__1HWWu\",\"nodeSettingsSpinner\":\"NodePage_nodeSettingsSpinner__3bmTc\",\"loading\":\"NodePage_loading__RzGt8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenuWrapper\":\"SideMenu_sideMenuWrapper__2Sypt\",\"sideMenuTitle\":\"SideMenu_sideMenuTitle__3gLou\",\"sideMenuItem\":\"SideMenu_sideMenuItem__1uYWu\",\"sideMenuItemIcon\":\"SideMenu_sideMenuItemIcon__ZZbgL\",\"customHight\":\"SideMenu_customHight__3eyfk\",\"sideMenuIPinnedApps\":\"SideMenu_sideMenuIPinnedApps__WJHd2\",\"selected\":\"SideMenu_selected__3ix6Q\",\"generalSectionWrapper\":\"SideMenu_generalSectionWrapper__ceS9A\",\"pinnedSectionWrapper\":\"SideMenu_pinnedSectionWrapper__1uBva\",\"pinnedApp\":\"SideMenu_pinnedApp__3ZjOo\",\"removePinnedAppIcon\":\"SideMenu_removePinnedAppIcon__3W9fA\",\"pinnedAppText\":\"SideMenu_pinnedAppText__cBiy_\",\"pinnedAppTextSmallScreen\":\"SideMenu_pinnedAppTextSmallScreen__2ZTMu\",\"pinnedEmptyState\":\"SideMenu_pinnedEmptyState__36Zrx\",\"explanation\":\"SideMenu_explanation__1sW3x\",\"loggedInUserSectionWrapper\":\"SideMenu_loggedInUserSectionWrapper__1hOwM\",\"userName\":\"SideMenu_userName__3iQnu\",\"userNameCollapsed\":\"SideMenu_userNameCollapsed__1C5NW\",\"userThumbnail\":\"SideMenu_userThumbnail__1COiW\",\"menuItemText\":\"SideMenu_menuItemText__11Z0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__3cIUf\",\"siteContent\":\"App_siteContent__1O-1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1BGHY\",\"loading\":\"Loader_loading__21jB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitleWrapper\":\"Applications_pageTitleWrapper__3m9ZT\",\"mkAppModalWrapper\":\"Applications_mkAppModalWrapper__ofQkd\",\"appName\":\"Applications_appName__32vYc\",\"pageWrapper\":\"Applications_pageWrapper__1TVPC\",\"applicationTile\":\"Applications_applicationTile__2HNat\",\"withDndStyles\":\"Applications_withDndStyles__j1g2X\",\"openAppInner\":\"Applications_openAppInner__3UKfM\",\"openApp\":\"Applications_openApp__3xajK\",\"openAppText\":\"Applications_openAppText__3Ueow\",\"dndPlaceHolder\":\"Applications_dndPlaceHolder__2E147\",\"optionsMenu\":\"Applications_optionsMenu__3DDpM\",\"appIsLoading\":\"Applications_appIsLoading__Gue1q\",\"optionsItem\":\"Applications_optionsItem__2SfJi\",\"pinnedIcon\":\"Applications_pinnedIcon__jpbDE\",\"pinned\":\"Applications_pinned__cLMx2\",\"pageContentWrapper\":\"Applications_pageContentWrapper__1KUac\",\"apploader\":\"Applications_apploader__1yN1f\",\"thumbnailWrapper\":\"Applications_thumbnailWrapper__3vTyM\",\"textThumbnail\":\"Applications_textThumbnail__3LB_7\",\"textThumbnailLarge\":\"Applications_textThumbnailLarge__3uSZJ\",\"applicationTileWrapper\":\"Applications_applicationTileWrapper__1CY8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitle\":\"PageTitle_pageTitle__ZJk1F\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";"],"sourceRoot":""}