{"version":3,"sources":["components/DashboardPages/ApplicationsPage/ApplicationTile/ApplicationTile.module.css","components/Header/Header.module.css","components/DashboardPages/NodesPage/NodePage.module.css","components/DashboardPages/NodesPage/DisplayFiltesGroup/DisplayFiltersGroup.module.css","components/DashboardPages/NodesPage/NodeSettings/NodeSettings.module.css","components/Dashboard/Dashboard.module.css","components/DashboardPages/PageHeader/PageHeader.module.css","components/DashboardPages/ApplicationsPage/ApplicationsPage.module.css","components/DashboardPages/FavoritesPage/FavoritesPage.module.css","components/DashboardPages/NodesPage/NodeCardTransition/NodeCardTransition.module.css","components/DashboardPages/NodesPage/NodeCardSummary/NodeCardSummary.module.css","assets/img/react_logo.svg","components/SideMenu/SideMenu.module.css","components/Header/Header.tsx","components/IconWrappers/LogoutIcon.tsx","components/IconWrappers/FavoritesIcon.tsx","components/IconWrappers/ApplicationIcon.tsx","components/IconWrappers/SensorsIcon.tsx","components/IconWrappers/HelpIcon.tsx","components/IconWrappers/AccountIcon.tsx","components/IconWrappers/DashboardSettingsIcon.tsx","components/SideMenu/MenuSections/GeneralSection.tsx","components/SideMenu/MenuSections/SettingsSection.tsx","components/SideMenu/MenuSections/PinnedAppsSection.tsx","components/SideMenu/SideMenu.tsx","components/DashboardPages/ApplicationsPage/ApplicationTile/ApplicationTile.tsx","serverApiMocks.ts","services/DashboardServerApi/DashboardServerApi.ts","components/Providers/DashboardContext.tsx","components/AppLoader/AppLoader.tsx","components/DashboardPages/PageHeader/PageHeader.tsx","components/Skeleton/ApplicationTile.tsx","components/DashboardPages/ApplicationsPage/ApplicationsPage.tsx","components/DashboardPages/FavoritesPage/FavoritesPage.tsx","components/SkeletonShimmer/SkeletonShimmer.tsx","components/Text/Text.tsx","components/DashboardPages/NodesPage/NodeCardSummary/NodeCardTypography.tsx","components/DashboardPages/NodesPage/NodeCardSummary/NodeCardSummary.tsx","components/DashboardPages/NodesPage/NodeCardTransition/NodeCardTransition.tsx","components/DashboardPages/NodesPage/NodeCardWrapper/NodeCardWrapper.tsx","components/Portal/Portal.tsx","components/IconWrappers/CloseButton.tsx","components/DashboardPages/NodesPage/NodeSettings/NodeSettings.tsx","components/DashboardPages/NodesPage/DisplayFiltesGroup/DisplayFiltersGroup.tsx","components/DashboardPages/NodesPage/DisplayFiltesGroup/index.ts","components/DashboardPages/NodesPage/DisplayFiltesGroup/NoMaster.tsx","components/DashboardPages/NodesPage/DisplayFiltesGroup/Advanced.tsx","components/DashboardPages/NodesPage/NodePage.tsx","components/Dashboard/Dashboard.tsx","serviceWorker.js","index.tsx","components/App/App.tsx"],"names":["module","exports","applicationWrapper","smartHome","applicationTitle","applicationThumbnailWrapper","imageThumbnail","imageSize","textThumbnail","applicationContent","mkAppModalWrapper","contentHeader","sectionTitle","headerUserWrapper","headerUserThumbnail","headerUserName","headerOptions","headerTriangle","pageWrapper","pageContentWrapper","outerCardWrapper","cardWrapper","cardWrapperSelected","cardWrapperSettingsLoaded","pageHeaderWrapper","displayMasterNode","filtersGroupWrapper","filterWrapper","nodeSettingsHeader","nodeSettingsHeaderDetails","nodeSettingsContent","loaderWrapper","loading","closeButton","nodeSettingsSpinner","root","siteContent","myApplicationsHeader","searchButton","mainWrapper","overlay","deviceTypeIcon","Section","IconSectionBackground","deviceContentWrapper","subTitle","text","deviceType","deviceName","deviceSettingsMenu","deviceSettingsMenuIcon","deviceStatus","cardSummary","nodeSettingPageWrapper","placeHolderWidth","nodeSettingPage","modalWrapper","__webpack_require__","p","sideMenuWrapper","sideMenuTitle","sideMenuItem","sideMenuItemIcon","sideMenuIPinnedApps","selected","Header","react_default","a","createElement","className","css","LogoutIcon","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","props","version","id","x","y","width","height","viewBox","enableBackground","d","React","FavoritesIcon","ApplicationIcon","color","SensorsIcon","HelpIcon","AccountIcon","DashboardSettingsIcon","GeneralSection","GeneralSection_SideMenuLink","assign","pageName","FavoritesIcon_FavoritesIcon","ApplicationIcon_ApplicationIcon","SensorsIcon_SensorsIcon","HelpIcon_HelpIcon","SideMenuLink","_ref","_classNames","pageSelector","selectedPage","children","onClick","classNames","defineProperty","SettingsSection","AccountIcon_AccountIcon","DashboardSettingsIcon_DashboardSettingsIcon","PinnedAppsSection","SideMenu","GeneralSection_GeneralSection","SettingsSection_SettingsSection","PinnedAppsSection_PinnedAppsSection","LogoutIcon_LogoutIcon","initialApplicationTileState","isMkAppOpen","ApplicationTile","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","renderThumbnail","_this$props","appThumbnail","name","src","charAt","toUpperCase","openMKAppMainView","setState","closeMKAppMainView","viewportSize","onDoubleClick","index_es","closeOnEsc","modal","onClose","open","frameBorder","thumb","require","mockAppList","thumbnail","DashboardServerApi","makeSenseApi","window","MkSAPIBuilder","GetInstance","getApplicationsList","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","console","log","abrupt","Promise","resolve","stop","getApplicationThumbnail","getNodeDetails","uuid","GetNodeInfo","response","error","payload","data","getNodeSettings","all","getNodeHtmlSettings","getNodeScriptsSettings","then","nodeSettingsFiles","_nodeSettingsFiles","slicedToArray","html","scripts","GetFileContent","ui_type","file_name","file_type","content","getNodeList","reject","Webface","GetUserNodeList","devices","nodes","map","device","ConnectGateway","Gateway","OnGatewayDataArrivedCallback","DashboardContext","dashboardServerApi","innitialState","AppLoader","context","_componentDidMount","sent","t0","render","objectSpread","mkAppInitData","contextType","PageHeader","ApplicationTileSkeleton","innitialApplicationsPageState","appList","ApplicationsPage","PageHeader_PageHeader","mkApp","index","AppLoader_AppLoader","loadedProps","ApplicationTile_ApplicationTile","ApplicationTile_ApplicationTileSkeleton","SkeletonShimmer","shimmerAnimations","keyframes","_templateObject","Shimmer","styled","div","_templateObject2","Text","fontSize","weight","skeletonColor","showSkeleton","commonStyle","display","lineHeight","fontFamily","fontWeight","skeletonStyles","backgroundColor","style","Subtitle","Text_Text","CardText","_ref2","NodeCardSummary","isNodeSettingsLoaded","isNodeSettingsOpenned","handleNodeSettingsClick","onCardSettingsClickCallback","deviceTypeSection","NodeCardTypography_Subtitle","isLoading","NodeCardTypography_CardText","deviceSummaryData","type","deviceNameSection","_this$props$deviceSum","description","deviceIdSection","deviceConnectionSection","react_fontawesome_index_es","icon","faCodeBranch","size","faBars","SkeletonShimmer_SkeletonShimmer","ownState","isNodeSummaryOpen","isNodeSettingsloaded","NodeCardTransition","componentDomRef","onCardSettingsOpenCloseAnimation","prevStateNodeSummaryOpen","prevStateNodeSettingsloaded","onNodeSettingsloaded","getTranslationDistance","getBoundingClientRect","top","closeOnOverlayClick","ReactDOM","findDOMNode","_this$state","react_addons_css_transition_group_default","transitionEnterTimeout","transitionLeaveTimeout","transitionName","NodeCardWrapper","Portal","iframeRoot","createIframeContent","hexxStream","hexString","toString","parstedString","i","substr","String","fromCharCode","parseInt","current","htmlString","decodeDomProperty","script","iframeWrapper","contentDocument","write","close","ref","CloseButton","xmlns","isLoadingFiles","NodeSettings","nodeSettings","_this2","deviceUuid","onCardSettingsLoaded","nodeName","closeModal","CloseButton_CloseButton","Portal_Portal","DisplayFiltersGroup","DisplayFilters","NoMaster","onFilterClick","Advanced","isActive","active","nodeList","filteredMaster","isDisplayWithMasterNodes","NodesPage","onDisplayMasterNodeChecked","filter","node","list","DisplayFiltersGroup_DisplayFiltersGroup","nodeData","NodeCardTransition_NodeCardTransition","NodeCardWrapper_NodeCardWrapper","transform","NodeSettings_NodeSettings","NodeCardSummary_NodeCardSummary","innitialDashboardState","selectedDashboardPage","Dashboard","selectDashboardPage","Header_Header","SideMenu_SideMenu","ApplicationsPage_ApplicationsPage","NodePage_NodesPage","Boolean","location","hostname","match","BrowserRouter","Provider","Dashboard_Dashboard","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cff3b8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"applicationWrapper\":\"ApplicationTile_applicationWrapper__3mpah\",\"smartHome\":\"ApplicationTile_smartHome__1pjCt\",\"applicationTitle\":\"ApplicationTile_applicationTitle__15K0O\",\"applicationThumbnailWrapper\":\"ApplicationTile_applicationThumbnailWrapper__306lE\",\"imageThumbnail\":\"ApplicationTile_imageThumbnail__9GLke\",\"imageSize\":\"ApplicationTile_imageSize__1BSQi\",\"textThumbnail\":\"ApplicationTile_textThumbnail__1A_9K\",\"applicationContent\":\"ApplicationTile_applicationContent__ky93E\",\"mkAppModalWrapper\":\"ApplicationTile_mkAppModalWrapper__eMAJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"Header_contentHeader__3aK_q\",\"sectionTitle\":\"Header_sectionTitle__z3AZM\",\"headerUserWrapper\":\"Header_headerUserWrapper__1_ouL\",\"headerUserThumbnail\":\"Header_headerUserThumbnail__3gkWz\",\"headerUserName\":\"Header_headerUserName__2RS0U\",\"headerOptions\":\"Header_headerOptions__1mXey\",\"headerTriangle\":\"Header_headerTriangle__3hdkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"NodePage_pageWrapper__3e09h\",\"pageContentWrapper\":\"NodePage_pageContentWrapper__6gshe\",\"outerCardWrapper\":\"NodePage_outerCardWrapper__2NIxP\",\"cardWrapper\":\"NodePage_cardWrapper__2mi5t\",\"cardWrapperSelected\":\"NodePage_cardWrapperSelected__1oog0\",\"cardWrapperSettingsLoaded\":\"NodePage_cardWrapperSettingsLoaded__2P2db\",\"pageHeaderWrapper\":\"NodePage_pageHeaderWrapper__2quqO\",\"displayMasterNode\":\"NodePage_displayMasterNode__1DOjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtersGroupWrapper\":\"DisplayFiltersGroup_filtersGroupWrapper__3ApXV\",\"filterWrapper\":\"DisplayFiltersGroup_filterWrapper__14FED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeSettingsHeader\":\"NodeSettings_nodeSettingsHeader__2MYtV\",\"nodeSettingsHeaderDetails\":\"NodeSettings_nodeSettingsHeaderDetails__6MUBE\",\"nodeSettingsContent\":\"NodeSettings_nodeSettingsContent__3QX9Y\",\"loaderWrapper\":\"NodeSettings_loaderWrapper__19vFJ\",\"loading\":\"NodeSettings_loading__e3sqe\",\"closeButton\":\"NodeSettings_closeButton__2672v\",\"nodeSettingsSpinner\":\"NodeSettings_nodeSettingsSpinner__LSnRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1mK5D\",\"siteContent\":\"Dashboard_siteContent__2b2YJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myApplicationsHeader\":\"PageHeader_myApplicationsHeader__1ZyhV\",\"searchButton\":\"PageHeader_searchButton__2_K6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"ApplicationsPage_pageWrapper__3hmUP\",\"pageContentWrapper\":\"ApplicationsPage_pageContentWrapper__3WpoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"FavoritesPage_mainWrapper__1hXRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"NodeCardTransition_overlay__2QAhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deviceTypeIcon\":\"NodeCardSummary_deviceTypeIcon__PvyWE\",\"Section\":\"NodeCardSummary_Section__1XtTD\",\"IconSectionBackground\":\"NodeCardSummary_IconSectionBackground__PHObb\",\"deviceContentWrapper\":\"NodeCardSummary_deviceContentWrapper__2wPoP\",\"subTitle\":\"NodeCardSummary_subTitle__27rEo\",\"text\":\"NodeCardSummary_text__GT1PB\",\"deviceType\":\"NodeCardSummary_deviceType__3XAL_\",\"deviceName\":\"NodeCardSummary_deviceName__2tFeL\",\"deviceSettingsMenu\":\"NodeCardSummary_deviceSettingsMenu__1Imir\",\"deviceSettingsMenuIcon\":\"NodeCardSummary_deviceSettingsMenuIcon__A26Dx\",\"deviceStatus\":\"NodeCardSummary_deviceStatus__2NOXO\",\"cardSummary\":\"NodeCardSummary_cardSummary__Jrttp\",\"nodeSettingPageWrapper\":\"NodeCardSummary_nodeSettingPageWrapper__3r13p\",\"placeHolderWidth\":\"NodeCardSummary_placeHolderWidth__3dBBk\",\"nodeSettingPage\":\"NodeCardSummary_nodeSettingPage__JeDYm\",\"modalWrapper\":\"NodeCardSummary_modalWrapper__1XOcG\"};","module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenuWrapper\":\"SideMenu_sideMenuWrapper__2IDZB\",\"sideMenuTitle\":\"SideMenu_sideMenuTitle__1TZj-\",\"sideMenuItem\":\"SideMenu_sideMenuItem__a2gnL\",\"sideMenuItemIcon\":\"SideMenu_sideMenuItemIcon__nuKFs\",\"sideMenuIPinnedApps\":\"SideMenu_sideMenuIPinnedApps__3kYSq\",\"selected\":\"SideMenu_selected__2vfi7\"};","import React from \"react\";\nimport css from \"./Header.module.css\";\n\nexport const Header = () => (\n  <header className={css.contentHeader}>\n    <h1 className={css.sectionTitle}>__MAKESENSE</h1>\n    <div className={css.headerUserWrapper}>\n      <div className={css.headerUserThumbnail} />\n      <div className={css.headerUserName}>Boris Kadaner</div>\n      <div className={css.headerOptions}>\n        <div className={css.headerTriangle} />\n      </div>\n    </div>\n  </header>\n);\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class LogoutIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M32,64c8.547,0,16.583-3.329,22.627-9.374c6.045-6.044,9.374-14.079,9.374-22.626s-3.329-16.582-9.374-22.626\n                  C48.583,3.329,40.547,0,32,0C23.452,0,15.417,3.329,9.373,9.374C3.328,15.418-0.001,23.453-0.001,32s3.329,16.582,9.374,22.626\n                  C15.417,60.671,23.452,64,32,64z M10.787,10.788C16.453,5.121,23.986,2,32,2c8.013,0,15.547,3.121,21.213,8.788\n                  C58.88,16.454,62.001,23.987,62.001,32s-3.121,15.546-8.788,21.212C47.547,58.879,40.013,62,32,62\n                  c-8.014,0-15.547-3.121-21.213-8.788C5.12,47.546,1.999,40.013,1.999,32S5.12,16.454,10.787,10.788z\"\n          />\n          <rect x=\"31\" y=\"17\" width=\"2\" height=\"22\" />\n          <rect x=\"31\" y=\"43\" width=\"2\" height=\"4\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class FavoritesIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M48,4c-7.357,0-13.639,4.146-16,9.929C29.639,8.146,23.357,4,16,4C5.985,4,0,12.644,0,21\n                  c0,8.589,5.326,17.755,15.83,27.242c7.738,6.989,15.59,11.577,15.668,11.623L32,60.156l0.502-0.291\n                  c0.079-0.046,7.93-4.634,15.668-11.623C58.674,38.755,64,29.589,64,21C64,12.644,58.015,4,48,4z M32,57.833\n                  C28.031,55.41,2,38.828,2,21C2,13.627,7.237,6,16,6c7.214,0,15,4.971,15,13h2c0-8.029,7.786-13,15-13c8.763,0,14,7.627,14,15\n                  C62,38.818,35.968,55.409,32,57.833z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class ApplicationIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n        color=\"#768093\"\n      >\n        <g>\n          <path d=\"M0,58h64V6H0V58z M2,56V16h60v40H2z M62,8v6H2V8H62z\" />\n          <rect x=\"6\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"14\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"22\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"6\" y=\"24\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"32\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"40\" width=\"27\" height=\"2\" />\n          <path d=\"M37,42h21V24H37V42z M39,26h17v14H39V26z\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class SensorsIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n        color=\"#768093\"\n      >\n        <g>\n          <path d=\"M0,58h64V6H0V58z M2,56V16h60v40H2z M62,8v6H2V8H62z\" />\n          <rect x=\"6\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"14\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"22\" y=\"10\" width=\"4\" height=\"2\" />\n          <rect x=\"6\" y=\"24\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"32\" width=\"27\" height=\"2\" />\n          <rect x=\"6\" y=\"40\" width=\"27\" height=\"2\" />\n          <path d=\"M37,42h21V24H37V42z M39,26h17v14H39V26z\" />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class HelpIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M53,27h-1v-5c0-0.17-0.229-17-20-17S12,21.83,12,22v5h-1C4.935,27,0,31.935,0,38s4.935,11,11,11h3V31v-4v-5\n                  c0-0.612,0.205-15,18-15c17.739,0,17.998,14.389,18,15v5v1v20v1v3.323l-13,5.2V54H27v6h9.192L52,53.677V49h1\n                  c6.065,0,11-4.935,11-11S59.065,27,53,27z M12,47h-1c-4.963,0-9-4.038-9-9s4.037-9,9-9h1v2V47z M29,58v-2h6v2H29z M53,47h-1V29h1\n                  c4.963,0,9,4.038,9,9S57.963,47,53,47z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class AccountIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path d=\"M59,63.236l5-10V2H54v4h-4v11h2V8h2v45.236L59,63.236z M56,4h6v48.764l-3,6l-3-6V4z\" />\n          <path\n            d=\"M46,7H32.531l-0.75-3H28V0H18v4h-3.781l-0.75,3H0v57h46V7z M15.781,6H20V2h6v4h4.219l1.5,6H14.281L15.781,6z M44,62H2V9\n                  h10.969l-1.25,5h22.562l-1.25-5H44V62z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class DashboardSettingsIcon extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        className={this.props.className}\n        version=\"1.1\"\n        id=\"Layer_1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"64px\"\n        height=\"64px\"\n        viewBox=\"0 0 64 64\"\n        enableBackground=\"new 0 0 64 64\"\n      >\n        <g>\n          <path\n            d=\"M53.144,20.271L59.414,14L50,4.586l-6.27,6.27L39,9.279V0H25v9.279l-4.73,1.576L14,4.586L4.586,14l6.27,6.271L9.279,25H0\n                  v14h9.279l1.577,4.729L4.586,50L14,59.414l6.27-6.27L25,54.721V64h14v-9.279l4.73-1.576l6.27,6.27L59.414,50l-6.27-6.271L54.721,39\n                  H64V25h-9.279L53.144,20.271z M62,37h-8.721l-2.423,7.271L56.586,50L50,56.586l-5.73-5.73L37,53.279V62H27v-8.721l-7.27-2.424\n                  L14,56.586L7.414,50l5.73-5.729L10.721,37H2V27h8.721l2.423-7.271L7.414,14L14,7.414l5.73,5.73L27,10.721V2h10v8.721l7.27,2.424\n                  L50,7.414L56.586,14l-5.73,5.729L53.279,27H62V37z\"\n          />\n          <path\n            d=\"M32,25c-3.86,0-7,3.141-7,7s3.14,7,7,7s7-3.141,7-7S35.86,25,32,25z M32,37c-2.757,0-5-2.243-5-5s2.243-5,5-5s5,2.243,5,5\n                  S34.757,37,32,37z\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.css\";\nimport {\n  FavoritesIcon,\n  ApplicationIcon,\n  SensorsIcon,\n  HelpIcon\n} from \"../../IconWrappers\";\nimport {SideMenuPageSelectorProps} from \"../SideMenu\";\nimport classNames from \"classnames\";\nimport {DashboardPages} from \"../../../types/internal-types\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\ninterface SideMenuLink extends SideMenuPageSelectorProps {\n  pageName: DashboardPages;\n  children?: React.ReactNode;\n}\n\nexport class GeneralSection extends React.Component<OwnProps> {\n  render() {\n    return (\n      <section>\n        <div className={css.sideMenuTitle}>GENERAL</div>\n        <SideMenuLink {...this.props} pageName=\"FAVORITES_PAGE\">\n          <FavoritesIcon className={css.sideMenuItemIcon} />\n          Favorites\n        </SideMenuLink>\n        <SideMenuLink {...this.props} pageName=\"APPLICATION_PAGE\">\n          <ApplicationIcon className={css.sideMenuItemIcon} />\n          Applications\n        </SideMenuLink>\n        <SideMenuLink {...this.props} pageName=\"SENSORS_PAGE\">\n          <SensorsIcon className={css.sideMenuItemIcon} />\n          Devices\n        </SideMenuLink>\n        <SideMenuLink {...this.props} pageName=\"HELP_PAGE\">\n          <HelpIcon className={css.sideMenuItemIcon} />\n          Help\n        </SideMenuLink>\n      </section>\n    );\n  }\n}\n\nconst SideMenuLink = ({\n  pageSelector,\n  selectedPage,\n  children,\n  pageName\n}: SideMenuLink) => (\n  <a\n    onClick={() => pageSelector(pageName)}\n    className={classNames({\n      [css.sideMenuItem]: true,\n      [css.selected]: selectedPage === pageName\n    })}\n  >\n    {<>{children}</>}\n  </a>\n);\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.css\";\nimport {AccountIcon, DashboardSettingsIcon} from \"../../IconWrappers\";\nimport {SideMenuPageSelectorProps} from \"../SideMenu\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\nexport class SettingsSection extends React.Component<OwnProps> {\n  render() {\n    return (\n      <section>\n        <div className={css.sideMenuTitle}>SETTINGS</div>\n        <a className={css.sideMenuItem}>\n          <AccountIcon className={css.sideMenuItemIcon} />\n          Account\n        </a>\n        <a className={css.sideMenuItem}>\n          <DashboardSettingsIcon className={css.sideMenuItemIcon} />\n          Dashboard Settings\n        </a>\n      </section>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"../SideMenu.module.css\";\nimport {SideMenuPageSelectorProps} from \"../SideMenu\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\nexport class PinnedAppsSection extends React.Component<OwnProps> {\n  render() {\n    return (\n      <section className={css.sideMenuIPinnedApps}>\n        <div className={css.sideMenuTitle}>PINNED APPS</div>\n      </section>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./SideMenu.module.css\";\nimport {LogoutIcon} from \"../IconWrappers/LogoutIcon\";\nimport {\n  GeneralSection,\n  PinnedAppsSection,\n  SettingsSection\n} from \"./MenuSections\";\nimport {DashboardPages} from \"../../types/internal-types\";\n\nexport interface OwnProps extends SideMenuPageSelectorProps {}\n\nexport interface SideMenuPageSelectorProps {\n  pageSelector: (selectedPage: DashboardPages) => void;\n  selectedPage: DashboardPages;\n}\n\nexport default class SideMenu extends React.Component<OwnProps> {\n  render() {\n    return (\n      <nav className={css.sideMenuWrapper}>\n        <div>\n          <GeneralSection {...this.props} />\n          <SettingsSection {...this.props} />\n          <PinnedAppsSection {...this.props} />\n        </div>\n        <div className={css.sideMenuItem}>\n          <LogoutIcon className={css.sideMenuItemIcon} />\n          Logout\n        </div>\n      </nav>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./ApplicationTile.module.css\";\nimport Modal from \"react-responsive-modal\";\n\nexport interface ApplicationTileProps {\n  name: string;\n  appThumbnail: string;\n  viewportSize: {\n    width: number;\n    height: number;\n  };\n}\n\nconst initialApplicationTileState = {isMkAppOpen: false};\n\nexport class ApplicationTile extends React.Component<\n  ApplicationTileProps,\n  typeof initialApplicationTileState\n> {\n  readonly state = initialApplicationTileState;\n\n  renderThumbnail = () => {\n    const {appThumbnail, name} = this.props;\n    return (\n      <div className={css.applicationThumbnailWrapper}>\n        {appThumbnail ? (\n          <div className={css.imageThumbnail}>\n            <img src={appThumbnail} className={css.imageSize} />\n          </div>\n        ) : (\n          <div className={css.textThumbnail}>\n            {name.charAt(0).toUpperCase()}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  openMKAppMainView = () => {\n    this.setState({isMkAppOpen: true});\n  };\n\n  closeMKAppMainView = () => {\n    this.setState({isMkAppOpen: false});\n  };\n\n  render() {\n    const {viewportSize} = this.props;\n    const {isMkAppOpen} = this.state;\n\n    return (\n      <div\n        onDoubleClick={this.openMKAppMainView}\n        className={`\n          ${css.applicationWrapper} \n          ${css.smartHome}`}\n      >\n        <div className={css.applicationTitle}>\n          {this.renderThumbnail()}\n          {this.props.name}\n        </div>\n        <div className={css.applicationContent}>\n          {isMkAppOpen ? (\n            <Modal\n              closeOnEsc\n              classNames={{modal: css.mkAppModalWrapper}}\n              onClose={this.closeMKAppMainView}\n              open={this.state.isMkAppOpen}\n            >\n              <iframe\n                src=\"\"\n                frameBorder=\"0\"\n                width={viewportSize.width}\n                height={viewportSize.height}\n              />\n            </Modal>\n          ) : (\n            <div>put knobs here</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","const thumb = require(\"./assets/img/react_logo.svg\");\nexport const mockAppList = [\n  {\n    name: \"Smart Home\",\n    id: \"2323-234234-1234\",\n    viewportSize: {\n      width: 800,\n      height: 800\n    }\n  }\n];\n\nexport const mockDeviceList = [\n  {\n    enabled: 1,\n    id: 6,\n    type: 999,\n    lastUpdateTs: 1532473013,\n    uuid: \"ac6de837-7863-72a9-c789-a0aae7e9d010\"\n  }\n];\nexport const thumbnail = thumb;\n","import {mockAppList, thumbnail} from \"../../serverApiMocks\";\n\nimport {\n  NodeList,\n  MkAppDescription,\n  GetUserNodeListDTO,\n  UUID,\n  OnGetNodeInfoCallbackDTO,\n  NoteDetails,\n  NodeSettingsDTO,\n  NodeSettings\n} from \"../../types/internal-types\";\n\nexport class DashboardServerApi {\n  makeSenseApi = window.MkSAPIBuilder.GetInstance();\n\n  constructor() {\n    this.makeSenseApi.ConnectGateway(() =>\n      console.log(\"Dashboard connected to gateway\")\n    );\n    this.makeSenseApi.Gateway.OnGatewayDataArrivedCallback = (data: any) => {};\n  }\n\n  getApplicationsList = async () => {\n    console.log(\"/applications\");\n    return Promise.resolve(mockAppList as MkAppDescription[]);\n  };\n\n  getApplicationThumbnail = () => {\n    console.log(\"/applications/:appId:/thumbnail\");\n    return Promise.resolve(thumbnail);\n  };\n\n  getNodeDetails = (uuid: UUID) => {\n    const nodeInfoPromise = new Promise<NoteDetails>((resolve) => {\n      this.makeSenseApi.GetNodeInfo(\n        uuid,\n        (response: OnGetNodeInfoCallbackDTO, error: any) => {\n          const payload = response && response.data && response.data.payload;\n          resolve(payload);\n        }\n      );\n    });\n    return nodeInfoPromise;\n  };\n\n  getNodeSettings = (uuid: UUID): Promise<NodeSettings> => {\n    return Promise.all([\n      this.getNodeHtmlSettings(uuid),\n      this.getNodeScriptsSettings(uuid)\n    ]).then((nodeSettingsFiles) => {\n      const [html, scripts] = nodeSettingsFiles;\n      return {html: [html], scripts: [scripts], css: []} as any;\n    });\n  };\n\n  private getNodeScriptsSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"js\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  private getNodeHtmlSettings = (uuid: UUID) => {\n    const promise = new Promise<string>((resolve) => {\n      this.makeSenseApi.GetFileContent(\n        uuid,\n        {\n          ui_type: \"config\",\n          file_name: \"\",\n          file_type: \"html\"\n        },\n        (response: NodeSettingsDTO) => {\n          resolve(response.data.payload.content);\n        }\n      );\n    });\n    return promise;\n  };\n\n  getNodeList = () => {\n    const deviceListDataPromise = new Promise<NodeList>((resolve, reject) => {\n      this.makeSenseApi.Webface.GetUserNodeList(\n        (response: GetUserNodeListDTO) => {\n          const devices = response.nodes.data.map(\n            (device: GetUserNodeListDTO[\"nodes\"][\"data\"][0]) => ({\n              uuid: device.uuid\n            })\n          );\n          resolve(devices);\n          if (response && response.error) {\n            reject(\"OnGatewayDataArrivedCallback received an error\");\n          }\n        }\n      );\n    });\n\n    return deviceListDataPromise;\n  };\n}\n","import * as React from \"react\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\n\nexport interface DashboardContext {\n  dashboardServerApi: DashboardServerApi;\n}\n\nexport const DashboardContext = React.createContext<DashboardContext>({\n  dashboardServerApi: new DashboardServerApi()\n});\n","import {MkAppDescription} from \"../../types/internal-types\";\nimport * as React from \"react\";\nimport {ApplicationTileProps} from \"../DashboardPages/ApplicationsPage/ApplicationTile\";\nimport {DashboardContext} from \"../Providers\";\n\ninterface AppLoaderProps {\n  mkAppInitData: MkAppDescription;\n  render: (loadedMkAppProps: ApplicationTileProps) => React.ReactNode;\n}\n\nconst innitialState = {\n  appThumbnail: null as any\n};\n\nexport class AppLoader extends React.Component<\n  AppLoaderProps,\n  typeof innitialState\n> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    //there shouls be cacsh managment here, so that Apploader wont fetch app list every time\n    try {\n      const appThumbnail = await this.context.dashboardServerApi.getApplicationThumbnail();\n      this.setState({appThumbnail});\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.render({\n          appThumbnail: this.state.appThumbnail,\n          ...this.props.mkAppInitData\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport css from \"./PageHeader.module.css\";\n\nexport interface OwnProps {\n  children: JSX.Element[] | JSX.Element | string;\n}\nexport const PageHeader = ({children}: OwnProps) => (\n  <header className={css.myApplicationsHeader}>\n    {children}\n    <div className={css.searchButton}>Search...</div>\n  </header>\n);\n","import * as React from \"react\";\nexport const ApplicationTileSkeleton = () => (\n    <div>\n        SKELETON\n    </div>\n);","import {ApplicationTile} from \"./ApplicationTile\";\nimport {AppLoader} from \"../../AppLoader/AppLoader\";\nimport {MkAppDescription} from \"../../../types/internal-types\";\nimport {PageHeader} from \"../PageHeader\";\nimport * as React from \"react\";\nimport css from \"./ApplicationsPage.module.css\";\nimport {ApplicationTileSkeleton} from \"../../Skeleton\";\nimport {DashboardContext} from \"../../Providers\";\n\nconst innitialApplicationsPageState = {appList: [] as MkAppDescription[]};\n\nexport class ApplicationsPage extends React.Component<\n  {},\n  typeof innitialApplicationsPageState\n> {\n  readonly state = innitialApplicationsPageState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  public async componentDidMount() {\n    const appList = await this.context.dashboardServerApi.getApplicationsList();\n    this.setState({appList});\n  }\n\n  render() {\n    const {appList} = this.state;\n    return (\n      <section className={css.pageWrapper}>\n        <PageHeader>MY APPLICATIONS</PageHeader>\n        <div className={css.pageContentWrapper}>\n          {appList &&\n            appList.map((mkApp: MkAppDescription, index) => (\n              <AppLoader\n                key={index}\n                mkAppInitData={mkApp}\n                render={(loadedProps) => {\n                  return loadedProps ? (\n                    <ApplicationTile {...loadedProps} />\n                  ) : (\n                    <ApplicationTileSkeleton />\n                  );\n                }}\n              />\n            ))}\n        </div>\n      </section>\n    );\n  }\n}\n","import {PageHeader} from \"../PageHeader\";\nimport * as React from \"react\";\nimport css from \"./FavoritesPage.module.css\";\n\nexport class FavoritesPage extends React.Component {\n  render() {\n    return (\n      <section className={css.mainWrapper}>\n        <PageHeader>Favorites</PageHeader>\n        <div>THis is fav page AAAAAA!!!</div>\n      </section>\n    );\n  }\n}\n","import * as React from \"react\";\nimport styled, {keyframes} from \"styled-components\";\n\nexport const SkeletonShimmer: React.SFC<{width: string; color: string}> = ({\n  width,\n  color\n}) => {\n  const shimmerAnimations = keyframes`\n    0% {\n      background-position: 0 0;\n    }\n  \n    100% {\n      background-position: ${width} 0;\n    }\n  `;\n\n  const Shimmer = styled.div`\n    background-image: linear-gradient(\n      to right,\n      ${color} 0,\n      rgba(249, 250, 251, 0.8) 10%,\n      ${color} 20%\n    );\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: absolute;\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: ${shimmerAnimations};\n    animation-timing-function: linear;\n  `;\n\n  return <Shimmer />;\n};\n","import * as React from \"react\";\nimport css from \"./Text.module.css\";\n\ntype Weight = \"thin\" | \"normal\" | \"bold\";\n\nexport interface TextProps {\n  fontSize: string;\n  color: string;\n  skeletonColor: string;\n  weight: Weight;\n  width: string;\n  showSkeleton?: boolean;\n  children?: JSX.Element | string | number;\n}\n\nexport const Text: React.SFC<TextProps> = ({\n  fontSize,\n  color,\n  weight,\n  width,\n  skeletonColor,\n  showSkeleton,\n  children\n}) => {\n  const fontWeight = (weight: Weight) => {\n    switch (weight) {\n      case \"thin\":\n        return {\n          fontFamily: '\"Open Sans Light\", sans-serif',\n          weight\n        };\n      case \"normal\":\n        return {\n          fontFamily: '\"Open Sans Normal\", sans-serif',\n          weight\n        };\n      case \"bold\":\n        return {\n          fontFamily: '\"Open Sans Bold\", sans-serif',\n          weight\n        };\n    }\n  };\n\n  const commonStyle = {\n    fontSize,\n    color,\n    display: \"inline-block\",\n    height: fontSize,\n    lineHeight: fontSize,\n    ...fontWeight(weight)\n  };\n\n  const styles = {};\n\n  const skeletonStyles = {\n    backgroundColor: skeletonColor,\n    content: \"\",\n    width\n  };\n\n  return (\n    <>\n      {showSkeleton ? (\n        <div style={{...commonStyle, ...skeletonStyles}} />\n      ) : (\n        <div style={{...commonStyle, ...styles}}>{children}</div>\n      )}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport {Text} from \"../../../Text\";\n\nexport interface OwnProps {\n  showSkeleton: boolean;\n  children?: string[] | string | number;\n}\n\nexport const Subtitle: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    fontSize=\"10px\"\n    color=\"#768093\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"bold\"\n    width=\"70px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n\nexport const CardText: React.SFC<OwnProps> = ({showSkeleton, children}) => (\n  <Text\n    color=\"#2f3148\"\n    skeletonColor=\"#ecedf4\"\n    weight=\"normal\"\n    fontSize=\"14px\"\n    width=\"100px\"\n    showSkeleton={showSkeleton}\n  >\n    <>{children}</>\n  </Text>\n);\n","import * as React from \"react\";\nimport css from \"./NodeCardSummary.module.css\";\nimport {NoteDetails, UUID} from \"../../../../types/internal-types\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faCodeBranch} from \"@fortawesome/free-solid-svg-icons\";\nimport {DashboardContext} from \"../../../Providers\";\nimport {SkeletonShimmer} from \"../../../SkeletonShimmer\";\nimport {Subtitle, CardText} from \"./NodeCardTypography\";\nimport {NodeSettings} from \"../NodeSettings/NodeSettings\";\n\nexport interface OwnProps {\n  isLoading: boolean;\n  deviceSummaryData: NoteDetails;\n  onCardSettingsClickCallback?: () => void;\n}\n\ninterface OwnState {\n  isNodeSettingsLoaded: boolean;\n}\n\nexport class NodeCardSummary extends React.Component<OwnProps, OwnState> {\n  static contextType = DashboardContext;\n  readonly state = {\n    isNodeSettingsLoaded: true,\n    isNodeSettingsOpenned: false\n  };\n  context!: React.ContextType<typeof DashboardContext>;\n\n  constructor(props: OwnProps) {\n    super(props);\n  }\n\n  handleNodeSettingsClick = () => {\n    this.props.onCardSettingsClickCallback &&\n      this.props.onCardSettingsClickCallback();\n  };\n\n  deviceTypeSection = () => (\n    <div\n      className={`${css.Section} ${css.deviceContentWrapper} ${css.deviceType}`}\n    >\n      <div className={css.subTitle}>\n        <Subtitle showSkeleton={this.props.isLoading}>DEVICE TYPE</Subtitle>\n      </div>\n      <CardText showSkeleton={this.props.isLoading}>\n        {this.props.deviceSummaryData.type}\n      </CardText>\n    </div>\n  );\n\n  deviceNameSection = () => {\n    const {\n      deviceSummaryData: {description, name}\n    } = this.props;\n    const {isLoading} = this.props;\n    return (\n      <div\n        className={`${css.Section} ${css.deviceContentWrapper} ${\n          css.deviceName\n        }`}\n      >\n        <div className={css.subTitle}>\n          <Subtitle showSkeleton={isLoading}>DEVICE NAME</Subtitle>\n        </div>\n        <div className={css.text}>\n          <CardText showSkeleton={isLoading}>\n            {name} - {description}\n          </CardText>\n        </div>\n      </div>\n    );\n  };\n\n  deviceIdSection = () => {\n    return (\n      <div\n        className={`${css.Section} ${css.deviceContentWrapper} ${\n          css.deviceName\n        }`}\n      >\n        <div className={css.subTitle}>\n          <Subtitle showSkeleton={this.props.isLoading}>DEVICE ID</Subtitle>\n        </div>\n        <div className={css.text}>\n          <CardText showSkeleton={this.props.isLoading}>\n            {this.props.deviceSummaryData.uuid}\n          </CardText>\n        </div>\n      </div>\n    );\n  };\n\n  deviceConnectionSection = () => {\n    return (\n      <div\n        className={`${css.Section} ${css.deviceContentWrapper} ${\n          css.deviceStatus\n        }`}\n      >\n        <div className={css.subTitle}>\n          <Subtitle showSkeleton={this.props.isLoading}>STATUS</Subtitle>\n        </div>\n        <div className={css.text}>\n          <CardText showSkeleton={this.props.isLoading}>Connected</CardText>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const {isLoading} = this.props;\n    return (\n      <>\n        <div className={css.cardSummary}>\n          <div className={`${css.Section} ${css.IconSectionBackground}`}>\n            <FontAwesomeIcon icon={faCodeBranch} size=\"2x\" color=\"#768093\" />\n          </div>\n          {this.deviceTypeSection()}\n          {this.deviceNameSection()}\n          {this.deviceIdSection()}\n          {this.deviceConnectionSection()}\n          <div\n            className={`${css.deviceContentWrapper} ${css.deviceSettingsMenu}`}\n          >\n            <span\n              className={css.deviceSettingsMenuIcon}\n              onClick={this.handleNodeSettingsClick}\n            >\n              <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#768093\" />\n            </span>\n          </div>\n          {isLoading && (\n            <SkeletonShimmer\n              width=\"1400px\"\n              color=\"rgba(249, 250, 251, 0.001)\"\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {DashboardContext} from \"../../../Providers\";\nimport css from \"./NodeCardTransition.module.css\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport ReactDOM from \"react-dom\";\n\ninterface OwnProps {\n  children: ({\n    onCardSettingsOpenCloseAnimation,\n    isNodeSummaryOpen,\n    isNodeSettingsloaded,\n    getTranslationDistance,\n    onNodeSettingsloaded\n  }: {\n    onNodeSettingsloaded: () => void;\n    isNodeSummaryOpen: boolean;\n    isNodeSettingsloaded: boolean;\n    getTranslationDistance: (index: number) => number;\n    onCardSettingsOpenCloseAnimation: () => void;\n  }) => React.ReactNode;\n}\n\nconst ownState = {\n  isNodeSummaryOpen: false,\n  isNodeSettingsloaded: false\n};\n\nexport class NodeCardTransition extends React.Component<\n  OwnProps,\n  typeof ownState\n> {\n  readonly state = ownState;\n\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  componentDomRef: any = null;\n\n  componentDidMount() {\n    this.componentDomRef = ReactDOM.findDOMNode(this);\n  }\n\n  onCardSettingsOpenCloseAnimation = () => {\n    const prevStateNodeSummaryOpen = this.state.isNodeSummaryOpen;\n    const prevStateNodeSettingsloaded = this.state.isNodeSettingsloaded;\n    this.setState({\n      isNodeSummaryOpen: !prevStateNodeSummaryOpen,\n      isNodeSettingsloaded: !prevStateNodeSettingsloaded\n    });\n  };\n\n  onNodeSettingsloaded = () => {\n    this.setState({isNodeSettingsloaded: true});\n  };\n\n  getTranslationDistance = (index: number) => {\n    return this.componentDomRef.getBoundingClientRect().top - 145; //todo: magic number please refactor\n  };\n\n  closeOnOverlayClick = () => {\n    this.setState({isNodeSummaryOpen: false});\n  };\n\n  render() {\n    const {isNodeSummaryOpen, isNodeSettingsloaded} = this.state;\n    return (\n      <>\n        {isNodeSummaryOpen && (\n          <ReactCSSTransitionGroup\n            transitionEnterTimeout={500}\n            transitionLeaveTimeout={300}\n            transitionName=\"overlay\"\n          >\n            <div onClick={this.closeOnOverlayClick} className={css.overlay} />\n          </ReactCSSTransitionGroup>\n        )}\n        {this.props.children({\n          onCardSettingsOpenCloseAnimation: this\n            .onCardSettingsOpenCloseAnimation,\n          onNodeSettingsloaded: this.onNodeSettingsloaded,\n          isNodeSummaryOpen,\n          isNodeSettingsloaded,\n          getTranslationDistance: this.getTranslationDistance\n        })}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {DashboardContext} from \"../../../Providers\";\nimport {UUID, NoteDetails} from \"../../../../types/internal-types\";\n\ninterface OwnProps {\n  uuid: UUID;\n  children: ({\n    isLoading,\n    deviceSummaryData\n  }: {\n    isLoading: boolean;\n    deviceSummaryData: NoteDetails | null;\n  }) => React.ReactNode;\n}\n\nconst ownState = {\n  isLoading: true,\n  deviceSummaryData: {} as NoteDetails | null\n};\n\nexport class NodeCardWrapper extends React.Component<\n  OwnProps,\n  typeof ownState\n> {\n  readonly state = ownState;\n\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    const deviceSummaryData = await this.context.dashboardServerApi.getNodeDetails(\n      this.props.uuid\n    );\n    this.setState({deviceSummaryData, isLoading: false});\n  }\n\n  render() {\n    const {deviceSummaryData, isLoading} = this.state;\n    return (\n      <>\n        {this.props.children({\n          deviceSummaryData,\n          isLoading\n        })}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {DashboardContext} from \"../Providers\";\n\ninterface OwnProps {\n  html: string;\n  scripts: string;\n}\nconst ownState = {};\n\nexport class Portal extends React.Component<OwnProps, typeof ownState> {\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n  readonly state = ownState;\n  private iframeRoot = React.createRef<HTMLIFrameElement>();\n\n  componentDidMount() {\n    this.createIframeContent();\n  }\n\n  decodeDomProperty(hexxStream: string) {\n    const hexString = hexxStream.toString(); //force conversion\n    let parstedString = \"\";\n    for (\n      let i = 0;\n      i < hexString.length && hexString.substr(i, 2) !== \"00\";\n      i += 2\n    )\n      parstedString += String.fromCharCode(\n        parseInt(hexString.substr(i, 2), 16)\n      );\n    return parstedString;\n  }\n\n  createIframeContent() {\n    if (this.iframeRoot.current) {\n      const htmlString = this.decodeDomProperty(this.props.html);\n      const script = this.decodeDomProperty(this.props.scripts);\n      const iframeWrapper: any = ReactDOM.findDOMNode(this.iframeRoot.current);\n\n      if (iframeWrapper && iframeWrapper.contentDocument) {\n        iframeWrapper.contentDocument.open();\n        iframeWrapper.contentDocument.write(htmlString);\n        iframeWrapper.contentDocument.write(`<script>${script}</script>`);\n        iframeWrapper.contentDocument.close();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <iframe\n          style={{display: \"block\", width: \"100%\", height: \"100%\"}}\n          frameBorder=\"0\"\n          ref={this.iframeRoot}\n        />\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport interface IconProps {\n  className: string;\n}\n\nexport class CloseButton extends React.Component<IconProps> {\n  render() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"28\"\n        height=\"28\"\n        viewBox=\"0 0 36 36\"\n        className={this.props.className}\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {DashboardContext} from \"../../../Providers\";\nimport css from \"./NodeSettings.module.css\";\nimport {UUID} from \"../../../../types/internal-types\";\nimport {Portal} from \"../../../Portal\";\nimport {CloseButton} from \"../../../IconWrappers/CloseButton\";\n\ninterface OwnProps {\n  deviceUuid: UUID;\n  nodeName: string;\n  closeModal: () => void;\n  onCardSettingsLoaded?: () => void;\n}\n\nconst ownState = {\n  html: [\"\"],\n  scripts: [\"\"],\n  isLoadingFiles: true\n};\n\nexport class NodeSettings extends React.Component<OwnProps, typeof ownState> {\n  readonly state = ownState;\n\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    const nodeSettings = await this.context.dashboardServerApi.getNodeSettings(\n      this.props.deviceUuid\n    );\n    this.setState({...nodeSettings, isLoadingFiles: false}, () => {\n      this.props.onCardSettingsLoaded && this.props.onCardSettingsLoaded();\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div key=\"node-settings\" className={css.nodeSettingsHeader}>\n          <div>\n            NODE SETTINGS\n            <span className={css.nodeSettingsHeaderDetails}>\n              {this.props.nodeName}\n            </span>\n          </div>\n          <div onClick={this.props.closeModal}>\n            <CloseButton className={css.closeButton} />\n          </div>\n        </div>\n        <div className={css.nodeSettingsContent}>\n          {this.state.isLoadingFiles ? (\n            <div className={css.loading}>\n              <div className={css.nodeSettingsSpinner} /> <div> Loading...</div>\n            </div>\n          ) : (\n            <Portal scripts={this.state.scripts[0]} html={this.state.html[0]} />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./DisplayFiltersGroup.module.css\";\n\ninterface OwnProps {}\n\nexport class DisplayFiltersGroup extends React.Component<OwnProps> {\n  render() {\n    return (\n      <>\n        <div className={css.filtersGroupWrapper}>{this.props.children}</div>\n      </>\n    );\n  }\n}\n","import {NoMaster} from \"./NoMaster\";\nimport {Advanced} from \"./Advanced\";\nexport * from \"./DisplayFiltersGroup\";\n\nexport const DisplayFilters = {\n  NoMaster,\n  Advanced\n};\n","import * as React from \"react\";\nimport css from \"./DisplayFiltersGroup.module.css\";\n\ninterface OwnProps {\n  onFilterClick: () => void;\n}\n\nexport class NoMaster extends React.Component<OwnProps> {\n  render() {\n    const {onFilterClick} = this.props;\n    return (\n      <div onClick={onFilterClick} className={`${css.filterWrapper}`}>\n        With Master\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./DisplayFiltersGroup.module.css\";\n\ninterface OwnProps {\n  isActive: boolean;\n}\n\nexport class Advanced extends React.Component<OwnProps> {\n  render() {\n    const {isActive} = this.props;\n    return (\n      <div className={`${css.filterWrapper} ${isActive && css.active}`}>\n        Advanced\n      </div>\n    );\n  }\n}\n","import {PageHeader} from \"../PageHeader\";\nimport * as React from \"react\";\nimport css from \"./NodePage.module.css\";\nimport {NodeCardSummary} from \"./NodeCardSummary\";\nimport {DashboardContext} from \"../../Providers\";\nimport {NodeList, NoteDetails} from \"../../../types/internal-types\";\nimport {NodeCardTransition} from \"./NodeCardTransition/NodeCardTransition\";\nimport classNames from \"classnames\";\nimport {NodeCardWrapper} from \"./NodeCardWrapper/NodeCardWrapper\";\nimport {NodeSettings} from \"./NodeSettings/NodeSettings\";\nimport {DisplayFiltersGroup} from \"./DisplayFiltesGroup/DisplayFiltersGroup\";\nimport {DisplayFilters} from \"./DisplayFiltesGroup\";\n\nexport interface OwnProps {}\n\nconst innitialState = {\n  nodeList: [] as NodeList,\n  filteredMaster: [] as NodeList,\n  isDisplayWithMasterNodes: true\n};\n\nexport class NodesPage extends React.Component<OwnProps, typeof innitialState> {\n  readonly state = innitialState;\n  static contextType = DashboardContext;\n  context!: React.ContextType<typeof DashboardContext>;\n\n  async componentDidMount() {\n    const data: NodeList = await this.context.dashboardServerApi.getNodeList();\n    this.setState({nodeList: data});\n  }\n\n  onDisplayMasterNodeChecked = () => {\n    this.setState({isDisplayWithMasterNodes: false}, () => {\n      this.state.filteredMaster = this.state.nodeList.filter((node: any) => {\n        node.type !== 1;\n      });\n    });\n  };\n\n  render() {\n    const {nodeList, filteredMaster, isDisplayWithMasterNodes} = this.state;\n    const list = isDisplayWithMasterNodes ? nodeList : filteredMaster;\n    return (\n      <>\n        <section className={css.pageWrapper}>\n          <PageHeader>\n            <div className={css.pageHeaderWrapper}>\n              MY DEVICES\n              <DisplayFiltersGroup>\n                <DisplayFilters.NoMaster\n                  onFilterClick={this.onDisplayMasterNodeChecked}\n                />\n                <DisplayFilters.Advanced\n                  isActive={this.state.isDisplayWithMasterNodes}\n                />\n              </DisplayFiltersGroup>\n            </div>\n          </PageHeader>\n          <div className={css.pageContentWrapper}>\n            {list.map((nodeData, index) => (\n              <NodeCardTransition key={index}>\n                {({\n                  onCardSettingsOpenCloseAnimation,\n                  isNodeSummaryOpen,\n                  onNodeSettingsloaded,\n                  getTranslationDistance,\n                  isNodeSettingsloaded\n                }) => {\n                  return (\n                    <NodeCardWrapper uuid={nodeData.uuid}>\n                      {({isLoading, deviceSummaryData}) => {\n                        return (\n                          <>\n                            {deviceSummaryData && (\n                              <div className={css.outerCardWrapper}>\n                                <section\n                                  style={\n                                    isNodeSummaryOpen\n                                      ? {\n                                          transform: `translateY(-${getTranslationDistance(\n                                            index\n                                          )}px`\n                                        }\n                                      : {}\n                                  }\n                                  className={classNames({\n                                    [css.cardWrapper]: true,\n                                    [css.cardWrapperSelected]: isNodeSummaryOpen,\n                                    [css.cardWrapperSettingsLoaded]: isNodeSettingsloaded\n                                  })}\n                                >\n                                  <>\n                                    {isNodeSummaryOpen ? (\n                                      <NodeSettings\n                                        nodeName={`${\n                                          deviceSummaryData.name\n                                        } - ${deviceSummaryData.description}`}\n                                        deviceUuid={deviceSummaryData.uuid}\n                                        onCardSettingsLoaded={\n                                          onNodeSettingsloaded\n                                        }\n                                        closeModal={\n                                          onCardSettingsOpenCloseAnimation\n                                        }\n                                      />\n                                    ) : (\n                                      <NodeCardSummary\n                                        key={index}\n                                        deviceSummaryData={deviceSummaryData}\n                                        isLoading={isLoading}\n                                        onCardSettingsClickCallback={\n                                          onCardSettingsOpenCloseAnimation\n                                        }\n                                      />\n                                    )}\n                                  </>\n                                </section>\n                              </div>\n                            )}\n                          </>\n                        );\n                      }}\n                    </NodeCardWrapper>\n                  );\n                }}\n              </NodeCardTransition>\n            ))}\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport css from \"./Dashboard.module.css\";\nimport {Header} from \"../Header/Header\";\nimport SideMenu from \"../SideMenu/SideMenu\";\nimport {ApplicationsPage, NodesPage} from \"../DashboardPages\";\nimport {DashboardPages} from \"../../types/internal-types\";\n\nexport interface DashboardProps {}\n\nconst innitialDashboardState: DashboardState = {\n  selectedDashboardPage: \"APPLICATION_PAGE\"\n};\n\ninterface DashboardState {\n  selectedDashboardPage: DashboardPages;\n}\n\nexport class Dashboard extends React.Component<DashboardProps, DashboardState> {\n  readonly state = innitialDashboardState;\n\n  selectDashboardPage = (selectedPage: DashboardPages) => {\n    this.setState({selectedDashboardPage: selectedPage});\n  };\n\n  render() {\n    const {selectedDashboardPage} = this.state;\n    return (\n      <div className={css.root}>\n        <Header />\n        <main className={css.siteContent}>\n          <SideMenu\n            pageSelector={this.selectDashboardPage}\n            selectedPage={selectedDashboardPage}\n          />\n          {selectedDashboardPage === \"APPLICATION_PAGE\" && <ApplicationsPage />}\n          {selectedDashboardPage === \"SENSORS_PAGE\" && <NodesPage />}\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as React from \"react\";\nimport {Dashboard} from \"../Dashboard\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {DashboardContext} from \"../Providers\";\nimport {DashboardServerApi} from \"../../services/DashboardServerApi\";\nimport \"./fonts.module.css\";\nimport \"./global.module.css\";\n\nexport const App = () => (\n  <BrowserRouter>\n    <DashboardContext.Provider\n      value={{dashboardServerApi: new DashboardServerApi()}}\n    >\n      <Dashboard />\n    </DashboardContext.Provider>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}